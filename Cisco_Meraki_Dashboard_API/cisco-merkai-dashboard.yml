openapi: 3.0.0
info:
  title: Meraki Dashboard API - v1.9.0
  description: >
    The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI
    specification.


    > Date: 05 May, 2021

    >

    > [What's New](https://meraki.io/whats-new/)


    ---


    [API Documentation](https://meraki.io/api)


    [Community Support](https://meraki.io/community)


    [Meraki Homepage](https://www.meraki.com)
  version: 1.0.0
servers:
  - url: http://{{baseurl}}
components:
  securitySchemes:
    apikeyAuth:
      type: http
      scheme: apikey
security:
  - apikeyAuth: []
tags:
  - name: GENERAL
  - name: GENERAL > Devices
  - name: GENERAL > Devices > Configure
  - name: GENERAL > Devices > Configure > Management Interface
  - name: GENERAL > Devices > Live Tools
  - name: GENERAL > Devices > Monitor
  - name: GENERAL > Devices > Monitor > Clients
  - name: GENERAL > Devices > Monitor > Lldp Cdp
  - name: GENERAL > Devices > Monitor > Loss And Latency History
  - name: GENERAL > Networks
  - name: GENERAL > Networks > Configure
  - name: GENERAL > Networks > Configure > Alerts
  - name: GENERAL > Networks > Configure > Alerts > settings
  - name: GENERAL > Networks > Configure > Clients
  - name: GENERAL > Networks > Configure > Clients > Policy
  - name: GENERAL > Networks > Configure > Clients > Splash Authorization Status
  - name: GENERAL > Networks > Configure > Devices
  - name: GENERAL > Networks > Configure > Firmware Upgrades
  - name: GENERAL > Networks > Configure > Firmware Upgrades > Rollbacks
  - name: GENERAL > Networks > Configure > Floor Plans
  - name: GENERAL > Networks > Configure > Group Policies
  - name: GENERAL > Networks > Configure > Meraki Auth Users
  - name: GENERAL > Networks > Configure > Mqtt Brokers
  - name: GENERAL > Networks > Configure > Netflow
  - name: GENERAL > Networks > Configure > Pii
  - name: GENERAL > Networks > Configure > Pii > Pii Keys
  - name: GENERAL > Networks > Configure > Pii > Requests
  - name: GENERAL > Networks > Configure > Pii > Sm Devices For Key
  - name: GENERAL > Networks > Configure > Pii > Sm Owners For Key
  - name: GENERAL > Networks > Configure > Settings
  - name: GENERAL > Networks > Configure > Snmp
  - name: GENERAL > Networks > Configure > Syslog Servers
  - name: GENERAL > Networks > Configure > Traffic Analysis
  - name: GENERAL > Networks > Configure > Traffic Shaping
  - name: GENERAL > Networks > Configure > Traffic Shaping > Application Categories
  - name: GENERAL > Networks > Configure > Traffic Shaping > Dscp Tagging Options
  - name: GENERAL > Networks > Configure > Webhooks
  - name: GENERAL > Networks > Configure > Webhooks > Http Servers
  - name: GENERAL > Networks > Configure > Webhooks > Webhook Tests
  - name: GENERAL > Networks > Monitor
  - name: GENERAL > Networks > Monitor > Bluetooth Clients
  - name: GENERAL > Networks > Monitor > Clients
  - name: GENERAL > Networks > Monitor > Clients > Application Usage
  - name: GENERAL > Networks > Monitor > Clients > Overview
  - name: GENERAL > Networks > Monitor > Clients > Usage Histories
  - name: GENERAL > Networks > Monitor > Clients > Traffic History
  - name: GENERAL > Networks > Monitor > Clients > Usage History
  - name: GENERAL > Networks > Monitor > Events
  - name: GENERAL > Networks > Monitor > Events > Event Types
  - name: GENERAL > Networks > Monitor > Network Health
  - name: GENERAL > Networks > Monitor > Network Health > channelUtilization
  - name: GENERAL > Networks > Monitor > Splash Login Attempts
  - name: GENERAL > Networks > Monitor > Traffic
  - name: GENERAL > Organizations
  - name: GENERAL > Organizations > Configure
  - name: GENERAL > Organizations > Configure > Action Batches
  - name: GENERAL > Organizations > Configure > Admins
  - name: GENERAL > Organizations > Configure > Branding Policies
  - name: GENERAL > Organizations > Configure > Branding Policies > Priorities
  - name: GENERAL > Organizations > Configure > Config Templates
  - name: GENERAL > Organizations > Configure > Devices
  - name: GENERAL > Organizations > Configure > Inventory Devices
  - name: GENERAL > Organizations > Configure > Licenses
  - name: GENERAL > Organizations > Configure > Login Security
  - name: GENERAL > Organizations > Configure > Networks
  - name: GENERAL > Organizations > Configure > Saml
  - name: GENERAL > Organizations > Configure > Saml > Idps
  - name: GENERAL > Organizations > Configure > Saml Roles
  - name: GENERAL > Organizations > Configure > Snmp
  - name: GENERAL > Organizations > Monitor
  - name: GENERAL > Organizations > Monitor > Api Requests
  - name: GENERAL > Organizations > Monitor > Api Requests > Overview
  - name: GENERAL > Organizations > Monitor > Configuration Changes
  - name: GENERAL > Organizations > Monitor > Devices
  - name: GENERAL > Organizations > Monitor > Devices > Statuses
  - name: GENERAL > Organizations > Monitor > Devices > Uplinks Loss And Latency
  - name: GENERAL > Organizations > Monitor > Licenses
  - name: GENERAL > Organizations > Monitor > Licenses > overview
  - name: GENERAL > Organizations > Monitor > Openapi Spec
  - name: GENERAL > Organizations > Monitor > Uplinks
  - name: GENERAL > Organizations > Monitor > Uplinks > statuses
  - name: GENERAL > Organizations > Monitor > Webhooks
  - name: GENERAL > Organizations > Monitor > Webhooks > Alert Types
  - name: GENERAL > Organizations > Monitor > Webhooks > Logs
  - name: PRODUCTS
  - name: PRODUCTS > Appliance
  - name: PRODUCTS > Appliance > Configure
  - name: PRODUCTS > Appliance > Configure > Connectivity Monitoring Destinations
  - name: PRODUCTS > Appliance > Configure > Content Filtering
  - name: PRODUCTS > Appliance > Configure > Content Filtering > Categories
  - name: PRODUCTS > Appliance > Configure > Firewall
  - name: PRODUCTS > Appliance > Configure > Firewall > Cellular Firewall Rules
  - name: PRODUCTS > Appliance > Configure > Firewall > Firewalled Services
  - name: PRODUCTS > Appliance > Configure > Firewall > Inbound Firewall Rules
  - name: PRODUCTS > Appliance > Configure > Firewall > L 3 Firewall Rules
  - name: PRODUCTS > Appliance > Configure > Firewall > L 7 Firewall Rules
  - name: >-
      PRODUCTS > Appliance > Configure > Firewall > L 7 Firewall Rules >
      Application Categories
  - name: PRODUCTS > Appliance > Configure > Firewall > One To Many Nat Rules
  - name: PRODUCTS > Appliance > Configure > Firewall > One To One Nat Rules
  - name: PRODUCTS > Appliance > Configure > Firewall > Port Forwarding Rules
  - name: PRODUCTS > Appliance > Configure > Ports
  - name: PRODUCTS > Appliance > Configure > Security
  - name: PRODUCTS > Appliance > Configure > Security > Intrusion
  - name: PRODUCTS > Appliance > Configure > Security > Malware
  - name: PRODUCTS > Appliance > Configure > Settings
  - name: PRODUCTS > Appliance > Configure > Single Lan
  - name: PRODUCTS > Appliance > Configure > Static Routes
  - name: PRODUCTS > Appliance > Configure > Traffic Shaping
  - name: >-
      PRODUCTS > Appliance > Configure > Traffic Shaping > Custom Performance
      Classes
  - name: PRODUCTS > Appliance > Configure > Traffic Shaping > Rules
  - name: PRODUCTS > Appliance > Configure > Traffic Shaping > Uplink Selection
  - name: PRODUCTS > Appliance > Configure > Vlans
  - name: PRODUCTS > Appliance > Configure > Vlans > Settings
  - name: PRODUCTS > Appliance > Configure > Vpn
  - name: PRODUCTS > Appliance > Configure > Vpn > Bgp
  - name: PRODUCTS > Appliance > Configure > Vpn > Site To Site Vpn
  - name: PRODUCTS > Appliance > Configure > Vpn > Third Party VPN Peers
  - name: PRODUCTS > Appliance > Configure > Vpn > Vpn Firewall Rules
  - name: PRODUCTS > Appliance > Configure > Warm Spare
  - name: PRODUCTS > Appliance > Monitor
  - name: PRODUCTS > Appliance > Monitor > Clients
  - name: PRODUCTS > Appliance > Monitor > Clients > security
  - name: PRODUCTS > Appliance > Monitor > Clients > security > events
  - name: PRODUCTS > Appliance > Monitor > Dhcp
  - name: PRODUCTS > Appliance > Monitor > Dhcp > subnets
  - name: PRODUCTS > Appliance > Monitor > Performance
  - name: PRODUCTS > Appliance > Monitor > Security
  - name: PRODUCTS > Appliance > Monitor > Security > events
  - name: PRODUCTS > Appliance > Monitor > Uplink
  - name: PRODUCTS > Appliance > Monitor > Uplink > statuses
  - name: PRODUCTS > Appliance > Monitor > Vpn
  - name: PRODUCTS > Appliance > Monitor > Vpn > Stats
  - name: PRODUCTS > Appliance > Monitor > Vpn > Statuses
  - name: PRODUCTS > Camera
  - name: PRODUCTS > Camera > Configure
  - name: PRODUCTS > Camera > Configure > Quality And Retention
  - name: PRODUCTS > Camera > Configure > Quality Retention Profiles
  - name: PRODUCTS > Camera > Configure > Schedules
  - name: PRODUCTS > Camera > Configure > Sense
  - name: PRODUCTS > Camera > Configure > Sense > Object Detection Models
  - name: PRODUCTS > Camera > Configure > Video
  - name: PRODUCTS > Camera > Configure > Video > settings
  - name: PRODUCTS > Camera > Configure > Video Link
  - name: PRODUCTS > Camera > Monitor
  - name: PRODUCTS > Camera > Monitor > Analytics
  - name: PRODUCTS > Camera > Monitor > Analytics > Live
  - name: PRODUCTS > Camera > Monitor > Analytics > Overview
  - name: PRODUCTS > Camera > Monitor > Analytics > Recent
  - name: PRODUCTS > Camera > Monitor > Analytics > Zones
  - name: PRODUCTS > Camera > Monitor > Analytics > Zones > History
  - name: PRODUCTS > Cellular Gateway
  - name: PRODUCTS > Cellular Gateway > Configure
  - name: >-
      PRODUCTS > Cellular Gateway > Configure > Connectivity Monitoring
      Destinations
  - name: PRODUCTS > Cellular Gateway > Configure > Dhcp
  - name: PRODUCTS > Cellular Gateway > Configure > Lan
  - name: PRODUCTS > Cellular Gateway > Configure > Port Forwarding Rules
  - name: PRODUCTS > Cellular Gateway > Configure > Subnet Pool
  - name: PRODUCTS > Cellular Gateway > Configure > Uplink
  - name: PRODUCTS > Cellular Gateway > Monitor
  - name: PRODUCTS > Cellular Gateway > Monitor > uplink
  - name: PRODUCTS > Cellular Gateway > Monitor > uplink > statuses
  - name: PRODUCTS > Switch
  - name: PRODUCTS > Switch > Configure
  - name: PRODUCTS > Switch > Configure > Access Control Lists
  - name: PRODUCTS > Switch > Configure > Access Policies
  - name: PRODUCTS > Switch > Configure > Alternate Management Interface
  - name: PRODUCTS > Switch > Configure > Config Templates
  - name: PRODUCTS > Switch > Configure > Config Templates > profiles
  - name: PRODUCTS > Switch > Configure > Config Templates > profiles > Ports
  - name: PRODUCTS > Switch > Configure > Devices
  - name: PRODUCTS > Switch > Configure > Dhcp Server Policy
  - name: PRODUCTS > Switch > Configure > Dscp To Cos Mappings
  - name: PRODUCTS > Switch > Configure > Link Aggregations
  - name: PRODUCTS > Switch > Configure > Mtu
  - name: PRODUCTS > Switch > Configure > Port Schedules
  - name: PRODUCTS > Switch > Configure > Ports
  - name: PRODUCTS > Switch > Configure > Qos Rules
  - name: PRODUCTS > Switch > Configure > Qos Rules > Order
  - name: PRODUCTS > Switch > Configure > Routing
  - name: PRODUCTS > Switch > Configure > Routing > Interfaces
  - name: PRODUCTS > Switch > Configure > Routing > Interfaces > Dhcp
  - name: PRODUCTS > Switch > Configure > Routing > Multicast
  - name: PRODUCTS > Switch > Configure > Routing > Multicast > Rendezvous Points
  - name: PRODUCTS > Switch > Configure > Routing > Ospf
  - name: PRODUCTS > Switch > Configure > Routing > Static Routes
  - name: PRODUCTS > Switch > Configure > Settings
  - name: PRODUCTS > Switch > Configure > Stacks
  - name: PRODUCTS > Switch > Configure > Stacks > Routing
  - name: PRODUCTS > Switch > Configure > Stacks > Routing > Interfaces
  - name: PRODUCTS > Switch > Configure > Stacks > Routing > Interfaces > Dhcp
  - name: PRODUCTS > Switch > Configure > Stacks > Routing > Static Routes
  - name: PRODUCTS > Switch > Configure > Storm Control
  - name: PRODUCTS > Switch > Configure > Stp
  - name: PRODUCTS > Switch > Configure > Warm Spare
  - name: PRODUCTS > Switch > Live Tools
  - name: PRODUCTS > Switch > Live Tools > ports
  - name: PRODUCTS > Switch > Monitor
  - name: PRODUCTS > Switch > Monitor > ports
  - name: PRODUCTS > Switch > Monitor > ports > statuses
  - name: PRODUCTS > Switch > Monitor > ports > statuses > Packets
  - name: PRODUCTS > Wireless
  - name: PRODUCTS > Wireless > Configure
  - name: PRODUCTS > Wireless > Configure > Alternate Management Interface
  - name: PRODUCTS > Wireless > Configure > Billing
  - name: PRODUCTS > Wireless > Configure > Bluetooth
  - name: PRODUCTS > Wireless > Configure > Bluetooth > settings
  - name: PRODUCTS > Wireless > Configure > Radio
  - name: PRODUCTS > Wireless > Configure > Radio > settings
  - name: PRODUCTS > Wireless > Configure > Rf Profiles
  - name: PRODUCTS > Wireless > Configure > Settings
  - name: PRODUCTS > Wireless > Configure > Ssids
  - name: PRODUCTS > Wireless > Configure > Ssids > Bonjour Forwarding
  - name: PRODUCTS > Wireless > Configure > Ssids > Device Type Group Policies
  - name: PRODUCTS > Wireless > Configure > Ssids > Firewall
  - name: PRODUCTS > Wireless > Configure > Ssids > Firewall > L 3 Firewall Rules
  - name: PRODUCTS > Wireless > Configure > Ssids > Firewall > L 7 Firewall Rules
  - name: PRODUCTS > Wireless > Configure > Ssids > Identity Psks
  - name: PRODUCTS > Wireless > Configure > Ssids > Schedules
  - name: PRODUCTS > Wireless > Configure > Ssids > Splash
  - name: PRODUCTS > Wireless > Configure > Ssids > Splash > settings
  - name: PRODUCTS > Wireless > Configure > Ssids > Traffic Shaping
  - name: PRODUCTS > Wireless > Configure > Ssids > Traffic Shaping > rules
  - name: PRODUCTS > Wireless > Configure > Ssids > Vpn
  - name: PRODUCTS > Wireless > Monitor
  - name: PRODUCTS > Wireless > Monitor > Air Marshal
  - name: PRODUCTS > Wireless > Monitor > Channel Utilization History
  - name: PRODUCTS > Wireless > Monitor > Client Count History
  - name: PRODUCTS > Wireless > Monitor > Clients
  - name: PRODUCTS > Wireless > Monitor > Clients > Connection Stats
  - name: PRODUCTS > Wireless > Monitor > Clients > Connectivity Events
  - name: PRODUCTS > Wireless > Monitor > Clients > Latency History
  - name: PRODUCTS > Wireless > Monitor > Clients > Latency Stats
  - name: PRODUCTS > Wireless > Monitor > Connection Stats
  - name: PRODUCTS > Wireless > Monitor > Data Rate History
  - name: PRODUCTS > Wireless > Monitor > Devices
  - name: PRODUCTS > Wireless > Monitor > Devices > Connection Stats
  - name: PRODUCTS > Wireless > Monitor > Devices > Latency Stats
  - name: PRODUCTS > Wireless > Monitor > Failed Connections
  - name: PRODUCTS > Wireless > Monitor > Latency History
  - name: PRODUCTS > Wireless > Monitor > Latency Stats
  - name: PRODUCTS > Wireless > Monitor > Mesh Statuses
  - name: PRODUCTS > Wireless > Monitor > Signal Quality History
  - name: PRODUCTS > Wireless > Monitor > Status
  - name: PRODUCTS > Wireless > Monitor > Usage History
  - name: PRODUCTS > Sm
  - name: PRODUCTS > Sm > Configure
  - name: PRODUCTS > Sm > Configure > Apns Cert
  - name: PRODUCTS > Sm > Configure > Bypass Activation Lock Attempts
  - name: PRODUCTS > Sm > Configure > Devices
  - name: PRODUCTS > Sm > Configure > Devices > Certs
  - name: PRODUCTS > Sm > Configure > Devices > Device Profiles
  - name: PRODUCTS > Sm > Configure > Devices > Fields
  - name: PRODUCTS > Sm > Configure > Devices > Network Adapters
  - name: PRODUCTS > Sm > Configure > Devices > Restrictions
  - name: PRODUCTS > Sm > Configure > Devices > Security Centers
  - name: PRODUCTS > Sm > Configure > Devices > Softwares
  - name: PRODUCTS > Sm > Configure > Devices > Wlan Lists
  - name: PRODUCTS > Sm > Configure > Profiles
  - name: PRODUCTS > Sm > Configure > Target Groups
  - name: PRODUCTS > Sm > Configure > User Access Devices
  - name: PRODUCTS > Sm > Configure > Users
  - name: PRODUCTS > Sm > Configure > Users > Device Profiles
  - name: PRODUCTS > Sm > Configure > Users > Softwares
  - name: PRODUCTS > Sm > Configure > Vpp Accounts
  - name: PRODUCTS > Sm > Monitor
  - name: PRODUCTS > Sm > Monitor > devices
  - name: PRODUCTS > Sm > Monitor > devices > Cellular Usage History
  - name: PRODUCTS > Sm > Monitor > devices > Connectivity
  - name: PRODUCTS > Sm > Monitor > devices > Desktop Logs
  - name: PRODUCTS > Sm > Monitor > devices > Device Command Logs
  - name: PRODUCTS > Sm > Monitor > devices > Performance History
  - name: PRODUCTS > Insight
  - name: PRODUCTS > Insight > configure
  - name: PRODUCTS > Insight > configure > Applications
  - name: PRODUCTS > Insight > configure > Monitored Media Servers
paths:
  /devices/{serial}/managementInterface:
    get:
      tags:
        - GENERAL > Devices > Configure > Management Interface
      summary: Return The Management Interface Settings For A Device
      description: Return the management interface settings for a device
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: serial
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{serial}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ddnsHostnames:
                  activeDdnsHostname: mx1-sample.dynamic-m.com
                  ddnsHostnameWan1: mx1-sample-1.dynamic-m.com
                  ddnsHostnameWan2: mx1-sample-2.dynamic-m.com
                wan1:
                  wanEnabled: not configured
                  usingStaticIp: true
                  staticIp: 1.2.3.4
                  staticSubnetMask: 255.255.255.0
                  staticGatewayIp: 1.2.3.1
                  staticDns:
                    - 1.2.3.2
                    - 1.2.3.3
                  vlan: 7
                wan2:
                  wanEnabled: enabled
                  usingStaticIp: false
                  vlan: 2
    put:
      tags:
        - GENERAL > Devices > Configure > Management Interface
      summary: Update The Management Interface Settings For A Device
      description: |+
        Update the management interface settings for a device
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        wan1| object| WAN 1 settings
        wan2| object| WAN 2 settings (only for MX devices)

        #### Supports Action Batches

        **Resource**|**Operation**
        :-------------: |:-------------:
        `/devices/{serial}/managementInterface` | update

      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"wan1\": {\n        \"wanEnabled\":
                \"<string>\",\n        \"usingStaticIp\":
                \"<boolean>\",\n        \"staticIp\": \"<string>\",\n       
                \"staticGatewayIp\": \"<string>\",\n       
                \"staticSubnetMask\": \"<string>\",\n        \"staticDns\":
                [\n            \"<string>\",\n            \"<string>\"\n       
                ],\n        \"vlan\": \"<integer>\"\n    },\n    \"wan2\":
                {\n        \"wanEnabled\": \"<string>\",\n       
                \"usingStaticIp\": \"<boolean>\",\n        \"staticIp\":
                \"<string>\",\n        \"staticGatewayIp\":
                \"<string>\",\n        \"staticSubnetMask\":
                \"<string>\",\n        \"staticDns\": [\n           
                \"<string>\",\n            \"<string>\"\n        ],\n       
                \"vlan\": \"<integer>\"\n    }\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: serial
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{serial}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                wan1:
                  wanEnabled: not configured
                  usingStaticIp: true
                  staticIp: 1.2.3.4
                  staticSubnetMask: 255.255.255.0
                  staticGatewayIp: 1.2.3.1
                  staticDns:
                    - 1.2.3.2
                    - 1.2.3.3
                  vlan: 7
                wan2:
                  wanEnabled: enabled
                  usingStaticIp: false
                  vlan: 2
  /devices/{serial}:
    get:
      tags:
        - GENERAL > Devices > Configure
      summary: Return A Single Device
      description: Return a single device
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: serial
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{serial}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                name: My AP
                lat: 37.4180951010362
                lng: -122.098531723022
                serial: Q234-ABCD-5678
                mac: '00:11:22:33:44:55'
                model: MR34
                address: 1600 Pennsylvania Ave
                notes: My AP's note
                lanIp: 1.2.3.4
                tags:
                  - recently-added
                networkId: N_24329156
                beaconIdParams:
                  uuid: 00000000-0000-0000-0000-000000000000
                  major: 5
                  minor: 3
                firmware: wireless-25-14
                floorPlanId: g_1234567
    put:
      tags:
        - GENERAL > Devices > Configure
      summary: Update The Attributes Of A Device
      description: >+
        Update the attributes of a device
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        name| string| The name of a device

        tags| array| The list of tags of a device

        lat| number| The latitude of a device

        lng| number| The longitude of a device

        address| string| The address of a device

        notes| string| The notes for the device. String. Limited to 255
        characters.

        moveMapMarker| boolean| Whether or not to set the latitude and longitude
        of a device based on the new address. Only applies when lat and lng are
        not specified.

        switchProfileId| string| The ID of a switch profile to bind to the
        device (for available switch profiles, see the 'Switch Profiles'
        endpoint). Use null to unbind the switch device from the current
        profile. For a device to be bindable to a switch profile, it must (1) be
        a switch, and (2) belong to a network that is bound to a configuration
        template.

        floorPlanId| string| The floor plan to associate to this device. null
        disassociates the device from the floorplan.


        #### Supports Action Batches


        **Resource**|**Operation**

        :-------------: |:-------------:

        `/devices/{serial}` | update

      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"name\": \"<string>\",\n    \"tags\": [\n       
                \"<string>\",\n        \"<string>\"\n    ],\n    \"lat\":
                \"<float>\",\n    \"lng\": \"<float>\",\n    \"address\":
                \"<string>\",\n    \"notes\": \"<string>\",\n   
                \"moveMapMarker\": \"<boolean>\",\n    \"switchProfileId\":
                \"<string>\",\n    \"floorPlanId\": \"<string>\"\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: serial
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{serial}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                name: My AP
                lat: 37.4180951010362
                lng: -122.098531723022
                serial: Q234-ABCD-5678
                mac: '00:11:22:33:44:55'
                model: MR34
                address: 1600 Pennsylvania Ave
                notes: My AP's note
                lanIp: 1.2.3.4
                tags:
                  - recently-added
                networkId: N_24329156
                beaconIdParams:
                  uuid: 00000000-0000-0000-0000-000000000000
                  major: 5
                  minor: 3
                firmware: wireless-25-14
                floorPlanId: g_1234567
  /devices/{serial}/blinkLeds:
    post:
      tags:
        - GENERAL > Devices > Live Tools
      summary: Blink The LE Ds On A Device
      description: >
        Blink the LEDs on a device
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        duration| integer| The duration in seconds. Must be between 5 and 120.
        Default is 20 seconds

        period| integer| The period in milliseconds. Must be between 100 and
        1000. Default is 160 milliseconds

        duty| integer| The duty cycle as the percent active. Must be between 10
        and 90. Default is 50.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"duration\": \"<integer>\",\n    \"period\":
                \"<integer>\",\n    \"duty\": \"<integer>\"\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: serial
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{serial}}'
      responses:
        '202':
          description: Accepted
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                duration: 20
                period: 160
                duty: 50
  /devices/{serial}/reboot:
    post:
      tags:
        - GENERAL > Devices > Live Tools
      summary: Reboot A Device
      description: Reboot a device
      requestBody:
        content: {}
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: serial
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{serial}}'
      responses:
        '202':
          description: Accepted
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                success: true
  /devices/{serial}/clients:
    get:
      tags:
        - GENERAL > Devices > Monitor > Clients
      summary: List the clients of a device, up to a maximum of a month ago
      description: >-
        List the clients of a device, up to a maximum of a month ago. The usage
        of each client is returned in kilobytes. If the device is a switch, the
        switchport is returned; otherwise the switchport field is null.
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: serial
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{serial}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - usage:
                    sent: 138
                    recv: 61
                  id: k74272e
                  description: Miles's phone
                  mac: '22:33:44:55:66:77'
                  ip: 1.2.3.4
                  user: milesmeraki
                  vlan: 255
                  switchport: null
                  adaptivePolicyGroup: null
                  mdnsName: Miles's phone
                  dhcpHostname: MilesPhone
  /devices/{serial}/lldpCdp:
    get:
      tags:
        - GENERAL > Devices > Monitor > Lldp Cdp
      summary: List LLDP and CDP information for a device
      description: List LLDP and CDP information for a device
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: serial
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{serial}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                sourceMac: '00:11:22:33:44:55'
                ports:
                  '8':
                    cdp:
                      deviceId: e0553d8cdf53
                      portId: Port 10
                      address: '00:11:22:33:44:55'
                      sourcePort: '8'
                  '12':
                    cdp:
                      deviceId: e0553d8cdf53
                      portId: Port 11
                      address: '00:11:22:33:44:55'
                      sourcePort: '12'
                    lldp:
                      systemName: Meraki MS350-24X - Phineas
                      portId: '11'
                      managementAddress: '00:11:22:33:44:55'
                      sourcePort: '12'
  /devices/{serial}/lossAndLatencyHistory:
    get:
      tags:
        - GENERAL > Devices > Monitor > Loss And Latency History
      summary: >-
        Get the uplink loss percentage and latency in milliseconds, and goodput
        in kilobits per second for a wired network device.
      description: >-
        Get the uplink loss percentage and latency in milliseconds, and goodput
        in kilobits per second for a wired network device.
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: serial
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{serial}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - startTime: '2018-10-09T22:18:27Z'
                  endTime: '2018-10-09T22:19:27Z'
                  lossPercent: 5.23
                  latencyMs: 324.12
                  goodput: 1493
                - startTime: '2018-10-09T22:19:27Z'
                  endTime: '2018-10-09T22:20:27Z'
                  lossPercent: 1
                  latencyMs: 43
                  goodput: 2567
                - startTime: '2018-10-09T22:20:27Z'
                  endTime: '2018-10-09T22:21:27Z'
                  lossPercent: 0.01
                  latencyMs: 44.02
                  goodput: 7899
  /networks/{networkId}/alerts/settings:
    get:
      tags:
        - GENERAL > Networks > Configure > Alerts > settings
      summary: Return The Alert Configuration For This Network
      description: Return the alert configuration for this network
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                defaultDestinations:
                  emails:
                    - miles@meraki.com
                  allAdmins: true
                  snmp: true
                alerts:
                  - type: gatewayDown
                    enabled: true
                    alertDestinations:
                      emails:
                        - miles@meraki.com
                      allAdmins: false
                      snmp: false
                    filters:
                      timeout: 60
    put:
      tags:
        - GENERAL > Networks > Configure > Alerts > settings
      summary: Update The Alert Configuration For This Network
      description: >
        Update the alert configuration for this network
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        defaultDestinations| object| The network-wide destinations for all
        alerts on the network.

        alerts| array| Alert-specific configuration for each type. Only alerts
        that pertain to the network can be updated.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"defaultDestinations\": {\n        \"emails\":
                [\n            \"<string>\",\n            \"<string>\"\n       
                ],\n        \"allAdmins\": \"<boolean>\",\n        \"snmp\":
                \"<boolean>\",\n        \"httpServerIds\": [\n           
                \"<string>\",\n            \"<string>\"\n        ]\n    },\n   
                \"alerts\": [\n        {\n            \"type\":
                \"<string>\",\n            \"enabled\":
                \"<boolean>\",\n            \"alertDestinations\":
                {\n                \"emails\": [\n                   
                \"<string>\",\n                    \"<string>\"\n               
                ],\n                \"allAdmins\":
                \"<boolean>\",\n                \"snmp\":
                \"<boolean>\",\n                \"httpServerIds\":
                [\n                    \"<string>\",\n                   
                \"<string>\"\n                ]\n            },\n           
                \"filters\": {}\n        },\n        {\n            \"type\":
                \"<string>\",\n            \"enabled\":
                \"<boolean>\",\n            \"alertDestinations\":
                {\n                \"emails\": [\n                   
                \"<string>\",\n                    \"<string>\"\n               
                ],\n                \"allAdmins\":
                \"<boolean>\",\n                \"snmp\":
                \"<boolean>\",\n                \"httpServerIds\":
                [\n                    \"<string>\",\n                   
                \"<string>\"\n                ]\n            },\n           
                \"filters\": {}\n        }\n    ]\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                defaultDestinations:
                  emails:
                    - miles@meraki.com
                  allAdmins: true
                  snmp: true
                alerts:
                  - type: gatewayDown
                    enabled: true
                    alertDestinations:
                      emails:
                        - miles@meraki.com
                      allAdmins: false
                      snmp: false
                    filters:
                      timeout: 60
  /networks/{networkId}/clients/{clientId}/policy:
    get:
      tags:
        - GENERAL > Networks > Configure > Clients > Policy
      summary: Return The Policy Assigned To A Client On The Network
      description: >-
        Return the policy assigned to a client on the network. Clients can be
        identified by a client key or either the MAC or IP depending on whether
        the network uses Track-by-IP.
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: clientId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{clientId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                mac: '00:11:22:33:44:55'
                devicePolicy: Group policy
                groupPolicyId: '101'
    put:
      tags:
        - GENERAL > Networks > Configure > Clients > Policy
      summary: Update The Policy Assigned To A Client On The Network
      description: >-
        Update the policy assigned to a client on the network. Clients can be
        identified by a client key or either the MAC or IP depending on whether
        the network uses Track-by-IP.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"devicePolicy\": \"<string>\",\n    \"groupPolicyId\":
                \"<string>\"\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: clientId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{clientId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                mac: '00:11:22:33:44:55'
                devicePolicy: Group policy
                groupPolicyId: '101'
  /networks/{networkId}/clients/{clientId}/splashAuthorizationStatus:
    get:
      tags:
        - GENERAL > Networks > Configure > Clients > Splash Authorization Status
      summary: >-
        Return The Splash Authorization For A Client For Each SSID Theyve
        Associated With Through Splash
      description: >-
        Return the splash authorization for a client, for each SSID they've
        associated with through splash. Only enabled SSIDs with Click-through
        splash enabled will be included. Clients can be identified by a client
        key or either the MAC or IP depending on whether the network uses
        Track-by-IP.
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: clientId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{clientId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ssids:
                  '0':
                    isAuthorized: true
                    authorizedAt: 2017-07-19 16:24:13 UTC
                    expiresAt: 2017-07-20 16:24:13 UTC
                  '2':
                    isAuthorized: false
    put:
      tags:
        - GENERAL > Networks > Configure > Clients > Splash Authorization Status
      summary: Update A Clients Splash Authorization
      description: >-
        Update a client's splash authorization. Clients can be identified by a
        client key or either the MAC or IP depending on whether the network uses
        Track-by-IP.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"ssids\": {\n        \"0\": {\n           
                \"isAuthorized\": \"<boolean>\"\n        },\n        \"1\":
                {\n            \"isAuthorized\": \"<boolean>\"\n       
                },\n        \"2\": {\n            \"isAuthorized\":
                \"<boolean>\"\n        },\n        \"3\": {\n           
                \"isAuthorized\": \"<boolean>\"\n        },\n        \"4\":
                {\n            \"isAuthorized\": \"<boolean>\"\n       
                },\n        \"5\": {\n            \"isAuthorized\":
                \"<boolean>\"\n        },\n        \"6\": {\n           
                \"isAuthorized\": \"<boolean>\"\n        },\n        \"7\":
                {\n            \"isAuthorized\": \"<boolean>\"\n       
                },\n        \"8\": {\n            \"isAuthorized\":
                \"<boolean>\"\n        },\n        \"9\": {\n           
                \"isAuthorized\": \"<boolean>\"\n        },\n        \"10\":
                {\n            \"isAuthorized\": \"<boolean>\"\n       
                },\n        \"11\": {\n            \"isAuthorized\":
                \"<boolean>\"\n        },\n        \"12\": {\n           
                \"isAuthorized\": \"<boolean>\"\n        },\n        \"13\":
                {\n            \"isAuthorized\": \"<boolean>\"\n       
                },\n        \"14\": {\n            \"isAuthorized\":
                \"<boolean>\"\n        }\n    }\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: clientId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{clientId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ssids:
                  '0':
                    isAuthorized: true
                    authorizedAt: 2017-07-19 16:24:13 UTC
                    expiresAt: 2017-07-20 16:24:13 UTC
                  '2':
                    isAuthorized: false
  /networks/{networkId}/clients/provision:
    post:
      tags:
        - GENERAL > Networks > Configure > Clients
      summary: Provisions A Client With A Name And Policy
      description: >-
        Provisions a client with a name and policy. Clients can be provisioned
        before they associate to the network.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"clients\": [\n        {\n            \"mac\":
                \"<string>\",\n            \"name\": \"<string>\"\n       
                },\n        {\n            \"mac\": \"<string>\",\n           
                \"name\": \"<string>\"\n        }\n    ],\n    \"devicePolicy\":
                \"<string>\",\n    \"groupPolicyId\": \"<string>\",\n   
                \"policiesBySecurityAppliance\": {\n        \"devicePolicy\":
                \"<string>\"\n    },\n    \"policiesBySsid\": {\n        \"0\":
                {\n            \"devicePolicy\": \"<string>\",\n           
                \"groupPolicyId\": \"<string>\"\n        },\n        \"1\":
                {\n            \"devicePolicy\": \"<string>\",\n           
                \"groupPolicyId\": \"<string>\"\n        },\n        \"2\":
                {\n            \"devicePolicy\": \"<string>\",\n           
                \"groupPolicyId\": \"<string>\"\n        },\n        \"3\":
                {\n            \"devicePolicy\": \"<string>\",\n           
                \"groupPolicyId\": \"<string>\"\n        },\n        \"4\":
                {\n            \"devicePolicy\": \"<string>\",\n           
                \"groupPolicyId\": \"<string>\"\n        },\n        \"5\":
                {\n            \"devicePolicy\": \"<string>\",\n           
                \"groupPolicyId\": \"<string>\"\n        },\n        \"6\":
                {\n            \"devicePolicy\": \"<string>\",\n           
                \"groupPolicyId\": \"<string>\"\n        },\n        \"7\":
                {\n            \"devicePolicy\": \"<string>\",\n           
                \"groupPolicyId\": \"<string>\"\n        },\n        \"8\":
                {\n            \"devicePolicy\": \"<string>\",\n           
                \"groupPolicyId\": \"<string>\"\n        },\n        \"9\":
                {\n            \"devicePolicy\": \"<string>\",\n           
                \"groupPolicyId\": \"<string>\"\n        },\n        \"10\":
                {\n            \"devicePolicy\": \"<string>\",\n           
                \"groupPolicyId\": \"<string>\"\n        },\n        \"11\":
                {\n            \"devicePolicy\": \"<string>\",\n           
                \"groupPolicyId\": \"<string>\"\n        },\n        \"12\":
                {\n            \"devicePolicy\": \"<string>\",\n           
                \"groupPolicyId\": \"<string>\"\n        },\n        \"13\":
                {\n            \"devicePolicy\": \"<string>\",\n           
                \"groupPolicyId\": \"<string>\"\n        },\n        \"14\":
                {\n            \"devicePolicy\": \"<string>\",\n           
                \"groupPolicyId\": \"<string>\"\n        }\n    }\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                clients:
                  - mac: '00:11:22:33:44:55'
                    clientId: k74272e
                    name: Miles's phone
                devicePolicy: Group policy
                groupPolicyId: '101'
  /networks/{networkId}/devices:
    get:
      tags:
        - GENERAL > Networks > Configure > Devices
      summary: List The Devices In A Network
      description: List the devices in a network
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - name: My AP
                  lat: 37.4180951010362
                  lng: -122.098531723022
                  serial: Q234-ABCD-5678
                  mac: '00:11:22:33:44:55'
                  model: MR34
                  address: 1600 Pennsylvania Ave
                  notes: My AP's note
                  lanIp: 1.2.3.4
                  tags: ' recently-added '
                  networkId: N_24329156
                  beaconIdParams:
                    uuid: 00000000-0000-0000-0000-000000000000
                    major: 5
                    minor: 3
                  firmware: wireless-25-14
                  floorPlanId: g_1234567
  /networks/{networkId}/devices/claim:
    post:
      tags:
        - GENERAL > Networks > Configure > Devices
      summary: >-
        Claim Devices Into A Network Note For Recently Claimed Devices It May
        Take A Few Minutes For API Requsts Against That Device To Succeed
      description: >+
        Claim devices into a network. (Note: for recently claimed devices, it
        may take a few minutes for API requsts against that device to succeed)
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        serials| array| A list of serials of devices to claim


        #### Supports Action Batches


        **Resource**|**Operation**

        :-------------: |:-------------:

        `/networks/{networkId}/devices` | claim

      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"serials\": [\n        \"<string>\",\n       
                \"<string>\"\n    ]\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /networks/{networkId}/devices/remove:
    post:
      tags:
        - GENERAL > Networks > Configure > Devices
      summary: Remove A Single Device
      description: |+
        Remove a single device
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        serial| string| The serial of a device

        #### Supports Action Batches

        **Resource**|**Operation**
        :-------------: |:-------------:
        `/networks/{networkId}/devices` | remove

      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n    \"serial\": \"<string>\"\n}"'
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /networks/{networkId}/firmwareUpgrades/rollbacks:
    post:
      tags:
        - GENERAL > Networks > Configure > Firmware Upgrades > Rollbacks
      summary: Rollback a Firmware Upgrade For A Network
      description: >+
        Rollback a Firmware Upgrade For A Network
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        product| string| Product type to rollback (if the network is a combined
        network)

        time| string| Scheduled time for the rollback

        reasons| array| Reasons for the rollback

        toVersion| object| Version to downgrade to (if the network has firmware
        flexibility)


        #### Supports Action Batches


        **Resource**|**Operation**

        :-------------: |:-------------:

        `/networks/{networkId}/firmwareUpgrades/rollbacks` | create

      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"reasons\": [\n        {\n            \"category\":
                \"<string>\",\n            \"comment\": \"<string>\"\n       
                },\n        {\n            \"category\":
                \"<string>\",\n            \"comment\": \"<string>\"\n       
                }\n    ],\n    \"product\": \"<string>\",\n    \"time\":
                \"<dateTime>\",\n    \"toVersion\": {\n        \"id\":
                \"<string>\"\n    }\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                product: switch
                status: pending
                upgradeBatchId: 23456
                time: '2020-10-21T02:00:00Z'
                toVersion:
                  id: 7857
                  firmware: switch-15-5-2
                  shortName: MS 25.5.2
                  releaseType: stable
                reasons:
                  - category: performance
                    comment: Network was slower with the upgrade
                  - category: stability
                    comment: We saw some errors in the logs we didn't expect
  /networks/{networkId}/firmwareUpgrades:
    get:
      tags:
        - GENERAL > Networks > Configure > Firmware Upgrades
      summary: Get Firmware Upgrade Information For A Network
      description: Get firmware upgrade information for a network
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                upgradeWindow:
                  hourOfDay: '4:00'
                  dayOfWeek: Sun
                timezone: America/Los_Angeles
                products:
                  camera:
                    currentVersion:
                      id: 4321
                      firmware: camera-11-2-1
                      shortName: MV 11.2.1
                      releaseType: stable
                    lastUpgrade:
                      time: timestamp
                      fromVersion:
                        id: 1234
                        firmware: camera-10-8-1
                        shortName: MV 10.8.1
                        releaseType: stable
                      toVersion:
                        id: 4321
                        firmware: camera-11-2-1
                        shortName: MV 11.2.1
                        releaseType: stable
                    nextUpgrade:
                      time: timestamp
                      toVersion:
                        id: 2134
                        firmware: camera-15-5-2
                        shortName: MV 25.5.2
                        releaseType: stable
                    availableVersions:
                      - id: 3421
                        firmware: camera-16-x-y
                        shortName: MV 16.x.y
                        releaseType: beta
                      - id: 2345
                        firmware: camera-15-x-x
                        shortName: MV 15.x.x
                        releaseType: stable
                      - id: 5435
                        firmware: camera-15-x-y
                        shortName: MV 15.x.y
                        releaseType: stable
                      - id: 4534
                        firmware: camera-18-z-z
                        shortName: MV 18.z.z
                        releaseType: other?
                  switch:
                    currentVersion:
                      id: 5678
                      firmware: switch-11-2-1
                      shortName: MS 11.2.1
                      releaseType: stable
                    lastUpgrade:
                      time: timestamp
                      fromVersion:
                        id: 7647
                        firmware: switch-10-8-1
                        shortName: MS 10.8.1
                        releaseType: stable
                      toVersion:
                        id: 5678
                        firmware: switch-11-2-1
                        shortName: MS 11.2.1
                        releaseType: stable
                    nextUpgrade:
                      time: timestamp
                      toVersion:
                        id: 7857
                        firmware: switch-15-5-2
                        shortName: MS 25.5.2
                        releaseType: stable
                    availableVersions:
                      - id: 7768
                        firmware: switch-16-x-y
                        shortName: MS 16.x.y
                        releaseType: beta
                      - id: 9768
                        firmware: switch-15-x-x
                        shortName: MS 15.x.x
                        releaseType: stable
                      - id: 8896
                        firmware: switch-15-x-y
                        shortName: MS 15.x.y
                        releaseType: stable
                      - id: 8766
                        firmware: switch-18-z-z
                        shortName: MS 18.z.z
                        releaseType: other?
                    participateInNextBetaRelease: false
    put:
      tags:
        - GENERAL > Networks > Configure > Firmware Upgrades
      summary: Update Firmware Upgrade Information For A Network
      description: |+
        Update firmware upgrade information for a network
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        upgradeWindow| object| Upgrade window for devices in network
        timezone| string| The timezone for the network
        products| object| Contains information about the network to update

        #### Supports Action Batches

        **Resource**|**Operation**
        :-------------: |:-------------:
        `/networks/{networkId}/firmwareUpgrades` | update

      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"upgradeWindow\": {\n        \"dayOfWeek\":
                \"<string>\",\n        \"hourOfDay\": \"<string>\"\n    },\n   
                \"timezone\": \"<string>\",\n    \"products\": {\n       
                \"wireless\": {\n            \"nextUpgrade\": {\n               
                \"time\": \"<string>\",\n                \"toVersion\":
                {\n                    \"id\": \"<string>\"\n               
                }\n            }\n        },\n        \"switch\": {\n           
                \"nextUpgrade\": {\n                \"time\":
                \"<string>\",\n                \"toVersion\":
                {\n                    \"id\": \"<string>\"\n               
                }\n            },\n            \"participateInNextBetaRelease\":
                \"<boolean>\"\n        },\n        \"appliance\": {\n           
                \"nextUpgrade\": {\n                \"time\":
                \"<string>\",\n                \"toVersion\":
                {\n                    \"id\": \"<string>\"\n               
                }\n            }\n        },\n        \"camera\": {\n           
                \"nextUpgrade\": {\n                \"time\":
                \"<string>\",\n                \"toVersion\":
                {\n                    \"id\": \"<string>\"\n               
                }\n            }\n        },\n        \"vmxHost\":
                {\n            \"nextUpgrade\": {\n                \"time\":
                \"<string>\",\n                \"toVersion\":
                {\n                    \"id\": \"<string>\"\n               
                }\n            }\n        },\n        \"environmental\":
                {\n            \"nextUpgrade\": {\n                \"time\":
                \"<string>\",\n                \"toVersion\":
                {\n                    \"id\": \"<string>\"\n               
                }\n            }\n        },\n        \"cellularGateway\":
                {\n            \"nextUpgrade\": {\n                \"time\":
                \"<string>\",\n                \"toVersion\":
                {\n                    \"id\": \"<string>\"\n               
                }\n            }\n        }\n    }\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                upgradeWindow:
                  hourOfDay: '4:00'
                  dayOfWeek: Sun
                timezone: America/Los_Angeles
                products:
                  camera:
                    currentVersion:
                      id: 4321
                      firmware: camera-11-2-1
                      shortName: MV 11.2.1
                      releaseType: stable
                    lastUpgrade:
                      time: timestamp
                      fromVersion:
                        id: 1234
                        firmware: camera-10-8-1
                        shortName: MV 10.8.1
                        releaseType: stable
                      toVersion:
                        id: 4321
                        firmware: camera-11-2-1
                        shortName: MV 11.2.1
                        releaseType: stable
                    nextUpgrade:
                      time: timestamp
                      toVersion:
                        id: 2134
                        firmware: camera-15-5-2
                        shortName: MV 25.5.2
                        releaseType: stable
                    availableVersions:
                      - id: 3421
                        firmware: camera-16-x-y
                        shortName: MV 16.x.y
                        releaseType: beta
                      - id: 2345
                        firmware: camera-15-x-x
                        shortName: MV 15.x.x
                        releaseType: stable
                      - id: 5435
                        firmware: camera-15-x-y
                        shortName: MV 15.x.y
                        releaseType: stable
                      - id: 4534
                        firmware: camera-18-z-z
                        shortName: MV 18.z.z
                        releaseType: other?
                  switch:
                    currentVersion:
                      id: 5678
                      firmware: switch-11-2-1
                      shortName: MS 11.2.1
                      releaseType: stable
                    lastUpgrade:
                      time: timestamp
                      fromVersion:
                        id: 7647
                        firmware: switch-10-8-1
                        shortName: MS 10.8.1
                        releaseType: stable
                      toVersion:
                        id: 5678
                        firmware: switch-11-2-1
                        shortName: MS 11.2.1
                        releaseType: stable
                    nextUpgrade:
                      time: timestamp
                      toVersion:
                        id: 7857
                        firmware: switch-15-5-2
                        shortName: MS 25.5.2
                        releaseType: stable
                    availableVersions:
                      - id: 7768
                        firmware: switch-16-x-y
                        shortName: MS 16.x.y
                        releaseType: beta
                      - id: 9768
                        firmware: switch-15-x-x
                        shortName: MS 15.x.x
                        releaseType: stable
                      - id: 8896
                        firmware: switch-15-x-y
                        shortName: MS 15.x.y
                        releaseType: stable
                      - id: 8766
                        firmware: switch-18-z-z
                        shortName: MS 18.z.z
                        releaseType: other?
                    participateInNextBetaRelease: false
  /networks/{networkId}/floorPlans:
    get:
      tags:
        - GENERAL > Networks > Configure > Floor Plans
      summary: List The Floor Plans That Belong To Your Network
      description: List the floor plans that belong to your network
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - floorPlanId: g_1234567
                  imageUrl: https://meraki-na.s3.amazonaws.com/assets/...
                  imageUrlExpiresAt: '2019-06-11 16:04:54 +00:00'
                  imageExtension: png
                  imageMd5: 2a9edd3f4ffd80130c647d13eacb59f3
                  name: HQ Floor Plan
                  devices:
                    - name: My AP
                      lat: 37.4180951010362
                      lng: -122.098531723022
                      serial: Q234-ABCD-5678
                      mac: '00:11:22:33:44:55'
                      model: MR34
                      address: 1600 Pennsylvania Ave
                      notes: My AP's note
                      lanIp: 1.2.3.4
                      tags:
                        - recently-added
                      networkId: N_24329156
                      beaconIdParams:
                        uuid: 00000000-0000-0000-0000-000000000000
                        major: 5
                        minor: 3
                      firmware: wireless-25-14
                      floorPlanId: g_1234567
                  width: 100
                  height: 150.1
                  center:
                    lat: 37.770040510499996
                    lng: -122.38714009525
                  bottomLeftCorner:
                    lat: 37.7696461495
                    lng: -122.3880815506
                  bottomRightCorner:
                    lat: 37.771524649766654
                    lng: -122.38795275055205
                  topLeftCorner:
                    lat: 37.769700101836364
                    lng: -122.3888684251381
                  topRightCorner:
                    lat: 37.77157860210302
                    lng: -122.38873962509012
    post:
      tags:
        - GENERAL > Networks > Configure > Floor Plans
      summary: Upload A Floor Plan
      description: >
        Upload a floor plan
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        name| string| The name of your floor plan.

        center| object| The longitude and latitude of the center of your floor
        plan. The 'center' or two adjacent corners (e.g. 'topLeftCorner' and
        'bottomLeftCorner') must be specified. If 'center' is specified, the
        floor plan is placed over that point with no rotation. If two adjacent
        corners are specified, the floor plan is rotated to line up with the two
        specified points. The aspect ratio of the floor plan's image is
        preserved regardless of which corners/center are specified. (This means
        if that more than two corners are specified, only two corners may be
        used to preserve the floor plan's aspect ratio.). No two points can have
        the same latitude, longitude pair.

        bottomLeftCorner| object| The longitude and latitude of the bottom left
        corner of your floor plan.

        bottomRightCorner| object| The longitude and latitude of the bottom
        right corner of your floor plan.

        topLeftCorner| object| The longitude and latitude of the top left corner
        of your floor plan.

        topRightCorner| object| The longitude and latitude of the top right
        corner of your floor plan.

        imageContents| string| The file contents (a base 64 encoded string) of
        your image. Supported formats are PNG, GIF, and JPG. Note that all
        images are saved as PNG files, regardless of the format they are
        uploaded in.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"name\": \"<string>\",\n    \"imageContents\":
                \"<byte>\",\n    \"center\": {\n        \"lat\":
                \"<float>\",\n        \"lng\": \"<float>\"\n    },\n   
                \"bottomLeftCorner\": {\n        \"lat\": \"<float>\",\n       
                \"lng\": \"<float>\"\n    },\n    \"bottomRightCorner\":
                {\n        \"lat\": \"<float>\",\n        \"lng\":
                \"<float>\"\n    },\n    \"topLeftCorner\": {\n        \"lat\":
                \"<float>\",\n        \"lng\": \"<float>\"\n    },\n   
                \"topRightCorner\": {\n        \"lat\": \"<float>\",\n       
                \"lng\": \"<float>\"\n    }\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                floorPlanId: g_1234567
                imageUrl: https://meraki-na.s3.amazonaws.com/assets/...
                imageUrlExpiresAt: '2019-06-11 16:04:54 +00:00'
                imageExtension: png
                imageMd5: 2a9edd3f4ffd80130c647d13eacb59f3
                name: HQ Floor Plan
                devices:
                  - name: My AP
                    lat: 37.4180951010362
                    lng: -122.098531723022
                    serial: Q234-ABCD-5678
                    mac: '00:11:22:33:44:55'
                    model: MR34
                    address: 1600 Pennsylvania Ave
                    notes: My AP's note
                    lanIp: 1.2.3.4
                    tags:
                      - recently-added
                    networkId: N_24329156
                    beaconIdParams:
                      uuid: 00000000-0000-0000-0000-000000000000
                      major: 5
                      minor: 3
                    firmware: wireless-25-14
                    floorPlanId: g_1234567
                width: 100
                height: 150.1
                center:
                  lat: 37.770040510499996
                  lng: -122.38714009525
                bottomLeftCorner:
                  lat: 37.7696461495
                  lng: -122.3880815506
                bottomRightCorner:
                  lat: 37.771524649766654
                  lng: -122.38795275055205
                topLeftCorner:
                  lat: 37.769700101836364
                  lng: -122.3888684251381
                topRightCorner:
                  lat: 37.77157860210302
                  lng: -122.38873962509012
  /networks/{networkId}/floorPlans/{floorPlanId}:
    get:
      tags:
        - GENERAL > Networks > Configure > Floor Plans
      summary: Find A Floor Plan By ID
      description: Find a floor plan by ID
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: floorPlanId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{floorPlanId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                floorPlanId: g_1234567
                imageUrl: https://meraki-na.s3.amazonaws.com/assets/...
                imageUrlExpiresAt: '2019-06-11 16:04:54 +00:00'
                imageExtension: png
                imageMd5: 2a9edd3f4ffd80130c647d13eacb59f3
                name: HQ Floor Plan
                devices:
                  - name: My AP
                    lat: 37.4180951010362
                    lng: -122.098531723022
                    serial: Q234-ABCD-5678
                    mac: '00:11:22:33:44:55'
                    model: MR34
                    address: 1600 Pennsylvania Ave
                    notes: My AP's note
                    lanIp: 1.2.3.4
                    tags:
                      - recently-added
                    networkId: N_24329156
                    beaconIdParams:
                      uuid: 00000000-0000-0000-0000-000000000000
                      major: 5
                      minor: 3
                    firmware: wireless-25-14
                    floorPlanId: g_1234567
                width: 100
                height: 150.1
                center:
                  lat: 37.770040510499996
                  lng: -122.38714009525
                bottomLeftCorner:
                  lat: 37.7696461495
                  lng: -122.3880815506
                bottomRightCorner:
                  lat: 37.771524649766654
                  lng: -122.38795275055205
                topLeftCorner:
                  lat: 37.769700101836364
                  lng: -122.3888684251381
                topRightCorner:
                  lat: 37.77157860210302
                  lng: -122.38873962509012
    put:
      tags:
        - GENERAL > Networks > Configure > Floor Plans
      summary: Update A Floor Plans Geolocation And Other Meta Data
      description: >+
        Update a floor plan's geolocation and other meta data
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        name| string| The name of your floor plan.

        center| object| The longitude and latitude of the center of your floor
        plan. If you want to change the geolocation data of your floor plan,
        either the 'center' or two adjacent corners (e.g. 'topLeftCorner' and
        'bottomLeftCorner') must be specified. If 'center' is specified, the
        floor plan is placed over that point with no rotation. If two adjacent
        corners are specified, the floor plan is rotated to line up with the two
        specified points. The aspect ratio of the floor plan's image is
        preserved regardless of which corners/center are specified. (This means
        if that more than two corners are specified, only two corners may be
        used to preserve the floor plan's aspect ratio.). No two points can have
        the same latitude, longitude pair.

        bottomLeftCorner| object| The longitude and latitude of the bottom left
        corner of your floor plan.

        bottomRightCorner| object| The longitude and latitude of the bottom
        right corner of your floor plan.

        topLeftCorner| object| The longitude and latitude of the top left corner
        of your floor plan.

        topRightCorner| object| The longitude and latitude of the top right
        corner of your floor plan.

        imageContents| string| The file contents (a base 64 encoded string) of
        your new image. Supported formats are PNG, GIF, and JPG. Note that all
        images are saved as PNG files, regardless of the format they are
        uploaded in. If you upload a new image, and you do NOT specify any new
        geolocation fields ('center, 'topLeftCorner', etc), the floor plan will
        be recentered with no rotation in order to maintain the aspect ratio of
        your new image.


        #### Supports Action Batches


        **Resource**|**Operation**

        :-------------: |:-------------:

        `/networks/{networkId}/floorPlans/{floorPlanId}` | update

      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"name\": \"<string>\",\n    \"center\": {\n       
                \"lat\": \"<float>\",\n        \"lng\": \"<float>\"\n    },\n   
                \"bottomLeftCorner\": {\n        \"lat\": \"<float>\",\n       
                \"lng\": \"<float>\"\n    },\n    \"bottomRightCorner\":
                {\n        \"lat\": \"<float>\",\n        \"lng\":
                \"<float>\"\n    },\n    \"topLeftCorner\": {\n        \"lat\":
                \"<float>\",\n        \"lng\": \"<float>\"\n    },\n   
                \"topRightCorner\": {\n        \"lat\": \"<float>\",\n       
                \"lng\": \"<float>\"\n    },\n    \"imageContents\":
                \"<byte>\"\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: floorPlanId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{floorPlanId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                floorPlanId: g_1234567
                imageUrl: https://meraki-na.s3.amazonaws.com/assets/...
                imageUrlExpiresAt: '2019-06-11 16:04:54 +00:00'
                imageExtension: png
                imageMd5: 2a9edd3f4ffd80130c647d13eacb59f3
                name: HQ Floor Plan
                devices:
                  - name: My AP
                    lat: 37.4180951010362
                    lng: -122.098531723022
                    serial: Q234-ABCD-5678
                    mac: '00:11:22:33:44:55'
                    model: MR34
                    address: 1600 Pennsylvania Ave
                    notes: My AP's note
                    lanIp: 1.2.3.4
                    tags:
                      - recently-added
                    networkId: N_24329156
                    beaconIdParams:
                      uuid: 00000000-0000-0000-0000-000000000000
                      major: 5
                      minor: 3
                    firmware: wireless-25-14
                    floorPlanId: g_1234567
                width: 100
                height: 150.1
                center:
                  lat: 37.770040510499996
                  lng: -122.38714009525
                bottomLeftCorner:
                  lat: 37.7696461495
                  lng: -122.3880815506
                bottomRightCorner:
                  lat: 37.771524649766654
                  lng: -122.38795275055205
                topLeftCorner:
                  lat: 37.769700101836364
                  lng: -122.3888684251381
                topRightCorner:
                  lat: 37.77157860210302
                  lng: -122.38873962509012
    delete:
      tags:
        - GENERAL > Networks > Configure > Floor Plans
      summary: Destroy A Floor Plan
      description: |+
        Destroy a floor plan
        #### Supports Action Batches

        **Resource**|**Operation**
        :-------------: |:-------------:
        `/networks/{networkId}/floorPlans/{floorPlanId}` | destroy

      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: floorPlanId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{floorPlanId}}'
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /networks/{networkId}/groupPolicies:
    get:
      tags:
        - GENERAL > Networks > Configure > Group Policies
      summary: List The Group Policies In A Network
      description: List the group policies in a network
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - name: No video streaming
                  groupPolicyId: '101'
                  scheduling:
                    enabled: true
                    monday:
                      active: true
                      from: '9:00'
                      to: '17:00'
                    tuesday:
                      active: true
                      from: '9:00'
                      to: '17:00'
                    wednesday:
                      active: true
                      from: '9:00'
                      to: '17:00'
                    thursday:
                      active: true
                      from: '9:00'
                      to: '17:00'
                    friday:
                      active: true
                      from: '9:00'
                      to: '17:00'
                    saturday:
                      active: false
                      from: '0:00'
                      to: '24:00'
                    sunday:
                      active: false
                      from: '0:00'
                      to: '24:00'
                  bandwidth:
                    settings: custom
                    bandwidthLimits:
                      limitUp: 1000000
                      limitDown: 1000000
                  firewallAndTrafficShaping:
                    settings: custom
                    trafficShapingRules:
                      - definitions:
                          - type: host
                            value: google.com
                          - type: port
                            value: '9090'
                          - type: ipRange
                            value: 192.1.0.0
                          - type: ipRange
                            value: 192.1.0.0/16
                          - type: ipRange
                            value: 10.1.0.0/16:80
                          - type: localNet
                            value: 192.168.0.0/16
                          - type: applicationCategory
                            value:
                              id: meraki:layer7/category/2
                              name: Blogging
                          - type: application
                            value:
                              id: meraki:layer7/application/133
                              name: Battle.net
                        perClientBandwidthLimits:
                          settings: custom
                          bandwidthLimits:
                            limitUp: 1000000
                            limitDown: 1000000
                        dscpTagValue: null
                        pcpTagValue: null
                    l3FirewallRules:
                      - comment: Allow TCP traffic to subnet with HTTP servers.
                        policy: allow
                        protocol: tcp
                        destPort: 443
                        destCidr: 192.168.1.0/24
                    l7FirewallRules:
                      - policy: deny
                        type: application
                        value:
                          id: meraki:layer7/application/67
                          name: Xbox LIVE
                      - policy: deny
                        type: applicationCategory
                        value:
                          id: meraki:layer7/category/2
                          name: Blogging
                      - policy: deny
                        type: host
                        value: google.com
                      - policy: deny
                        type: port
                        value: '23'
                      - policy: deny
                        type: ipRange
                        value: 10.11.12.00/24
                      - policy: deny
                        type: ipRange
                        value: 10.11.12.00/24:5555
                      - policy: deny
                        type: blockedCountries
                        value:
                          - AX
                          - CA
                      - policy: deny
                        type: allowedCountries
                        value:
                          - US
                  contentFiltering:
                    allowedUrlPatterns:
                      settings: network default
                      patterns: []
                    blockedUrlPatterns:
                      settings: append
                      patterns:
                        - http://www.example.com
                        - http://www.betting.com
                    blockedUrlCategories:
                      settings: override
                      categories:
                        - meraki:contentFiltering/category/1
                        - meraki:contentFiltering/category/7
                  splashAuthSettings: bypass
                  vlanTagging:
                    settings: custom
                    vlanId: '1'
                  bonjourForwarding:
                    settings: custom
                    rules:
                      - description: A simple bonjour rule
                        vlanId: '1'
                        services:
                          - All Services
    post:
      tags:
        - GENERAL > Networks > Configure > Group Policies
      summary: Create A Group Policy
      description: >+
        Create a group policy
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        name| string| The name for your group policy. Required.

        scheduling| object|     The schedule for the group policy. Schedules are
        applied to days of the week.


        bandwidth| object|     The bandwidth settings for clients bound to your
        group policy.


        firewallAndTrafficShaping| object|     The firewall and traffic shaping
        rules and settings for your policy.


        contentFiltering| object| The content filtering settings for your group
        policy

        splashAuthSettings| string| Whether clients bound to your policy will
        bypass splash authorization or behave according to the network's rules.
        Can be one of 'network default' or 'bypass'. Only available if your
        network has a wireless configuration.

        vlanTagging| object| The VLAN tagging settings for your group policy.
        Only available if your network has a wireless configuration.

        bonjourForwarding| object| The Bonjour settings for your group policy.
        Only valid if your network has a wireless configuration.


        #### Supports Action Batches


        **Resource**|**Operation**

        :-------------: |:-------------:

        `/networks/{networkId}/groupPolicies` | create

      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"name\": \"<string>\",\n    \"scheduling\": {\n       
                \"enabled\": \"<boolean>\",\n        \"monday\": {\n           
                \"active\": \"<boolean>\",\n            \"from\":
                \"<string>\",\n            \"to\": \"<string>\"\n       
                },\n        \"tuesday\": {\n            \"active\":
                \"<boolean>\",\n            \"from\": \"<string>\",\n           
                \"to\": \"<string>\"\n        },\n        \"wednesday\":
                {\n            \"active\": \"<boolean>\",\n            \"from\":
                \"<string>\",\n            \"to\": \"<string>\"\n       
                },\n        \"thursday\": {\n            \"active\":
                \"<boolean>\",\n            \"from\": \"<string>\",\n           
                \"to\": \"<string>\"\n        },\n        \"friday\":
                {\n            \"active\": \"<boolean>\",\n            \"from\":
                \"<string>\",\n            \"to\": \"<string>\"\n       
                },\n        \"saturday\": {\n            \"active\":
                \"<boolean>\",\n            \"from\": \"<string>\",\n           
                \"to\": \"<string>\"\n        },\n        \"sunday\":
                {\n            \"active\": \"<boolean>\",\n            \"from\":
                \"<string>\",\n            \"to\": \"<string>\"\n        }\n   
                },\n    \"bandwidth\": {\n        \"settings\":
                \"<string>\",\n        \"bandwidthLimits\": {\n           
                \"limitUp\": \"<integer>\",\n            \"limitDown\":
                \"<integer>\"\n        }\n    },\n   
                \"firewallAndTrafficShaping\": {\n        \"settings\":
                \"<string>\",\n        \"trafficShapingRules\": [\n           
                {\n                \"definitions\": {\n                   
                \"type\": \"array\",\n                    \"description\": \"   
                A list of objects describing the definitions of your traffic
                shaping rule. At least one definition is
                required.\\n\",\n                    \"maxItems\":
                2,\n                    \"minItems\": 2,\n                   
                \"items\": {\n                        \"type\":
                \"object\",\n                        \"required\":
                [\n                           
                \"type\",\n                           
                \"value\"\n                        ],\n                       
                \"properties\": {\n                            \"type\":
                {\n                                \"type\":
                \"string\",\n                                \"enum\":
                [\n                                   
                \"application\",\n                                   
                \"applicationCategory\",\n                                   
                \"host\",\n                                   
                \"port\",\n                                   
                \"ipRange\",\n                                   
                \"localNet\"\n                               
                ],\n                                \"description\": \"The type
                of definition. Can be one of 'application',
                'applicationCategory', 'host', 'port', 'ipRange' or
                'localNet'.\",\n                                \"default\":
                \"<string>\"\n                           
                },\n                            \"value\":
                {\n                                \"type\":
                \"string\",\n                                \"description\":
                \"    If \\\"type\\\" is 'host', 'port', 'ipRange' or
                'localNet', then \\\"value\\\" must be a string, matching
                either\\n    a hostname (e.g. \\\"somesite.com\\\"), a port
                (e.g. 8080), or an IP range (\\\"192.1.0.0\\\",\\n   
                \\\"192.1.0.0/16\\\", or \\\"10.1.0.0/16:80\\\"). 'localNet'
                also supports CIDR notation, excluding\\n    custom
                ports.\\n     If \\\"type\\\" is 'application' or
                'applicationCategory', then \\\"value\\\" must be an
                object\\n    with the structure { \\\"id\\\":
                \\\"meraki:layer7/...\\\" }, where \\\"id\\\" is the application
                category or\\n    application ID (for a list of IDs for your
                network, use the trafficShaping/applicationCategories\\n   
                endpoint).\\n\",\n                                \"default\":
                \"<string>\"\n                           
                }\n                        }\n                   
                }\n                },\n               
                \"perClientBandwidthLimits\": {\n                   
                \"settings\": \"<string>\",\n                   
                \"bandwidthLimits\": {\n                        \"limitUp\":
                \"<integer>\",\n                        \"limitDown\":
                \"<integer>\"\n                    }\n               
                },\n                \"dscpTagValue\":
                \"<integer>\",\n                \"pcpTagValue\":
                \"<integer>\",\n                \"priority\":
                \"<string>\"\n            },\n            {\n               
                \"definitions\": {\n                    \"type\":
                \"array\",\n                    \"description\": \"    A list of
                objects describing the definitions of your traffic shaping rule.
                At least one definition is required.\\n\",\n                   
                \"maxItems\": 2,\n                    \"minItems\":
                2,\n                    \"items\": {\n                       
                \"type\": \"object\",\n                        \"required\":
                [\n                           
                \"type\",\n                           
                \"value\"\n                        ],\n                       
                \"properties\": {\n                            \"type\":
                {\n                                \"type\":
                \"string\",\n                                \"enum\":
                [\n                                   
                \"application\",\n                                   
                \"applicationCategory\",\n                                   
                \"host\",\n                                   
                \"port\",\n                                   
                \"ipRange\",\n                                   
                \"localNet\"\n                               
                ],\n                                \"description\": \"The type
                of definition. Can be one of 'application',
                'applicationCategory', 'host', 'port', 'ipRange' or
                'localNet'.\",\n                                \"default\":
                \"<string>\"\n                           
                },\n                            \"value\":
                {\n                                \"type\":
                \"string\",\n                                \"description\":
                \"    If \\\"type\\\" is 'host', 'port', 'ipRange' or
                'localNet', then \\\"value\\\" must be a string, matching
                either\\n    a hostname (e.g. \\\"somesite.com\\\"), a port
                (e.g. 8080), or an IP range (\\\"192.1.0.0\\\",\\n   
                \\\"192.1.0.0/16\\\", or \\\"10.1.0.0/16:80\\\"). 'localNet'
                also supports CIDR notation, excluding\\n    custom
                ports.\\n     If \\\"type\\\" is 'application' or
                'applicationCategory', then \\\"value\\\" must be an
                object\\n    with the structure { \\\"id\\\":
                \\\"meraki:layer7/...\\\" }, where \\\"id\\\" is the application
                category or\\n    application ID (for a list of IDs for your
                network, use the trafficShaping/applicationCategories\\n   
                endpoint).\\n\",\n                                \"default\":
                \"<string>\"\n                           
                }\n                        }\n                   
                }\n                },\n               
                \"perClientBandwidthLimits\": {\n                   
                \"settings\": \"<string>\",\n                   
                \"bandwidthLimits\": {\n                        \"limitUp\":
                \"<integer>\",\n                        \"limitDown\":
                \"<integer>\"\n                    }\n               
                },\n                \"dscpTagValue\":
                \"<integer>\",\n                \"pcpTagValue\":
                \"<integer>\",\n                \"priority\":
                \"<string>\"\n            }\n        ],\n       
                \"l3FirewallRules\": [\n            {\n               
                \"policy\": \"<string>\",\n                \"protocol\":
                \"<string>\",\n                \"destCidr\":
                \"<string>\",\n                \"comment\":
                \"<string>\",\n                \"destPort\":
                \"<string>\"\n            },\n            {\n               
                \"policy\": \"<string>\",\n                \"protocol\":
                \"<string>\",\n                \"destCidr\":
                \"<string>\",\n                \"comment\":
                \"<string>\",\n                \"destPort\":
                \"<string>\"\n            }\n        ],\n       
                \"l7FirewallRules\": [\n            {\n               
                \"policy\": \"<string>\",\n                \"type\":
                \"<string>\",\n                \"value\":
                \"<string>\"\n            },\n            {\n               
                \"policy\": \"<string>\",\n                \"type\":
                \"<string>\",\n                \"value\":
                \"<string>\"\n            }\n        ]\n    },\n   
                \"contentFiltering\": {\n        \"allowedUrlPatterns\":
                {\n            \"settings\": \"<string>\",\n           
                \"patterns\": [\n                \"<string>\",\n               
                \"<string>\"\n            ]\n        },\n       
                \"blockedUrlPatterns\": {\n            \"settings\":
                \"<string>\",\n            \"patterns\": [\n               
                \"<string>\",\n                \"<string>\"\n           
                ]\n        },\n        \"blockedUrlCategories\": {\n           
                \"settings\": \"<string>\",\n            \"categories\":
                [\n                \"<string>\",\n               
                \"<string>\"\n            ]\n        }\n    },\n   
                \"splashAuthSettings\": \"<string>\",\n    \"vlanTagging\":
                {\n        \"settings\": \"<string>\",\n        \"vlanId\":
                \"<string>\"\n    },\n    \"bonjourForwarding\": {\n       
                \"settings\": \"<string>\",\n        \"rules\": [\n           
                {\n                \"vlanId\": \"<string>\",\n               
                \"services\": [\n                   
                \"<string>\",\n                    \"<string>\"\n               
                ],\n                \"description\": \"<string>\"\n           
                },\n            {\n                \"vlanId\":
                \"<string>\",\n                \"services\":
                [\n                    \"<string>\",\n                   
                \"<string>\"\n                ],\n               
                \"description\": \"<string>\"\n            }\n        ]\n   
                }\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                name: No video streaming
                groupPolicyId: '101'
                scheduling:
                  enabled: true
                  monday:
                    active: true
                    from: '9:00'
                    to: '17:00'
                  tuesday:
                    active: true
                    from: '9:00'
                    to: '17:00'
                  wednesday:
                    active: true
                    from: '9:00'
                    to: '17:00'
                  thursday:
                    active: true
                    from: '9:00'
                    to: '17:00'
                  friday:
                    active: true
                    from: '9:00'
                    to: '17:00'
                  saturday:
                    active: false
                    from: '0:00'
                    to: '24:00'
                  sunday:
                    active: false
                    from: '0:00'
                    to: '24:00'
                bandwidth:
                  settings: custom
                  bandwidthLimits:
                    limitUp: 1000000
                    limitDown: 1000000
                firewallAndTrafficShaping:
                  settings: custom
                  trafficShapingRules:
                    - definitions:
                        - type: host
                          value: google.com
                        - type: port
                          value: '9090'
                        - type: ipRange
                          value: 192.1.0.0
                        - type: ipRange
                          value: 192.1.0.0/16
                        - type: ipRange
                          value: 10.1.0.0/16:80
                        - type: localNet
                          value: 192.168.0.0/16
                        - type: applicationCategory
                          value:
                            id: meraki:layer7/category/2
                            name: Blogging
                        - type: application
                          value:
                            id: meraki:layer7/application/133
                            name: Battle.net
                      perClientBandwidthLimits:
                        settings: custom
                        bandwidthLimits:
                          limitUp: 1000000
                          limitDown: 1000000
                      dscpTagValue: null
                      pcpTagValue: null
                  l3FirewallRules:
                    - comment: Allow TCP traffic to subnet with HTTP servers.
                      policy: allow
                      protocol: tcp
                      destPort: 443
                      destCidr: 192.168.1.0/24
                  l7FirewallRules:
                    - policy: deny
                      type: application
                      value:
                        id: meraki:layer7/application/67
                        name: Xbox LIVE
                    - policy: deny
                      type: applicationCategory
                      value:
                        id: meraki:layer7/category/2
                        name: Blogging
                    - policy: deny
                      type: host
                      value: google.com
                    - policy: deny
                      type: port
                      value: '23'
                    - policy: deny
                      type: ipRange
                      value: 10.11.12.00/24
                    - policy: deny
                      type: ipRange
                      value: 10.11.12.00/24:5555
                    - policy: deny
                      type: blockedCountries
                      value:
                        - AX
                        - CA
                    - policy: deny
                      type: allowedCountries
                      value:
                        - US
                contentFiltering:
                  allowedUrlPatterns:
                    settings: network default
                    patterns: []
                  blockedUrlPatterns:
                    settings: append
                    patterns:
                      - http://www.example.com
                      - http://www.betting.com
                  blockedUrlCategories:
                    settings: override
                    categories:
                      - meraki:contentFiltering/category/1
                      - meraki:contentFiltering/category/7
                splashAuthSettings: bypass
                vlanTagging:
                  settings: custom
                  vlanId: '1'
                bonjourForwarding:
                  settings: custom
                  rules:
                    - description: A simple bonjour rule
                      vlanId: '1'
                      services:
                        - All Services
  /networks/{networkId}/groupPolicies/{groupPolicyId}:
    get:
      tags:
        - GENERAL > Networks > Configure > Group Policies
      summary: Display A Group Policy
      description: Display a group policy
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: groupPolicyId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{groupPolicyId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                name: No video streaming
                groupPolicyId: '101'
                scheduling:
                  enabled: true
                  monday:
                    active: true
                    from: '9:00'
                    to: '17:00'
                  tuesday:
                    active: true
                    from: '9:00'
                    to: '17:00'
                  wednesday:
                    active: true
                    from: '9:00'
                    to: '17:00'
                  thursday:
                    active: true
                    from: '9:00'
                    to: '17:00'
                  friday:
                    active: true
                    from: '9:00'
                    to: '17:00'
                  saturday:
                    active: false
                    from: '0:00'
                    to: '24:00'
                  sunday:
                    active: false
                    from: '0:00'
                    to: '24:00'
                bandwidth:
                  settings: custom
                  bandwidthLimits:
                    limitUp: 1000000
                    limitDown: 1000000
                firewallAndTrafficShaping:
                  settings: custom
                  trafficShapingRules:
                    - definitions:
                        - type: host
                          value: google.com
                        - type: port
                          value: '9090'
                        - type: ipRange
                          value: 192.1.0.0
                        - type: ipRange
                          value: 192.1.0.0/16
                        - type: ipRange
                          value: 10.1.0.0/16:80
                        - type: localNet
                          value: 192.168.0.0/16
                        - type: applicationCategory
                          value:
                            id: meraki:layer7/category/2
                            name: Blogging
                        - type: application
                          value:
                            id: meraki:layer7/application/133
                            name: Battle.net
                      perClientBandwidthLimits:
                        settings: custom
                        bandwidthLimits:
                          limitUp: 1000000
                          limitDown: 1000000
                      dscpTagValue: null
                      pcpTagValue: null
                  l3FirewallRules:
                    - comment: Allow TCP traffic to subnet with HTTP servers.
                      policy: allow
                      protocol: tcp
                      destPort: 443
                      destCidr: 192.168.1.0/24
                  l7FirewallRules:
                    - policy: deny
                      type: application
                      value:
                        id: meraki:layer7/application/67
                        name: Xbox LIVE
                    - policy: deny
                      type: applicationCategory
                      value:
                        id: meraki:layer7/category/2
                        name: Blogging
                    - policy: deny
                      type: host
                      value: google.com
                    - policy: deny
                      type: port
                      value: '23'
                    - policy: deny
                      type: ipRange
                      value: 10.11.12.00/24
                    - policy: deny
                      type: ipRange
                      value: 10.11.12.00/24:5555
                    - policy: deny
                      type: blockedCountries
                      value:
                        - AX
                        - CA
                    - policy: deny
                      type: allowedCountries
                      value:
                        - US
                contentFiltering:
                  allowedUrlPatterns:
                    settings: network default
                    patterns: []
                  blockedUrlPatterns:
                    settings: append
                    patterns:
                      - http://www.example.com
                      - http://www.betting.com
                  blockedUrlCategories:
                    settings: override
                    categories:
                      - meraki:contentFiltering/category/1
                      - meraki:contentFiltering/category/7
                splashAuthSettings: bypass
                vlanTagging:
                  settings: custom
                  vlanId: '1'
                bonjourForwarding:
                  settings: custom
                  rules:
                    - description: A simple bonjour rule
                      vlanId: '1'
                      services:
                        - All Services
    put:
      tags:
        - GENERAL > Networks > Configure > Group Policies
      summary: Update A Group Policy
      description: >+
        Update a group policy
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        name| string| The name for your group policy.

        scheduling| object|     The schedule for the group policy. Schedules are
        applied to days of the week.


        bandwidth| object|     The bandwidth settings for clients bound to your
        group policy.


        firewallAndTrafficShaping| object|     The firewall and traffic shaping
        rules and settings for your policy.


        contentFiltering| object| The content filtering settings for your group
        policy

        splashAuthSettings| string| Whether clients bound to your policy will
        bypass splash authorization or behave according to the network's rules.
        Can be one of 'network default' or 'bypass'. Only available if your
        network has a wireless configuration.

        vlanTagging| object| The VLAN tagging settings for your group policy.
        Only available if your network has a wireless configuration.

        bonjourForwarding| object| The Bonjour settings for your group policy.
        Only valid if your network has a wireless configuration.


        #### Supports Action Batches


        **Resource**|**Operation**

        :-------------: |:-------------:

        `/networks/{networkId}/groupPolicies/{groupPolicyId}` | update

      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"name\": \"<string>\",\n    \"scheduling\": {\n       
                \"enabled\": \"<boolean>\",\n        \"monday\": {\n           
                \"active\": \"<boolean>\",\n            \"from\":
                \"<string>\",\n            \"to\": \"<string>\"\n       
                },\n        \"tuesday\": {\n            \"active\":
                \"<boolean>\",\n            \"from\": \"<string>\",\n           
                \"to\": \"<string>\"\n        },\n        \"wednesday\":
                {\n            \"active\": \"<boolean>\",\n            \"from\":
                \"<string>\",\n            \"to\": \"<string>\"\n       
                },\n        \"thursday\": {\n            \"active\":
                \"<boolean>\",\n            \"from\": \"<string>\",\n           
                \"to\": \"<string>\"\n        },\n        \"friday\":
                {\n            \"active\": \"<boolean>\",\n            \"from\":
                \"<string>\",\n            \"to\": \"<string>\"\n       
                },\n        \"saturday\": {\n            \"active\":
                \"<boolean>\",\n            \"from\": \"<string>\",\n           
                \"to\": \"<string>\"\n        },\n        \"sunday\":
                {\n            \"active\": \"<boolean>\",\n            \"from\":
                \"<string>\",\n            \"to\": \"<string>\"\n        }\n   
                },\n    \"bandwidth\": {\n        \"settings\":
                \"<string>\",\n        \"bandwidthLimits\": {\n           
                \"limitUp\": \"<integer>\",\n            \"limitDown\":
                \"<integer>\"\n        }\n    },\n   
                \"firewallAndTrafficShaping\": {\n        \"settings\":
                \"<string>\",\n        \"trafficShapingRules\": [\n           
                {\n                \"definitions\": {\n                   
                \"type\": \"array\",\n                    \"description\": \"   
                A list of objects describing the definitions of your traffic
                shaping rule. At least one definition is
                required.\\n\",\n                    \"maxItems\":
                2,\n                    \"minItems\": 2,\n                   
                \"items\": {\n                        \"type\":
                \"object\",\n                        \"required\":
                [\n                           
                \"type\",\n                           
                \"value\"\n                        ],\n                       
                \"properties\": {\n                            \"type\":
                {\n                                \"type\":
                \"string\",\n                                \"enum\":
                [\n                                   
                \"application\",\n                                   
                \"applicationCategory\",\n                                   
                \"host\",\n                                   
                \"port\",\n                                   
                \"ipRange\",\n                                   
                \"localNet\"\n                               
                ],\n                                \"description\": \"The type
                of definition. Can be one of 'application',
                'applicationCategory', 'host', 'port', 'ipRange' or
                'localNet'.\",\n                                \"default\":
                \"<string>\"\n                           
                },\n                            \"value\":
                {\n                                \"type\":
                \"string\",\n                                \"description\":
                \"    If \\\"type\\\" is 'host', 'port', 'ipRange' or
                'localNet', then \\\"value\\\" must be a string, matching
                either\\n    a hostname (e.g. \\\"somesite.com\\\"), a port
                (e.g. 8080), or an IP range (\\\"192.1.0.0\\\",\\n   
                \\\"192.1.0.0/16\\\", or \\\"10.1.0.0/16:80\\\"). 'localNet'
                also supports CIDR notation, excluding\\n    custom
                ports.\\n     If \\\"type\\\" is 'application' or
                'applicationCategory', then \\\"value\\\" must be an
                object\\n    with the structure { \\\"id\\\":
                \\\"meraki:layer7/...\\\" }, where \\\"id\\\" is the application
                category or\\n    application ID (for a list of IDs for your
                network, use the trafficShaping/applicationCategories\\n   
                endpoint).\\n\",\n                                \"default\":
                \"<string>\"\n                           
                }\n                        }\n                   
                }\n                },\n               
                \"perClientBandwidthLimits\": {\n                   
                \"settings\": \"<string>\",\n                   
                \"bandwidthLimits\": {\n                        \"limitUp\":
                \"<integer>\",\n                        \"limitDown\":
                \"<integer>\"\n                    }\n               
                },\n                \"dscpTagValue\":
                \"<integer>\",\n                \"pcpTagValue\":
                \"<integer>\",\n                \"priority\":
                \"<string>\"\n            },\n            {\n               
                \"definitions\": {\n                    \"type\":
                \"array\",\n                    \"description\": \"    A list of
                objects describing the definitions of your traffic shaping rule.
                At least one definition is required.\\n\",\n                   
                \"maxItems\": 2,\n                    \"minItems\":
                2,\n                    \"items\": {\n                       
                \"type\": \"object\",\n                        \"required\":
                [\n                           
                \"type\",\n                           
                \"value\"\n                        ],\n                       
                \"properties\": {\n                            \"type\":
                {\n                                \"type\":
                \"string\",\n                                \"enum\":
                [\n                                   
                \"application\",\n                                   
                \"applicationCategory\",\n                                   
                \"host\",\n                                   
                \"port\",\n                                   
                \"ipRange\",\n                                   
                \"localNet\"\n                               
                ],\n                                \"description\": \"The type
                of definition. Can be one of 'application',
                'applicationCategory', 'host', 'port', 'ipRange' or
                'localNet'.\",\n                                \"default\":
                \"<string>\"\n                           
                },\n                            \"value\":
                {\n                                \"type\":
                \"string\",\n                                \"description\":
                \"    If \\\"type\\\" is 'host', 'port', 'ipRange' or
                'localNet', then \\\"value\\\" must be a string, matching
                either\\n    a hostname (e.g. \\\"somesite.com\\\"), a port
                (e.g. 8080), or an IP range (\\\"192.1.0.0\\\",\\n   
                \\\"192.1.0.0/16\\\", or \\\"10.1.0.0/16:80\\\"). 'localNet'
                also supports CIDR notation, excluding\\n    custom
                ports.\\n     If \\\"type\\\" is 'application' or
                'applicationCategory', then \\\"value\\\" must be an
                object\\n    with the structure { \\\"id\\\":
                \\\"meraki:layer7/...\\\" }, where \\\"id\\\" is the application
                category or\\n    application ID (for a list of IDs for your
                network, use the trafficShaping/applicationCategories\\n   
                endpoint).\\n\",\n                                \"default\":
                \"<string>\"\n                           
                }\n                        }\n                   
                }\n                },\n               
                \"perClientBandwidthLimits\": {\n                   
                \"settings\": \"<string>\",\n                   
                \"bandwidthLimits\": {\n                        \"limitUp\":
                \"<integer>\",\n                        \"limitDown\":
                \"<integer>\"\n                    }\n               
                },\n                \"dscpTagValue\":
                \"<integer>\",\n                \"pcpTagValue\":
                \"<integer>\",\n                \"priority\":
                \"<string>\"\n            }\n        ],\n       
                \"l3FirewallRules\": [\n            {\n               
                \"policy\": \"<string>\",\n                \"protocol\":
                \"<string>\",\n                \"destCidr\":
                \"<string>\",\n                \"comment\":
                \"<string>\",\n                \"destPort\":
                \"<string>\"\n            },\n            {\n               
                \"policy\": \"<string>\",\n                \"protocol\":
                \"<string>\",\n                \"destCidr\":
                \"<string>\",\n                \"comment\":
                \"<string>\",\n                \"destPort\":
                \"<string>\"\n            }\n        ],\n       
                \"l7FirewallRules\": [\n            {\n               
                \"policy\": \"<string>\",\n                \"type\":
                \"<string>\",\n                \"value\":
                \"<string>\"\n            },\n            {\n               
                \"policy\": \"<string>\",\n                \"type\":
                \"<string>\",\n                \"value\":
                \"<string>\"\n            }\n        ]\n    },\n   
                \"contentFiltering\": {\n        \"allowedUrlPatterns\":
                {\n            \"settings\": \"<string>\",\n           
                \"patterns\": [\n                \"<string>\",\n               
                \"<string>\"\n            ]\n        },\n       
                \"blockedUrlPatterns\": {\n            \"settings\":
                \"<string>\",\n            \"patterns\": [\n               
                \"<string>\",\n                \"<string>\"\n           
                ]\n        },\n        \"blockedUrlCategories\": {\n           
                \"settings\": \"<string>\",\n            \"categories\":
                [\n                \"<string>\",\n               
                \"<string>\"\n            ]\n        }\n    },\n   
                \"splashAuthSettings\": \"<string>\",\n    \"vlanTagging\":
                {\n        \"settings\": \"<string>\",\n        \"vlanId\":
                \"<string>\"\n    },\n    \"bonjourForwarding\": {\n       
                \"settings\": \"<string>\",\n        \"rules\": [\n           
                {\n                \"vlanId\": \"<string>\",\n               
                \"services\": [\n                   
                \"<string>\",\n                    \"<string>\"\n               
                ],\n                \"description\": \"<string>\"\n           
                },\n            {\n                \"vlanId\":
                \"<string>\",\n                \"services\":
                [\n                    \"<string>\",\n                   
                \"<string>\"\n                ],\n               
                \"description\": \"<string>\"\n            }\n        ]\n   
                }\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: groupPolicyId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{groupPolicyId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                name: No video streaming
                groupPolicyId: '101'
                scheduling:
                  enabled: true
                  monday:
                    active: true
                    from: '9:00'
                    to: '17:00'
                  tuesday:
                    active: true
                    from: '9:00'
                    to: '17:00'
                  wednesday:
                    active: true
                    from: '9:00'
                    to: '17:00'
                  thursday:
                    active: true
                    from: '9:00'
                    to: '17:00'
                  friday:
                    active: true
                    from: '9:00'
                    to: '17:00'
                  saturday:
                    active: false
                    from: '0:00'
                    to: '24:00'
                  sunday:
                    active: false
                    from: '0:00'
                    to: '24:00'
                bandwidth:
                  settings: custom
                  bandwidthLimits:
                    limitUp: 1000000
                    limitDown: 1000000
                firewallAndTrafficShaping:
                  settings: custom
                  trafficShapingRules:
                    - definitions:
                        - type: host
                          value: google.com
                        - type: port
                          value: '9090'
                        - type: ipRange
                          value: 192.1.0.0
                        - type: ipRange
                          value: 192.1.0.0/16
                        - type: ipRange
                          value: 10.1.0.0/16:80
                        - type: localNet
                          value: 192.168.0.0/16
                        - type: applicationCategory
                          value:
                            id: meraki:layer7/category/2
                            name: Blogging
                        - type: application
                          value:
                            id: meraki:layer7/application/133
                            name: Battle.net
                      perClientBandwidthLimits:
                        settings: custom
                        bandwidthLimits:
                          limitUp: 1000000
                          limitDown: 1000000
                      dscpTagValue: null
                      pcpTagValue: null
                  l3FirewallRules:
                    - comment: Allow TCP traffic to subnet with HTTP servers.
                      policy: allow
                      protocol: tcp
                      destPort: 443
                      destCidr: 192.168.1.0/24
                  l7FirewallRules:
                    - policy: deny
                      type: application
                      value:
                        id: meraki:layer7/application/67
                        name: Xbox LIVE
                    - policy: deny
                      type: applicationCategory
                      value:
                        id: meraki:layer7/category/2
                        name: Blogging
                    - policy: deny
                      type: host
                      value: google.com
                    - policy: deny
                      type: port
                      value: '23'
                    - policy: deny
                      type: ipRange
                      value: 10.11.12.00/24
                    - policy: deny
                      type: ipRange
                      value: 10.11.12.00/24:5555
                    - policy: deny
                      type: blockedCountries
                      value:
                        - AX
                        - CA
                    - policy: deny
                      type: allowedCountries
                      value:
                        - US
                contentFiltering:
                  allowedUrlPatterns:
                    settings: network default
                    patterns: []
                  blockedUrlPatterns:
                    settings: append
                    patterns:
                      - http://www.example.com
                      - http://www.betting.com
                  blockedUrlCategories:
                    settings: override
                    categories:
                      - meraki:contentFiltering/category/1
                      - meraki:contentFiltering/category/7
                splashAuthSettings: bypass
                vlanTagging:
                  settings: custom
                  vlanId: '1'
                bonjourForwarding:
                  settings: custom
                  rules:
                    - description: A simple bonjour rule
                      vlanId: '1'
                      services:
                        - All Services
    delete:
      tags:
        - GENERAL > Networks > Configure > Group Policies
      summary: Delete A Group Policy
      description: |+
        Delete a group policy
        #### Supports Action Batches

        **Resource**|**Operation**
        :-------------: |:-------------:
        `/networks/{networkId}/groupPolicies/{groupPolicyId}` | destroy

      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: groupPolicyId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{groupPolicyId}}'
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /networks/{networkId}/merakiAuthUsers:
    get:
      tags:
        - GENERAL > Networks > Configure > Meraki Auth Users
      summary: >-
        List The Users Configured Under Meraki Authentication For A Network
        Splash Guest Or RADIUS Users For A Wireless Network Or Client VPN Users
        For A Wired Network
      description: >-
        List the users configured under Meraki Authentication for a network
        (splash guest or RADIUS users for a wireless network, or client VPN
        users for a wired network)
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: aGlAaGkuY29t
                  email: miles@meraki.com
                  name: Miles Meraki
                  createdAt: '2018-02-11T00:00:00.090210Z'
                  accountType: 802.1X
                  authorizations:
                    - ssidNumber: 1
                      authorizedZone: Store WiFi
                      expiresAt: '2018-03-13T00:00:00.090210Z'
                      authorizedByName: Miles Meraki
                      authorizedByEmail: miles@meraki.com
    post:
      tags:
        - GENERAL > Networks > Configure > Meraki Auth Users
      summary: >-
        Authorize A User Configured With Meraki Authentication For A Network
        Currently Supports 802 1 X Splash Guest And Client VPN Users And
        Currently Organizations Have A 50 000 User Cap
      description: >+
        Authorize a user configured with Meraki Authentication for a network
        (currently supports 802.1X, splash guest, and client VPN users, and
        currently, organizations have a 50,000 user cap)
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        email| string| Email address of the user

        name| string| Name of the user

        password| string| The password for this user account

        accountType| string| Authorization type for user. Can be 'Guest' or
        '802.1X' for wireless networks, or 'Client VPN' for wired networks.
        Defaults to '802.1X'.

        emailPasswordToUser| boolean| Whether or not Meraki should email the
        password to user. Default is false.

        authorizations| array| Authorization zones and expiration dates for the
        user.


        #### Supports Action Batches


        **Resource**|**Operation**

        :-------------: |:-------------:

        `/networks/{networkId}/merakiAuthUsers` | create

      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"email\": \"<string>\",\n    \"name\":
                \"<string>\",\n    \"password\": \"<string>\",\n   
                \"authorizations\": [\n        {\n            \"ssidNumber\":
                \"<integer>\",\n            \"expiresAt\": \"Never\"\n       
                },\n        {\n            \"ssidNumber\":
                \"<integer>\",\n            \"expiresAt\": \"Never\"\n       
                }\n    ],\n    \"accountType\": \"802.1X\",\n   
                \"emailPasswordToUser\": \"<boolean>\"\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: aGlAaGkuY29t
                email: miles@meraki.com
                name: Miles Meraki
                createdAt: '2018-02-11T00:00:00.090210Z'
                accountType: 802.1X
                authorizations:
                  - ssidNumber: 1
                    authorizedZone: Store WiFi
                    expiresAt: '2018-03-13T00:00:00.090210Z'
                    authorizedByName: Miles Meraki
                    authorizedByEmail: miles@meraki.com
  /networks/{networkId}/merakiAuthUsers/{merakiAuthUserId}:
    get:
      tags:
        - GENERAL > Networks > Configure > Meraki Auth Users
      summary: Return The Meraki Auth Splash Guest RADIUS Or Client VPN User
      description: Return the Meraki Auth splash guest, RADIUS, or client VPN user
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: merakiAuthUserId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{merakiAuthUserId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: aGlAaGkuY29t
                email: miles@meraki.com
                name: Miles Meraki
                createdAt: '2018-02-11T00:00:00.090210Z'
                accountType: 802.1X
                authorizations:
                  - ssidNumber: 1
                    authorizedZone: Store WiFi
                    expiresAt: '2018-03-13T00:00:00.090210Z'
                    authorizedByName: Miles Meraki
                    authorizedByEmail: miles@meraki.com
    delete:
      tags:
        - GENERAL > Networks > Configure > Meraki Auth Users
      summary: Deauthorize A User
      description: >-
        Deauthorize a user. To reauthorize a user after deauthorizing them, POST
        to this endpoint. (Currently, 802.1X RADIUS, splash guest, and client
        VPN users can be deauthorized.)
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: merakiAuthUserId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{merakiAuthUserId}}'
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    put:
      tags:
        - GENERAL > Networks > Configure > Meraki Auth Users
      summary: >-
        Update A User Configured With Meraki Authentication Currently 802 1 X
        RADIUS Splash Guest And Client VPN Users Can Be Updated
      description: >+
        Update a user configured with Meraki Authentication (currently, 802.1X
        RADIUS, splash guest, and client VPN users can be updated)
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        name| string| Name of the user

        password| string| The password for this user account

        emailPasswordToUser| boolean| Whether or not Meraki should email the
        password to user. Default is false.

        authorizations| array| Authorization zones and expiration dates for the
        user.


        #### Supports Action Batches


        **Resource**|**Operation**

        :-------------: |:-------------:

        `/networks/{networkId}/merakiAuthUsers/{merakiAuthUserId}` | update

      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"name\": \"<string>\",\n    \"password\":
                \"<string>\",\n    \"emailPasswordToUser\": \"<boolean>\",\n   
                \"authorizations\": [\n        {\n            \"ssidNumber\":
                \"<integer>\",\n            \"expiresAt\": \"Never\"\n       
                },\n        {\n            \"ssidNumber\":
                \"<integer>\",\n            \"expiresAt\": \"Never\"\n       
                }\n    ]\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: merakiAuthUserId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{merakiAuthUserId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: aGlAaGkuY29t
                email: miles@meraki.com
                name: Miles Meraki
                createdAt: '2018-02-11T00:00:00.090210Z'
                accountType: 802.1X
                authorizations:
                  - ssidNumber: 1
                    authorizedZone: Store WiFi
                    expiresAt: '2018-03-13T00:00:00.090210Z'
                    authorizedByName: Miles Meraki
                    authorizedByEmail: miles@meraki.com
  /networks/{networkId}/mqttBrokers:
    get:
      tags:
        - GENERAL > Networks > Configure > Mqtt Brokers
      summary: List The MQTT Brokers For This Network
      description: List the MQTT brokers for this network
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: '1234'
                  name: MQTT_Broker_1
                  host: 1.1.1.1
                  port: 1234
    post:
      tags:
        - GENERAL > Networks > Configure > Mqtt Brokers
      summary: Add An MQTT Broker
      description: |+
        Add an MQTT broker
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        name| string| Name of the MQTT broker
        host| string| Host name/IP address where MQTT broker runs
        port| integer| Host port though which MQTT broker can be reached

        #### Supports Action Batches

        **Resource**|**Operation**
        :-------------: |:-------------:
        `/networks/{networkId}/mqttBrokers` | create

      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"name\": \"<string>\",\n    \"host\":
                \"<string>\",\n    \"port\": \"<integer>\"\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: '1234'
                name: MQTT_Broker_1
                host: 1.1.1.1
                port: 1234
  /networks/{networkId}/mqttBrokers/{mqttBrokerId}:
    get:
      tags:
        - GENERAL > Networks > Configure > Mqtt Brokers
      summary: Return An MQTT Broker
      description: Return an MQTT broker
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: mqttBrokerId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{mqttBrokerId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: '1234'
                name: MQTT_Broker_1
                host: 1.1.1.1
                port: 1234
    put:
      tags:
        - GENERAL > Networks > Configure > Mqtt Brokers
      summary: Update An MQTT Broker
      description: |+
        Update an MQTT broker
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        name| string| Name of the mqtt config
        host| string| Host name where mqtt broker runs
        port| integer| Host port though which mqtt broker can be reached

        #### Supports Action Batches

        **Resource**|**Operation**
        :-------------: |:-------------:
        `/networks/{networkId}/mqttBrokers/{mqttBrokerId}` | update

      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"name\": \"<string>\",\n    \"host\":
                \"<string>\",\n    \"port\": \"<integer>\"\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: mqttBrokerId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{mqttBrokerId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: '1234'
                name: MQTT_Broker_1
                host: 1.1.1.1
                port: 1234
    delete:
      tags:
        - GENERAL > Networks > Configure > Mqtt Brokers
      summary: Delete An MQTT Broker
      description: |+
        Delete an MQTT broker
        #### Supports Action Batches

        **Resource**|**Operation**
        :-------------: |:-------------:
        `/networks/{networkId}/mqttBrokers/{mqttBrokerId}` | destroy

      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: mqttBrokerId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{mqttBrokerId}}'
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /networks/{networkId}/netflow:
    get:
      tags:
        - GENERAL > Networks > Configure > Netflow
      summary: Return The Net Flow Traffic Reporting Settings For A Network
      description: Return the NetFlow traffic reporting settings for a network
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                reportingEnabled: true
                collectorIp: 1.2.3.4
                collectorPort: 443
    put:
      tags:
        - GENERAL > Networks > Configure > Netflow
      summary: Update The Net Flow Traffic Reporting Settings For A Network
      description: >
        Update the NetFlow traffic reporting settings for a network
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        reportingEnabled| boolean| Boolean indicating whether NetFlow traffic
        reporting is enabled (true) or disabled (false).

        collectorIp| string| The IPv4 address of the NetFlow collector.

        collectorPort| integer| The port that the NetFlow collector will be
        listening on.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"reportingEnabled\": \"<boolean>\",\n   
                \"collectorIp\": \"<string>\",\n    \"collectorPort\":
                \"<integer>\"\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                reportingEnabled: true
                collectorIp: 1.2.3.4
                collectorPort: 443
  /networks/{networkId}/pii/piiKeys:
    get:
      tags:
        - GENERAL > Networks > Configure > Pii > Pii Keys
      summary: >-
        List the keys required to access Personally Identifiable Information
        (PII) for a given identifier
      description: >-
        List the keys required to access Personally Identifiable Information
        (PII) for a given identifier. Exactly one identifier will be accepted.
        If the organization contains org-wide Systems Manager users matching the
        key provided then there will be an entry with the key "0" containing the
        applicable keys.


        ## ALTERNATE PATH


        ```

        /organizations/{organizationId}/pii/piiKeys

        ```
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                N_1234:
                  macs:
                    - '00:77:00:77:00:77'
                  emails:
                    - fake@example.com
                  usernames:
                    - fakename
                  serials:
                    - abcd1234
                  imeis:
                    - '990000862471854'
                  bluetoothMacs:
                    - '00:77:00:77:00:77'
  /networks/{networkId}/pii/requests:
    get:
      tags:
        - GENERAL > Networks > Configure > Pii > Requests
      summary: List The PII Requests For This Network Or Organization
      description: |-
        List the PII requests for this network or organization

        ## ALTERNATE PATH

        ```
        /organizations/{organizationId}/pii/requests
        ```
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: '1234'
                  organizationWide: false
                  networkId: N_1234
                  type: delete
                  mac: '00:77:00:77:00:77'
                  datasets: '[''usage'', ''events'']'
                  status: Completed
                  createdAt: 1524692227
                  completedAt: 1524702227
    post:
      tags:
        - GENERAL > Networks > Configure > Pii > Requests
      summary: Submit A New Delete Or Restrict Processing PII Request
      description: |-
        Submit a new delete or restrict processing PII request

        ## ALTERNATE PATH

        ```
        /organizations/{organizationId}/pii/requests
        ```
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"type\": \"<string>\",\n    \"datasets\": [\n       
                \"<string>\",\n        \"<string>\"\n    ],\n    \"username\":
                \"<string>\",\n    \"email\": \"<string>\",\n    \"mac\":
                \"<string>\",\n    \"smDeviceId\": \"<string>\",\n   
                \"smUserId\": \"<string>\"\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: '1234'
                organizationWide: false
                networkId: N_1234
                type: delete
                mac: '00:77:00:77:00:77'
                datasets: '[''usage'', ''events'']'
                status: Not visible in Dashboard; database deletion in process
                createdAt: 1524692227
                completedAt: null
  /networks/{networkId}/pii/requests/{requestId}:
    get:
      tags:
        - GENERAL > Networks > Configure > Pii > Requests
      summary: Return A PII Request
      description: |-
        Return a PII request

        ## ALTERNATE PATH

        ```
        /organizations/{organizationId}/pii/requests/{requestId}
        ```
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: requestId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{requestId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: '1234'
                organizationWide: false
                networkId: N_1234
                type: delete
                mac: '00:77:00:77:00:77'
                datasets: '[''usage'', ''events'']'
                status: Completed
                createdAt: 1524692227
                completedAt: 1524702227
    delete:
      tags:
        - GENERAL > Networks > Configure > Pii > Requests
      summary: Delete A Restrict Processing PII Request
      description: |-
        Delete a restrict processing PII request

        ## ALTERNATE PATH

        ```
        /organizations/{organizationId}/pii/requests/{requestId}
        ```
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: requestId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{requestId}}'
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /networks/{networkId}/pii/smDevicesForKey:
    get:
      tags:
        - GENERAL > Networks > Configure > Pii > Sm Devices For Key
      summary: >-
        Given a piece of Personally Identifiable Information (PII), return the
        Systems Manager device ID(s) associated with that identifier
      description: >-
        Given a piece of Personally Identifiable Information (PII), return the
        Systems Manager device ID(s) associated with that identifier. These
        device IDs can be used with the Systems Manager API endpoints to
        retrieve device details. Exactly one identifier will be accepted.


        ## ALTERNATE PATH


        ```

        /organizations/{organizationId}/pii/smDevicesForKey

        ```
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                N_1234:
                  - '1099541095293'
                  - '8348382288234'
  /networks/{networkId}/pii/smOwnersForKey:
    get:
      tags:
        - GENERAL > Networks > Configure > Pii > Sm Owners For Key
      summary: >-
        Given a piece of Personally Identifiable Information (PII), return the
        Systems Manager owner ID(s) associated with that identifier
      description: >-
        Given a piece of Personally Identifiable Information (PII), return the
        Systems Manager owner ID(s) associated with that identifier. These owner
        IDs can be used with the Systems Manager API endpoints to retrieve owner
        details. Exactly one identifier will be accepted.


        ## ALTERNATE PATH


        ```

        /organizations/{organizationId}/pii/smOwnersForKey

        ```
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                N_1234:
                  - '1099541095293'
  /networks/{networkId}/settings:
    get:
      tags:
        - GENERAL > Networks > Configure > Settings
      summary: Return The Settings For A Network
      description: Return the settings for a network
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                localStatusPageEnabled: true
                remoteStatusPageEnabled: true
                secureConnect:
                  enabled: false
    put:
      tags:
        - GENERAL > Networks > Configure > Settings
      summary: Update The Settings For A Network
      description: >+
        Update the settings for a network
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        localStatusPageEnabled| boolean| Enables / disables the local device
        status pages (<a target='_blank'
        href='http://my.meraki.com/'>my.meraki.com, </a><a target='_blank'
        href='http://ap.meraki.com/'>ap.meraki.com, </a><a target='_blank'
        href='http://switch.meraki.com/'>switch.meraki.com, </a><a
        target='_blank' href='http://wired.meraki.com/'>wired.meraki.com</a>).
        Optional (defaults to false)

        remoteStatusPageEnabled| boolean| Enables / disables access to the
        device status page (<a target='_blank'>http://[device's LAN IP])</a>.
        Optional. Can only be set if localStatusPageEnabled is set to true

        secureConnect| object| A hash of SecureConnect options applied to the
        Network.


        #### Supports Action Batches


        **Resource**|**Operation**

        :-------------: |:-------------:

        `/networks/{networkId}/settings` | update

      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"localStatusPageEnabled\": \"<boolean>\",\n   
                \"remoteStatusPageEnabled\": \"<boolean>\",\n   
                \"secureConnect\": {\n        \"enabled\": \"<boolean>\"\n   
                }\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                localStatusPageEnabled: true
                remoteStatusPageEnabled: true
                secureConnect:
                  enabled: false
  /networks/{networkId}/snmp:
    get:
      tags:
        - GENERAL > Networks > Configure > Snmp
      summary: Return The SNMP Settings For A Network
      description: Return the SNMP settings for a network
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                access: users
                users:
                  - username: AzureDiamond
                    passphrase: hunter2
    put:
      tags:
        - GENERAL > Networks > Configure > Snmp
      summary: Update The SNMP Settings For A Network
      description: >
        Update the SNMP settings for a network
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        access| string| The type of SNMP access. Can be one of 'none'
        (disabled), 'community' (V1/V2c), or 'users' (V3).

        communityString| string| The SNMP community string. Only relevant if
        'access' is set to 'community'.

        users| array| The list of SNMP users. Only relevant if 'access' is set
        to 'users'.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"access\": \"<string>\",\n    \"communityString\":
                \"<string>\",\n    \"users\": [\n        {\n           
                \"username\": \"<string>\",\n            \"passphrase\":
                \"<string>\"\n        },\n        {\n            \"username\":
                \"<string>\",\n            \"passphrase\": \"<string>\"\n       
                }\n    ]\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                access: users
                users:
                  - username: AzureDiamond
                    passphrase: hunter2
  /networks/{networkId}/syslogServers:
    get:
      tags:
        - GENERAL > Networks > Configure > Syslog Servers
      summary: List The Syslog Servers For A Network
      description: List the syslog servers for a network
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                servers:
                  - host: 1.2.3.4
                    port: 443
                    roles:
                      - Wireless event log
                      - URLs
    put:
      tags:
        - GENERAL > Networks > Configure > Syslog Servers
      summary: Update The Syslog Servers For A Network
      description: |
        Update the syslog servers for a network
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        servers| array| A list of the syslog servers for this network
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"servers\": [\n        {\n            \"host\":
                \"<string>\",\n            \"port\": \"<integer>\",\n           
                \"roles\": [\n                \"<string>\",\n               
                \"<string>\"\n            ]\n        },\n        {\n           
                \"host\": \"<string>\",\n            \"port\":
                \"<integer>\",\n            \"roles\": [\n               
                \"<string>\",\n                \"<string>\"\n           
                ]\n        }\n    ]\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                servers:
                  - host: 1.2.3.4
                    port: 443
                    roles:
                      - Wireless event log
                      - URLs
  /networks/{networkId}/trafficAnalysis:
    get:
      tags:
        - GENERAL > Networks > Configure > Traffic Analysis
      summary: Return The Traffic Analysis Settings For A Network
      description: Return the traffic analysis settings for a network
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                mode: detailed
                customPieChartItems:
                  - name: Item from hostname
                    type: host
                    value: example.com
                  - name: Item from port
                    type: port
                    value: '440'
                  - name: Item from IP
                    type: ipRange
                    value: 192.1.0.0
                  - name: Item from IP range (CIDR)
                    type: ipRange
                    value: 192.2.0.0/16
                  - name: Item from IP range with port
                    type: ipRange
                    value: 192.3.0.0/16:80
    put:
      tags:
        - GENERAL > Networks > Configure > Traffic Analysis
      summary: Update The Traffic Analysis Settings For A Network
      description: >
        Update the traffic analysis settings for a network
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        mode| string|     The traffic analysis mode for the network. Can be one
        of 'disabled' (do not collect traffic types),
            'basic' (collect generic traffic categories), or 'detailed' (collect destination hostnames).

        customPieChartItems| array| The list of items that make up the custom
        pie chart for traffic reporting.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"mode\": \"<string>\",\n    \"customPieChartItems\":
                [\n        {\n            \"name\": \"<string>\",\n           
                \"type\": \"<string>\",\n            \"value\":
                \"<string>\"\n        },\n        {\n            \"name\":
                \"<string>\",\n            \"type\": \"<string>\",\n           
                \"value\": \"<string>\"\n        }\n    ]\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                mode: detailed
                customPieChartItems:
                  - name: Item from hostname
                    type: host
                    value: example.com
                  - name: Item from port
                    type: port
                    value: '440'
                  - name: Item from IP
                    type: ipRange
                    value: 192.1.0.0
                  - name: Item from IP range (CIDR)
                    type: ipRange
                    value: 192.2.0.0/16
                  - name: Item from IP range with port
                    type: ipRange
                    value: 192.3.0.0/16:80
  /networks/{networkId}/trafficShaping/applicationCategories:
    get:
      tags:
        - >-
          GENERAL > Networks > Configure > Traffic Shaping > Application
          Categories
      summary: Returns the application categories for traffic shaping rules.
      description: Returns the application categories for traffic shaping rules.
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                applicationCategories:
                  - id: meraki:layer7/category/24
                    name: Advertising
                    applications:
                      - id: meraki:layer7/application/5
                        name: Advertising.com
                      - id: meraki:layer7/application/0
                        name: AppNexus
                      - id: meraki:layer7/application/1
                        name: Brightroll
  /networks/{networkId}/trafficShaping/dscpTaggingOptions:
    get:
      tags:
        - >-
          GENERAL > Networks > Configure > Traffic Shaping > Dscp Tagging
          Options
      summary: >-
        Returns the available DSCP tagging options for your traffic shaping
        rules.
      description: >-
        Returns the available DSCP tagging options for your traffic shaping
        rules.
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - dscpTagValue: 10
                  description: AF11 - High Throughput, Latency Insensitive, Low Drop
                - dscpTagValue: 12
                  description: AF12 - High Throughput, Latency Insensitive, Medium Drop
                - dscpTagValue: 14
                  description: AF13 - High Throughput, Latency Insensitive, High Drop
                - dscpTagValue: 18
                  description: AF21 - Low Latency Data, Low Drop
  /networks/{networkId}/webhooks/httpServers:
    get:
      tags:
        - GENERAL > Networks > Configure > Webhooks > Http Servers
      summary: List The HTTP Servers For A Network
      description: List the HTTP servers for a network
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: ABC123
                  networkId: N_123
                  name: My HTTP server
                  url: https://www.example.com/webhooks
                  sharedSecret: foobar
                  payloadTemplate: Meraki
    post:
      tags:
        - GENERAL > Networks > Configure > Webhooks > Http Servers
      summary: Add An HTTP Server To A Network
      description: >
        Add an HTTP server to a network
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        name| string| A name for easy reference to the HTTP server

        url| string| The URL of the HTTP server

        sharedSecret| string| A shared secret that will be included in POSTs
        sent to the HTTP server. This secret can be used to verify that the
        request was sent by Meraki.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"name\": \"<string>\",\n    \"url\": \"<string>\",\n   
                \"sharedSecret\": \"<string>\"\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: ABC123
                networkId: N_123
                name: My HTTP server
                url: https://www.example.com/webhooks
                sharedSecret: foobar
                payloadTemplate: Meraki
  /networks/{networkId}/webhooks/httpServers/{httpServerId}:
    get:
      tags:
        - GENERAL > Networks > Configure > Webhooks > Http Servers
      summary: Return An HTTP Server For A Network
      description: Return an HTTP server for a network
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: httpServerId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{httpServerId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: ABC123
                networkId: N_123
                name: My HTTP server
                url: https://www.example.com/webhooks
                sharedSecret: foobar
                payloadTemplate: Meraki
    put:
      tags:
        - GENERAL > Networks > Configure > Webhooks > Http Servers
      summary: Update An HTTP Server
      description: >
        Update an HTTP server
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        name| string| A name for easy reference to the HTTP server

        url| string| The URL of the HTTP server

        sharedSecret| string| A shared secret that will be included in POSTs
        sent to the HTTP server. This secret can be used to verify that the
        request was sent by Meraki.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"name\": \"<string>\",\n    \"url\": \"<string>\",\n   
                \"sharedSecret\": \"<string>\"\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: httpServerId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{httpServerId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: ABC123
                networkId: N_123
                name: My HTTP server
                url: https://www.example.com/webhooks
                sharedSecret: foobar
                payloadTemplate: Meraki
    delete:
      tags:
        - GENERAL > Networks > Configure > Webhooks > Http Servers
      summary: Delete An HTTP Server From A Network
      description: Delete an HTTP server from a network
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: httpServerId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{httpServerId}}'
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /networks/{networkId}/webhooks/webhookTests:
    post:
      tags:
        - GENERAL > Networks > Configure > Webhooks > Webhook Tests
      summary: Send A Test Webhook For A Network
      description: >
        Send a test webhook for a network
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        url| string| The URL where the test webhook will be sent

        sharedSecret| string| The shared secret the test webhook will send.
        Optional. Defaults to an empty string.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n    \"url\": \"<string>\",\n    \"sharedSecret\": \"\"\n}"'
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: '1234'
                url: https://www.example.com/path
                status: enqueued
  /networks/{networkId}/webhooks/webhookTests/{webhookTestId}:
    get:
      tags:
        - GENERAL > Networks > Configure > Webhooks > Webhook Tests
      summary: Return The Status Of A Webhook Test For A Network
      description: Return the status of a webhook test for a network
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: webhookTestId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{webhookTestId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: '1234'
                url: https://www.example.com/path
                status: delivered
  /networks/{networkId}:
    get:
      tags:
        - GENERAL > Networks > Configure
      summary: Return A Network
      description: Return a network
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: L_123456
                organizationId: '2930418'
                name: Long Island Office
                timeZone: America/Los_Angeles
                tags:
                  - tag1
                  - tag2
                productTypes:
                  - appliance
                  - switch
                  - wireless
                enrollmentString: long-island-office
                notes: Combined network for Long Island Office
    put:
      tags:
        - GENERAL > Networks > Configure
      summary: Update A Network
      description: >+
        Update a network
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        name| string| The name of the network

        timeZone| string| The timezone of the network. For a list of allowed
        timezones, please see the 'TZ' column in the table in <a target='_blank'
        href='https://en.wikipedia.org/wiki/List_of_tz_database_time_zones'>this
        article.</a>

        tags| array| A list of tags to be applied to the network

        enrollmentString| string| A unique identifier which can be used for
        device enrollment or easy access through the Meraki SM Registration page
        or the Self Service Portal. Please note that changing this field may
        cause existing bookmarks to break.

        notes| string| Add any notes or additional information about this
        network here.


        #### Supports Action Batches


        **Resource**|**Operation**

        :-------------: |:-------------:

        `/networks/{networkId}` | update

      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"name\": \"<string>\",\n    \"timeZone\":
                \"<string>\",\n    \"tags\": [\n        \"<string>\",\n       
                \"<string>\"\n    ],\n    \"enrollmentString\":
                \"<string>\",\n    \"notes\": \"<string>\"\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: L_123456
                organizationId: '2930418'
                name: Long Island Office
                timeZone: America/Los_Angeles
                tags:
                  - tag1
                  - tag2
                productTypes:
                  - appliance
                  - switch
                  - wireless
                enrollmentString: long-island-office
                notes: Combined network for Long Island Office
    delete:
      tags:
        - GENERAL > Networks > Configure
      summary: Delete A Network
      description: |+
        Delete a network
        #### Supports Action Batches

        **Resource**|**Operation**
        :-------------: |:-------------:
        `/networks/{networkId}` | destroy

      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /networks/{networkId}/bind:
    post:
      tags:
        - GENERAL > Networks > Configure
      summary: Bind A Network To A Template
      description: >+
        Bind a network to a template.
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        configTemplateId| string| The ID of the template to which the network
        should be bound.

        autoBind| boolean| Optional boolean indicating whether the network's
        switches should automatically bind to profiles of the same model.
        Defaults to false if left unspecified. This option only affects switch
        networks and switch templates. Auto-bind is not valid unless the switch
        template has at least one profile and has at most one profile per switch
        model.


        #### Supports Action Batches


        **Resource**|**Operation**

        :-------------: |:-------------:

        `/networks/{networkId}` | bind

      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"configTemplateId\": \"<string>\",\n    \"autoBind\":
                \"<boolean>\"\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: L_123456
                organizationId: '2930418'
                name: Long Island Office
                timeZone: America/Los_Angeles
                tags:
                  - tag1
                  - tag2
                productTypes:
                  - appliance
                  - switch
                  - wireless
                enrollmentString: long-island-office
                notes: Combined network for Long Island Office
                configTemplateId: N_23952905
  /networks/{networkId}/split:
    post:
      tags:
        - GENERAL > Networks > Configure
      summary: >-
        Split A Combined Network Into Individual Networks For Each Type Of
        Device
      description: >-
        Split a combined network into individual networks for each type of
        device
      requestBody:
        content: {}
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                resultingNetworks:
                  - id: N_1234
                    organizationId: '2930418'
                    name: Long Island Office - switch
                    timeZone: America/Los_Angeles
                    tags:
                      - tag1
                      - tag2
                    productTypes:
                      - switch
                    enrollmentString: long-island-office
                  - id: N_5678
                    organizationId: '2930418'
                    name: Long Island Office - wireless
                    timeZone: America/Los_Angeles
                    tags:
                      - tag1
                      - tag2
                    productTypes:
                      - wireless
                    enrollmentString: long-island-office
  /networks/{networkId}/unbind:
    post:
      tags:
        - GENERAL > Networks > Configure
      summary: Unbind A Network From A Template
      description: Unbind a network from a template.
      requestBody:
        content: {}
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: L_123456
                organizationId: '2930418'
                name: Long Island Office
                timeZone: America/Los_Angeles
                tags:
                  - tag1
                  - tag2
                productTypes:
                  - appliance
                  - switch
                  - wireless
                enrollmentString: long-island-office
                notes: Combined network for Long Island Office
  /networks/{networkId}/bluetoothClients:
    get:
      tags:
        - GENERAL > Networks > Monitor > Bluetooth Clients
      summary: List The Bluetooth Clients Seen By A Ps In This Network
      description: List the Bluetooth clients seen by APs in this network
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: '1284392014819'
                  mac: '22:33:44:55:66:77'
                  networkId: N_24329156
                  name: Miles's phone
                  deviceName: Bose QuietComfort 35
                  manufacturer: Bose
                  lastSeen: 1526087474
                  seenByDeviceMac: '00:11:22:33:44:55'
                  inSightAlert: false
                  outOfSightAlert: false
                  tags:
                    - tag1
                    - tag2
  /networks/{networkId}/bluetoothClients/{bluetoothClientId}:
    get:
      tags:
        - GENERAL > Networks > Monitor > Bluetooth Clients
      summary: Return A Bluetooth Client
      description: >-
        Return a Bluetooth client. Bluetooth clients can be identified by their
        ID or their MAC.
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: bluetoothClientId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{bluetoothClientId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: '1284392014819'
                mac: '22:33:44:55:66:77'
                networkId: N_24329156
                name: Miles's phone
                deviceName: Bose QuietComfort 35
                manufacturer: Bose
                lastSeen: 1526087474
                seenByDeviceMac: '00:11:22:33:44:55'
                inSightAlert: false
                outOfSightAlert: false
                tags:
                  - tag1
                  - tag2
  /networks/{networkId}/clients/applicationUsage:
    get:
      tags:
        - GENERAL > Networks > Monitor > Clients > Application Usage
      summary: Return the application usage data for clients
      description: >-
        Return the application usage data for clients. Usage data is in
        kilobytes. Clients can be identified by client keys or either the MACs
        or IPs depending on whether the network uses Track-by-IP.
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - clientId: k74272e
                  clientIp: 1.2.3.4
                  clientMac: '00:11:22:33:44:55'
                  applicationUsage:
                    - application: Google
                      recv: 383
                      sent: 56
  /networks/{networkId}/clients/overview:
    get:
      tags:
        - GENERAL > Networks > Monitor > Clients > Overview
      summary: Return overview statistics for network clients
      description: Return overview statistics for network clients
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - counts:
                    total: 100
                    withHeavyUsage: 2
                  usages:
                    average: 2048
                    withHeavyUsageAverage: 5345
  /networks/{networkId}/clients/usageHistories:
    get:
      tags:
        - GENERAL > Networks > Monitor > Clients > Usage Histories
      summary: Return the usage histories for clients
      description: >-
        Return the usage histories for clients. Usage data is in kilobytes.
        Clients can be identified by client keys or either the MACs or IPs
        depending on whether the network uses Track-by-IP.
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - clientId: k74272e
                  clientIp: 1.2.3.4
                  clientMac: '00:11:22:33:44:55'
                  usageHistory:
                    - ts: '2018-02-11T00:00:00.090210Z'
                      recv: 383
                      sent: 56
  /networks/{networkId}/clients/{clientId}/trafficHistory:
    get:
      tags:
        - GENERAL > Networks > Monitor > Clients > Traffic History
      summary: Return the client's network traffic data over time
      description: >-
        Return the client's network traffic data over time. Usage data is in
        kilobytes. This endpoint requires detailed traffic analysis to be
        enabled on the Network-wide > General page. Clients can be identified by
        a client key or either the MAC or IP depending on whether the network
        uses Track-by-IP.
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: clientId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{clientId}}'
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - ts: '2018-02-11T00:00:00.090210Z'
                  application: Google
                  destination: www.google.com
                  protocol: UDP
                  port: 443
                  recv: 383
                  sent: 56
                  numFlows: 5
                  activeSeconds: 240
  /networks/{networkId}/clients/{clientId}/usageHistory:
    get:
      tags:
        - GENERAL > Networks > Monitor > Clients > Usage History
      summary: Return the client's daily usage history
      description: >-
        Return the client's daily usage history. Usage data is in kilobytes.
        Clients can be identified by a client key or either the MAC or IP
        depending on whether the network uses Track-by-IP.
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: clientId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{clientId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - sent: 500
                  received: 680
                  ts: '2018-02-11T00:00:00.090210Z'
  /networks/{networkId}/clients:
    get:
      tags:
        - General
      summary: List the Clients in a Network
      description: List the clients that have used this network in the timespan
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - usage:
                    sent: 138
                    recv: 61
                  id: k74272e
                  description: Miles's phone
                  mac: '22:33:44:55:66:77'
                  ip: 1.2.3.4
                  user: milesmeraki
                  vlan: 255
                  switchport: null
                  ip6: ''
                  firstSeen: 1518365681
                  lastSeen: 1526087474
                  manufacturer: Apple
                  os: iOS
                  recentDeviceSerial: Q234-ABCD-5678
                  recentDeviceName: My AP
                  recentDeviceMac: '00:11:22:33:44:55'
                  ssid: My SSID
                  status: Online
                  notes: My client note
                  ip6Local: fe80:0:0:0:1430:aac1:6826:75ab
                  smInstalled: true
                  groupPolicy8021x: Student_Access
  /networks/{networkId}/clients/{clientId}:
    get:
      tags:
        - GENERAL > Networks > Monitor > Clients
      summary: Return The Client Associated With The Given Identifier
      description: >-
        Return the client associated with the given identifier. Clients can be
        identified by a client key or either the MAC or IP depending on whether
        the network uses Track-by-IP.
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: clientId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{clientId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: k74272e
                description: Miles's phone
                mac: '22:33:44:55:66:77'
                ip: 1.2.3.4
                user: 'null'
                vlan: '255'
                switchport: null
                ip6: ''
                firstSeen: 1518365681
                lastSeen: 1526087474
                manufacturer: Apple
                os: iOS
                ssid: My SSID
                wirelessCapabilities: 802.11ac - 2.4 and 5 GHz
                smInstalled: true
                recentDeviceMac: '00:11:22:33:44:55'
                clientVpnConnections:
                  - remoteIp: 1.2.3.4
                    connectedAt: 1522613355
                    disconnectedAt: 1522613360
                lldp:
                  - - System name
                    - Some system name
                  - - System description
                    - Some system description
                  - - Port ID
                    - '1'
                  - - Chassis ID
                    - 00:18:0a:00:00:00
                  - - Port description
                    - eth0
                  - - System capabilities
                    - Two-port MAC Relay
                cdp: null
                status: Online
  /networks/{networkId}/events/eventTypes:
    get:
      tags:
        - GENERAL > Networks > Monitor > Events > Event Types
      summary: List the event type to human-readable description
      description: List the event type to human-readable description
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - category: '802.11'
                  type: association
                  description: 802.11 association
  /networks/{networkId}/events:
    get:
      tags:
        - GENERAL > Networks > Monitor > Events
      summary: List The Events For The Network
      description: List the events for the network
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                message: null
                pageStartAt: '2018-02-11T00:00:00.090210Z'
                pageEndAt: '2018-02-11T00:00:00.090210Z'
                events:
                  - occurredAt: '2018-02-11T00:00:00.090210Z'
                    networkId: N_24329156
                    type: association
                    description: 802.11 association
                    clientId: k74272e
                    clientDescription: Miles's phone
                    deviceSerial: Q234-ABCD-5678
                    deviceName: My AP
                    ssidNumber: 1
                    ssidName: My SSID
                    eventData:
                      radio: '1'
                      vap: '1'
                      client_mac: '22:33:44:55:66:77'
                      client_ip: 1.2.3.4
                      channel: '36'
                      rssi: '12'
                      aid: '2104009183'
  /networks/{networkId}/networkHealth/channelUtilization:
    get:
      tags:
        - GENERAL > Networks > Monitor > Network Health > channelUtilization
      summary: Get the channel utilization over each radio for all APs in a network.
      description: Get the channel utilization over each radio for all APs in a network.
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - serial: Q234-ABCD-5678
                  model: MR34
                  tags: ' recently-added '
                  wifi0:
                    - startTime: '2018-10-09T22:18:27Z'
                      endTime: '2018-10-09T22:19:27Z'
                      utilizationTotal: 33.84
                      utilization80211: 32
                      utilizationNon80211: 1.84
                    - startTime: '2018-10-09T22:19:27Z'
                      endTime: '2018-10-09T22:20:27Z'
                      utilizationTotal: 33.85
                      utilization80211: 32.01
                      utilizationNon80211: 1.84
                    - startTime: '2018-10-09T22:20:27Z'
                      endTime: '2018-10-09T22:21:27Z'
                      utilizationTotal: 34.89
                      utilization80211: 33.48
                      utilizationNon80211: 1.41
                  wifi1:
                    - startTime: '2018-10-09T22:18:27Z'
                      endTime: '2018-10-09T22:19:27Z'
                      utilizationTotal: 33.84
                      utilization80211: 32
                      utilizationNon80211: 1.84
                    - startTime: '2018-10-09T22:19:27Z'
                      endTime: '2018-10-09T22:20:27Z'
                      utilizationTotal: 33.85
                      utilization80211: 32.01
                      utilizationNon80211: 1.84
                    - startTime: '2018-10-09T22:20:27Z'
                      endTime: '2018-10-09T22:21:27Z'
                      utilizationTotal: 34.89
                      utilization80211: 33.48
                      utilizationNon80211: 1.41
  /networks/{networkId}/splashLoginAttempts:
    get:
      tags:
        - GENERAL > Networks > Monitor > Splash Login Attempts
      summary: List the splash login attempts for a network
      description: List the splash login attempts for a network
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - name: Miles Meraki
                  login: miles@meraki.com
                  ssid: My SSID
                  loginAt: '2018-02-11T00:00:00.090210Z'
                  gatewayDeviceMac: '00:11:22:33:44:55'
                  clientMac: '22:33:44:55:66:77'
                  clientId: k74272e
                  authorization: success
  /networks/{networkId}/traffic:
    get:
      tags:
        - GENERAL > Networks > Monitor > Traffic
      summary: Return the traffic analysis data for this network
      description: >-
        Return the traffic analysis data for this network. Traffic analysis with
        hostname visibility must be enabled on the network.
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - application: Gmail
                  destination: null
                  protocol: TCP
                  port: 443
                  sent: 138
                  recv: 61
                  numClients: 7
                  activeTime: 77000
                  flows: 300
  /organizations/{organizationId}/actionBatches:
    post:
      tags:
        - GENERAL > Organizations > Configure > Action Batches
      summary: Create An Action Batch
      description: >
        Create an action batch
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        confirmed| boolean| Set to true for immediate execution. Set to false if
        the action should be previewed before executing. This property cannot be
        unset once it is true. Defaults to false.

        synchronous| boolean| Set to true to force the batch to run synchronous.
        There can be at most 20 actions in synchronous batch. Defaults to false.

        actions| array| A set of changes to make as part of this action (<a
        href='https://developer.cisco.com/meraki/api/#/rest/guides/action-batches/'>more
        details</a>)
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"actions\": [\n        {\n            \"resource\":
                \"<string>\",\n            \"operation\":
                \"<string>\",\n            \"body\": {}\n        },\n       
                {\n            \"resource\": \"<string>\",\n           
                \"operation\": \"<string>\",\n            \"body\": {}\n       
                }\n    ],\n    \"confirmed\": \"<boolean>\",\n   
                \"synchronous\": \"<boolean>\"\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: organizationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{organizationId}}'
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: '123'
                organizationId: '2930418'
                confirmed: true
                synchronous: false
                status:
                  completed: false
                  failed: false
                  errors: []
                actions:
                  - resource: /devices/QXXX-XXXX-XXXX/switchPorts/3
                    operation: update
                    body:
                      enabled: false
    get:
      tags:
        - GENERAL > Organizations > Configure > Action Batches
      summary: Return The List Of Action Batches In The Organization
      description: Return the list of action batches in the organization
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: organizationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{organizationId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: '123'
                  organizationId: '2930418'
                  confirmed: true
                  synchronous: false
                  status:
                    completed: false
                    failed: false
                    errors: []
                  actions:
                    - resource: /devices/QXXX-XXXX-XXXX/switchPorts/3
                      operation: update
                      body:
                        enabled: false
  /organizations/{organizationId}/actionBatches/{actionBatchId}:
    get:
      tags:
        - GENERAL > Organizations > Configure > Action Batches
      summary: Return An Action Batch
      description: Return an action batch
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: organizationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{organizationId}}'
        - name: actionBatchId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{actionBatchId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: '123'
                organizationId: '2930418'
                confirmed: true
                synchronous: false
                status:
                  completed: false
                  failed: false
                  errors: []
                actions:
                  - resource: /devices/QXXX-XXXX-XXXX/switchPorts/3
                    operation: update
                    body:
                      enabled: false
    delete:
      tags:
        - GENERAL > Organizations > Configure > Action Batches
      summary: Delete An Action Batch
      description: Delete an action batch
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: organizationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{organizationId}}'
        - name: actionBatchId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{actionBatchId}}'
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    put:
      tags:
        - GENERAL > Organizations > Configure > Action Batches
      summary: Update An Action Batch
      description: >
        Update an action batch
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        confirmed| boolean| A boolean representing whether or not the batch has
        been confirmed. This property cannot be unset once it is true.

        synchronous| boolean| Set to true to force the batch to run synchronous.
        There can be at most 20 actions in synchronous batch.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"confirmed\": \"<boolean>\",\n    \"synchronous\":
                \"<boolean>\"\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: organizationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{organizationId}}'
        - name: actionBatchId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{actionBatchId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: '123'
                organizationId: '2930418'
                confirmed: true
                synchronous: false
                status:
                  completed: false
                  failed: false
                  errors: []
                actions:
                  - resource: /devices/QXXX-XXXX-XXXX/switchPorts/3
                    operation: update
                    body:
                      enabled: false
  /organizations/{organizationId}/admins:
    get:
      tags:
        - GENERAL > Organizations > Configure > Admins
      summary: List The Dashboard Administrators In This Organization
      description: List the dashboard administrators in this organization
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: organizationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{organizationId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: '212406'
                  name: Miles Meraki
                  email: miles@meraki.com
                  orgAccess: none
                  accountStatus: ok
                  twoFactorAuthEnabled: false
                  hasApiKey: true
                  lastActive: '2018-02-11T00:00:00Z'
                  tags:
                    - tag: west
                      access: read-only
                  networks:
                    - id: N_24329156
                      access: full
                  authenticationMethod: Email
    post:
      tags:
        - GENERAL > Organizations > Configure > Admins
      summary: Create A New Dashboard Administrator
      description: >
        Create a new dashboard administrator
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        email| string| The email of the dashboard administrator. This attribute
        can not be updated.

        name| string| The name of the dashboard administrator

        orgAccess| string| The privilege of the dashboard administrator on the
        organization. Can be one of 'full', 'read-only', 'enterprise' or 'none'

        tags| array| The list of tags that the dashboard administrator has
        privileges on

        networks| array| The list of networks that the dashboard administrator
        has privileges on

        authenticationMethod| string| The method of authentication the user will
        use to sign in to the Meraki dashboard. Can be one of 'Email' or 'Cisco
        SecureX Sign-On'. The default is Email authentication
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"email\": \"<string>\",\n    \"name\":
                \"<string>\",\n    \"orgAccess\": \"<string>\",\n    \"tags\":
                [\n        {\n            \"tag\": \"<string>\",\n           
                \"access\": \"<string>\"\n        },\n        {\n           
                \"tag\": \"<string>\",\n            \"access\":
                \"<string>\"\n        }\n    ],\n    \"networks\": [\n       
                {\n            \"id\": \"<string>\",\n            \"access\":
                \"<string>\"\n        },\n        {\n            \"id\":
                \"<string>\",\n            \"access\": \"<string>\"\n       
                }\n    ],\n    \"authenticationMethod\": \"<string>\"\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: organizationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{organizationId}}'
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: '212406'
                name: Miles Meraki
                email: miles@meraki.com
                orgAccess: none
                accountStatus: ok
                twoFactorAuthEnabled: false
                hasApiKey: true
                lastActive: '2018-02-11T00:00:00Z'
                tags:
                  - tag: west
                    access: read-only
                networks:
                  - id: N_24329156
                    access: full
                authenticationMethod: Email
  /organizations/{organizationId}/admins/{adminId}:
    put:
      tags:
        - GENERAL > Organizations > Configure > Admins
      summary: Update An Administrator
      description: >
        Update an administrator
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        name| string| The name of the dashboard administrator

        orgAccess| string| The privilege of the dashboard administrator on the
        organization. Can be one of 'full', 'read-only', 'enterprise' or 'none'

        tags| array| The list of tags that the dashboard administrator has
        privileges on

        networks| array| The list of networks that the dashboard administrator
        has privileges on
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"name\": \"<string>\",\n    \"orgAccess\":
                \"<string>\",\n    \"tags\": [\n        {\n            \"tag\":
                \"<string>\",\n            \"access\": \"<string>\"\n       
                },\n        {\n            \"tag\": \"<string>\",\n           
                \"access\": \"<string>\"\n        }\n    ],\n    \"networks\":
                [\n        {\n            \"id\": \"<string>\",\n           
                \"access\": \"<string>\"\n        },\n        {\n           
                \"id\": \"<string>\",\n            \"access\":
                \"<string>\"\n        }\n    ]\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: organizationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{organizationId}}'
        - name: adminId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{adminId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: '212406'
                name: Miles Meraki
                email: miles@meraki.com
                orgAccess: none
                accountStatus: ok
                twoFactorAuthEnabled: false
                hasApiKey: true
                lastActive: '2018-02-11T00:00:00Z'
                tags:
                  - tag: west
                    access: read-only
                networks:
                  - id: N_24329156
                    access: full
                authenticationMethod: Email
    delete:
      tags:
        - GENERAL > Organizations > Configure > Admins
      summary: Revoke All Access For A Dashboard Administrator Within This Organization
      description: Revoke all access for a dashboard administrator within this organization
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: organizationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{organizationId}}'
        - name: adminId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{adminId}}'
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /organizations/{organizationId}/brandingPolicies/priorities:
    get:
      tags:
        - GENERAL > Organizations > Configure > Branding Policies > Priorities
      summary: Return The Branding Policy I Ds Of An Organization In Priority Order
      description: >-
        Return the branding policy IDs of an organization in priority order. IDs
        are ordered in ascending order of priority (IDs later in the array have
        higher priority).
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: organizationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{organizationId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                brandingPolicyIds:
                  - '123'
                  - '456'
                  - '789'
    put:
      tags:
        - GENERAL > Organizations > Configure > Branding Policies > Priorities
      summary: Update The Priority Ordering Of An Organizations Branding Policies
      description: >
        Update the priority ordering of an organization's branding policies.
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        brandingPolicyIds| array| A list of branding policy IDs arranged in
        ascending priority order (IDs later in the array have higher priority).
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"brandingPolicyIds\": [\n        \"<string>\",\n       
                \"<string>\"\n    ]\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: organizationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{organizationId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                brandingPolicyIds:
                  - '123'
                  - '456'
                  - '789'
  /organizations/{organizationId}/brandingPolicies:
    get:
      tags:
        - GENERAL > Organizations > Configure > Branding Policies
      summary: List The Branding Policies Of An Organization
      description: List the branding policies of an organization
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: organizationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{organizationId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - brandingPolicyId: '456'
                  name: My Branding Policy
                  enabled: true
                  adminSettings:
                    appliesTo: All admins of networks...
                    values:
                      - N_1234
                      - L_5678
                  helpSettings:
                    helpTab: show
                    getHelpSubtab: default or inherit
                    communitySubtab: show
                    casesSubtab: hide
                    dataProtectionRequestsSubtab: default or inherit
                    getHelpSubtabKnowledgeBaseSearch: <h1>Some custom HTML content</h1>
                    universalSearchKnowledgeBaseSearch: hide
                    ciscoMerakiProductDocumentation: show
                    supportContactInfo: show
                    newFeaturesSubtab: show
                    firewallInfoSubtab: hide
                    apiDocsSubtab: default or inherit
                    hardwareReplacementsSubtab: hide
                    smForums: hide
    post:
      tags:
        - GENERAL > Organizations > Configure > Branding Policies
      summary: Add A New Branding Policy To An Organization
      description: >
        Add a new branding policy to an organization
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        name| string| Name of the Dashboard branding policy.

        enabled| boolean| Boolean indicating whether this policy is enabled.

        adminSettings| object| Settings for describing which kinds of admins
        this policy applies to.

        helpSettings| object|     Settings for describing the modifications to
        various Help page features. Each property in this object accepts one of
            'default or inherit' (do not modify functionality), 'hide' (remove the section from Dashboard), or 'show' (always show
            the section on Dashboard). Some properties in this object also accept custom HTML used to replace the section on
            Dashboard; see the documentation for each property to see the allowed values.
         Each property defaults to 'default or inherit' when not provided.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"name\": \"<string>\",\n    \"enabled\":
                \"<boolean>\",\n    \"adminSettings\": {\n        \"appliesTo\":
                \"<string>\",\n        \"values\": [\n           
                \"<string>\",\n            \"<string>\"\n        ]\n    },\n   
                \"helpSettings\": {\n        \"helpTab\": \"<string>\",\n       
                \"getHelpSubtab\": \"<string>\",\n        \"communitySubtab\":
                \"<string>\",\n        \"casesSubtab\": \"<string>\",\n       
                \"dataProtectionRequestsSubtab\": \"<string>\",\n       
                \"getHelpSubtabKnowledgeBaseSearch\": \"<string>\",\n       
                \"universalSearchKnowledgeBaseSearch\": \"<string>\",\n       
                \"ciscoMerakiProductDocumentation\": \"<string>\",\n       
                \"supportContactInfo\": \"<string>\",\n       
                \"newFeaturesSubtab\": \"<string>\",\n       
                \"firewallInfoSubtab\": \"<string>\",\n       
                \"apiDocsSubtab\": \"<string>\",\n       
                \"hardwareReplacementsSubtab\": \"<string>\",\n       
                \"smForums\": \"<string>\"\n    }\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: organizationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{organizationId}}'
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                brandingPolicyId: '456'
                name: My Branding Policy
                enabled: true
                adminSettings:
                  appliesTo: All admins of networks...
                  values:
                    - N_1234
                    - L_5678
                helpSettings:
                  helpTab: show
                  getHelpSubtab: default or inherit
                  communitySubtab: show
                  casesSubtab: hide
                  dataProtectionRequestsSubtab: default or inherit
                  getHelpSubtabKnowledgeBaseSearch: <h1>Some custom HTML content</h1>
                  universalSearchKnowledgeBaseSearch: hide
                  ciscoMerakiProductDocumentation: show
                  supportContactInfo: show
                  newFeaturesSubtab: show
                  firewallInfoSubtab: hide
                  apiDocsSubtab: default or inherit
                  hardwareReplacementsSubtab: hide
                  smForums: hide
  /organizations/{organizationId}/brandingPolicies/{brandingPolicyId}:
    get:
      tags:
        - GENERAL > Organizations > Configure > Branding Policies
      summary: Return A Branding Policy
      description: Return a branding policy
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: organizationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{organizationId}}'
        - name: brandingPolicyId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{brandingPolicyId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                brandingPolicyId: '456'
                name: My Branding Policy
                enabled: true
                adminSettings:
                  appliesTo: All admins of networks...
                  values:
                    - N_1234
                    - L_5678
                helpSettings:
                  helpTab: show
                  getHelpSubtab: default or inherit
                  communitySubtab: show
                  casesSubtab: hide
                  dataProtectionRequestsSubtab: default or inherit
                  getHelpSubtabKnowledgeBaseSearch: <h1>Some custom HTML content</h1>
                  universalSearchKnowledgeBaseSearch: hide
                  ciscoMerakiProductDocumentation: show
                  supportContactInfo: show
                  newFeaturesSubtab: show
                  firewallInfoSubtab: hide
                  apiDocsSubtab: default or inherit
                  hardwareReplacementsSubtab: hide
                  smForums: hide
    put:
      tags:
        - GENERAL > Organizations > Configure > Branding Policies
      summary: Update A Branding Policy
      description: >+
        Update a branding policy
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        name| string| Name of the Dashboard branding policy.

        enabled| boolean| Boolean indicating whether this policy is enabled.

        adminSettings| object| Settings for describing which kinds of admins
        this policy applies to.

        helpSettings| object|     Settings for describing the modifications to
        various Help page features. Each property in this object accepts one of
            'default or inherit' (do not modify functionality), 'hide' (remove the section from Dashboard), or 'show' (always show
            the section on Dashboard). Some properties in this object also accept custom HTML used to replace the section on
            Dashboard; see the documentation for each property to see the allowed values.

      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"name\": \"<string>\",\n    \"enabled\":
                \"<boolean>\",\n    \"adminSettings\": {\n        \"appliesTo\":
                \"<string>\",\n        \"values\": [\n           
                \"<string>\",\n            \"<string>\"\n        ]\n    },\n   
                \"helpSettings\": {\n        \"helpTab\": \"<string>\",\n       
                \"getHelpSubtab\": \"<string>\",\n        \"communitySubtab\":
                \"<string>\",\n        \"casesSubtab\": \"<string>\",\n       
                \"dataProtectionRequestsSubtab\": \"<string>\",\n       
                \"getHelpSubtabKnowledgeBaseSearch\": \"<string>\",\n       
                \"universalSearchKnowledgeBaseSearch\": \"<string>\",\n       
                \"ciscoMerakiProductDocumentation\": \"<string>\",\n       
                \"supportContactInfo\": \"<string>\",\n       
                \"newFeaturesSubtab\": \"<string>\",\n       
                \"firewallInfoSubtab\": \"<string>\",\n       
                \"apiDocsSubtab\": \"<string>\",\n       
                \"hardwareReplacementsSubtab\": \"<string>\",\n       
                \"smForums\": \"<string>\"\n    }\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: organizationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{organizationId}}'
        - name: brandingPolicyId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{brandingPolicyId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                brandingPolicyId: '456'
                name: My Branding Policy
                enabled: true
                adminSettings:
                  appliesTo: All admins of networks...
                  values:
                    - N_1234
                    - L_5678
                helpSettings:
                  helpTab: show
                  getHelpSubtab: default or inherit
                  communitySubtab: show
                  casesSubtab: hide
                  dataProtectionRequestsSubtab: default or inherit
                  getHelpSubtabKnowledgeBaseSearch: <h1>Some custom HTML content</h1>
                  universalSearchKnowledgeBaseSearch: hide
                  ciscoMerakiProductDocumentation: show
                  supportContactInfo: show
                  newFeaturesSubtab: show
                  firewallInfoSubtab: hide
                  apiDocsSubtab: default or inherit
                  hardwareReplacementsSubtab: hide
                  smForums: hide
    delete:
      tags:
        - GENERAL > Organizations > Configure > Branding Policies
      summary: Delete A Branding Policy
      description: Delete a branding policy
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: organizationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{organizationId}}'
        - name: brandingPolicyId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{brandingPolicyId}}'
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /organizations/{organizationId}/configTemplates:
    get:
      tags:
        - GENERAL > Organizations > Configure > Config Templates
      summary: List The Configuration Templates For This Organization
      description: List the configuration templates for this organization
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: organizationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{organizationId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: N_24329156
                  name: My config template
                  productTypes:
                    - appliance
                    - switch
                    - wireless
                  timeZone: America/Los_Angeles
    post:
      tags:
        - GENERAL > Organizations > Configure > Config Templates
      summary: Create A New Configuration Template
      description: >+
        Create a new configuration template
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        name| string| The name of the configuration template

        timeZone| string| The timezone of the configuration template. For a list
        of allowed timezones, please see the 'TZ' column in the table in <a
        target='_blank'
        href='https://en.wikipedia.org/wiki/List_of_tz_database_time_zones'>this
        article</a>. Not applicable if copying from existing network or template

        copyFromNetworkId| string| The ID of the network or config template to
        copy configuration from


        #### Supports Action Batches


        **Resource**|**Operation**

        :-------------: |:-------------:

        `/organizations/{organizationId}/configTemplates` | create

      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"name\": \"<string>\",\n    \"timeZone\":
                \"<string>\",\n    \"copyFromNetworkId\": \"<string>\"\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: organizationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{organizationId}}'
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: N_24329156
                name: My config template
                productTypes:
                  - appliance
                  - switch
                  - wireless
                timeZone: America/Los_Angeles
  /organizations/{organizationId}/configTemplates/{configTemplateId}:
    put:
      tags:
        - GENERAL > Organizations > Configure > Config Templates
      summary: Update A Configuration Template
      description: >+
        Update a configuration template
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        name| string| The name of the configuration template

        timeZone| string| The timezone of the configuration template. For a list
        of allowed timezones, please see the 'TZ' column in the table in <a
        target='_blank'
        href='https://en.wikipedia.org/wiki/List_of_tz_database_time_zones'>this
        article.</a>


        #### Supports Action Batches


        **Resource**|**Operation**

        :-------------: |:-------------:

        `/organizations/{organizationId}/configTemplates/{configTemplateId}` |
        update

      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"name\": \"<string>\",\n    \"timeZone\":
                \"<string>\"\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: organizationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{organizationId}}'
        - name: configTemplateId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{configTemplateId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: N_24329156
                name: My config template
                productTypes:
                  - appliance
                  - switch
                  - wireless
                timeZone: America/Los_Angeles
    delete:
      tags:
        - GENERAL > Organizations > Configure > Config Templates
      summary: Remove A Configuration Template
      description: Remove a configuration template
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: organizationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{organizationId}}'
        - name: configTemplateId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{configTemplateId}}'
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    get:
      tags:
        - GENERAL > Organizations > Configure > Config Templates
      summary: Return A Single Configuration Template
      description: Return a single configuration template
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: organizationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{organizationId}}'
        - name: configTemplateId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{configTemplateId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: N_24329156
                name: My config template
                productTypes:
                  - appliance
                  - switch
                  - wireless
                timeZone: America/Los_Angeles
  /organizations/{organizationId}/devices:
    get:
      tags:
        - General
      summary: List the Devices in an Organization
      description: List the devices in an organization
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: organizationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{organizationId}}'
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - name: My AP
                  lat: 37.4180951010362
                  lng: -122.098531723022
                  address: 1600 Pennsylvania Ave
                  notes: My AP's note
                  tags: ' recently-added '
                  networkId: N_24329156
                  serial: Q234-ABCD-5678
                  model: MR34
                  mac: '00:11:22:33:44:55'
                  lanIp: 1.2.3.4
                  firmware: wireless-25-14
  /organizations/{organizationId}/inventoryDevices:
    get:
      tags:
        - GENERAL > Organizations > Configure > Inventory Devices
      summary: Return The Device Inventory For An Organization
      description: Return the device inventory for an organization
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: organizationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{organizationId}}'
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - mac: '00:11:22:33:44:55'
                  serial: Q234-ABCD-5678
                  name: My AP
                  model: MR34
                  networkId: N_24329156
                  orderNumber: 4C1234567
                  claimedAt: '2018-02-11T00:00:00.090210Z'
                  licenseExpirationDate: '2020-05-02T10:52:44.012345Z'
  /organizations/{organizationId}/inventoryDevices/{serial}:
    get:
      tags:
        - GENERAL > Organizations > Configure > Inventory Devices
      summary: Return A Single Device From The Inventory Of An Organization
      description: Return a single device from the inventory of an organization
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: organizationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{organizationId}}'
        - name: serial
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{serial}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                mac: '00:11:22:33:44:55'
                serial: Q234-ABCD-5678
                name: My AP
                model: MR34
                networkId: N_24329156
                orderNumber: 4C1234567
                claimedAt: '2018-02-11T00:00:00.090210Z'
                licenseExpirationDate: '2020-05-02T10:52:44.012345Z'
  /organizations/{organizationId}/licenses:
    get:
      tags:
        - GENERAL > Organizations > Configure > Licenses
      summary: List The Licenses For An Organization
      description: List the licenses for an organization
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: organizationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{organizationId}}'
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: '1234'
                  licenseType: MX64-ENT
                  licenseKey: Z21234567890
                  orderNumber: 4C1234567
                  deviceSerial: Q234-ABCD-5678
                  networkId: N_24329156
                  state: active
                  seatCount: null
                  totalDurationInDays: 425
                  durationInDays: 365
                  permanentlyQueuedLicenses:
                    - id: '5678'
                      licenseType: MX64-ENT
                      licenseKey: Z21234567890
                      orderNumber: 4C1234567
                      durationInDays: 60
                  claimDate: '2019-08-29T12:40:10Z'
                  activationDate: '2019-09-01T15:01:46Z'
                  expirationDate: '2020-10-30T15:01:46Z'
  /organizations/{organizationId}/licenses/assignSeats:
    post:
      tags:
        - GENERAL > Organizations > Configure > Licenses
      summary: Assign SM Seats To A Network
      description: >-
        Assign SM seats to a network. This will increase the managed SM device
        limit of the network
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"licenseId\": \"<string>\",\n    \"networkId\":
                \"<string>\",\n    \"seatCount\": \"<integer>\"\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: organizationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{organizationId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                resultingLicenses:
                  - id: '1234'
                    licenseType: SME
                    licenseKey: Z21234567890
                    orderNumber: 4C1234567
                    deviceSerial: null
                    networkId: N_24329156
                    state: active
                    seatCount: 25
                    totalDurationInDays: 365
                    durationInDays: 365
                    permanentlyQueuedLicenses: []
                    claimDate: '2019-08-29T12:40:10Z'
                    activationDate: '2019-09-01T15:01:46Z'
                    expirationDate: '2020-08-31T15:01:46Z'
  /organizations/{organizationId}/licenses/move:
    post:
      tags:
        - GENERAL > Organizations > Configure > Licenses
      summary: Move Licenses To Another Organization
      description: >-
        Move licenses to another organization. This will also move any devices
        that the licenses are assigned to
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"destOrganizationId\": \"<string>\",\n   
                \"licenseIds\": [\n        \"<string>\",\n       
                \"<string>\"\n    ]\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: organizationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{organizationId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                destOrganizationId: '2930418'
                licenseIds:
                  - '123'
                  - '456'
  /organizations/{organizationId}/licenses/moveSeats:
    post:
      tags:
        - GENERAL > Organizations > Configure > Licenses
      summary: Move SM Seats To Another Organization
      description: >+
        Move SM seats to another organization
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        destOrganizationId| string| The ID of the organization to move the SM
        seats to

        licenseId| string| The ID of the SM license to move the seats from

        seatCount| integer| The number of seats to move to the new organization.
        Must be less than or equal to the total number of seats of the license


        #### Supports Action Batches


        **Resource**|**Operation**

        :-------------: |:-------------:

        `/organizations/{organizationId}/licenses` | moveSeats

      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"destOrganizationId\": \"<string>\",\n   
                \"licenseId\": \"<string>\",\n    \"seatCount\":
                \"<integer>\"\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: organizationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{organizationId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                destOrganizationId: '2930418'
                licenseId: '1234'
                seatCount: 20
  /organizations/{organizationId}/licenses/renewSeats:
    post:
      tags:
        - GENERAL > Organizations > Configure > Licenses
      summary: Renew SM Seats Of A License
      description: >-
        Renew SM seats of a license. This will extend the license expiration
        date of managed SM devices covered by this license
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"licenseIdToRenew\": \"<string>\",\n   
                \"unusedLicenseId\": \"<string>\"\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: organizationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{organizationId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                resultingLicenses:
                  - id: '1234'
                    licenseType: SME
                    licenseKey: Z21234567890
                    orderNumber: 4C1234567
                    deviceSerial: null
                    networkId: N_24329156
                    state: active
                    seatCount: 25
                    totalDurationInDays: 365
                    durationInDays: 365
                    permanentlyQueuedLicenses: []
                    claimDate: '2019-08-29T12:40:10Z'
                    activationDate: '2019-09-01T15:01:46Z'
                    expirationDate: '2020-08-31T15:01:46Z'
  /organizations/{organizationId}/licenses/{licenseId}:
    get:
      tags:
        - GENERAL > Organizations > Configure > Licenses
      summary: Display A License
      description: Display a license
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: organizationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{organizationId}}'
        - name: licenseId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{licenseId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: '1234'
                licenseType: MX64-ENT
                licenseKey: Z21234567890
                orderNumber: 4C1234567
                deviceSerial: Q234-ABCD-5678
                networkId: N_24329156
                state: active
                seatCount: null
                totalDurationInDays: 425
                durationInDays: 365
                permanentlyQueuedLicenses:
                  - id: '5678'
                    licenseType: MX64-ENT
                    licenseKey: Z21234567890
                    orderNumber: 4C1234567
                    durationInDays: 60
                claimDate: '2019-08-29T12:40:10Z'
                activationDate: '2019-09-01T15:01:46Z'
                expirationDate: '2020-10-30T15:01:46Z'
    put:
      tags:
        - GENERAL > Organizations > Configure > Licenses
      summary: Update A License
      description: >+
        Update a license
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        deviceSerial| string| The serial number of the device to assign this
        license to. Set this to null to unassign the license. If a different
        license is already active on the device, this parameter will control
        queueing/dequeuing this license.


        #### Supports Action Batches


        **Resource**|**Operation**

        :-------------: |:-------------:

        `/organizations/{organizationId}/licenses/{licenseId}` | update

      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n    \"deviceSerial\": \"<string>\"\n}"'
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: organizationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{organizationId}}'
        - name: licenseId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{licenseId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: '1234'
                licenseType: MX64-ENT
                licenseKey: Z21234567890
                orderNumber: 4C1234567
                deviceSerial: Q234-ABCD-5678
                networkId: N_24329156
                state: active
                seatCount: null
                totalDurationInDays: 425
                durationInDays: 365
                permanentlyQueuedLicenses:
                  - id: '5678'
                    licenseType: MX64-ENT
                    licenseKey: Z21234567890
                    orderNumber: 4C1234567
                    durationInDays: 60
                claimDate: '2019-08-29T12:40:10Z'
                activationDate: '2019-09-01T15:01:46Z'
                expirationDate: '2020-10-30T15:01:46Z'
  /organizations/{organizationId}/loginSecurity:
    get:
      tags:
        - GENERAL > Organizations > Configure > Login Security
      summary: Returns The Login Security Settings For An Organization
      description: Returns the login security settings for an organization.
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: organizationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{organizationId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                enforcePasswordExpiration: true
                passwordExpirationDays: 90
                enforceDifferentPasswords: true
                numDifferentPasswords: 3
                enforceStrongPasswords: true
                enforceAccountLockout: true
                accountLockoutAttempts: 3
                enforceIdleTimeout: true
                idleTimeoutMinutes: 30
                enforceTwoFactorAuth: true
                enforceLoginIpRanges: true
                loginIpRanges:
                  - 192.195.83.1
                  - 192.195.83.255
    put:
      tags:
        - GENERAL > Organizations > Configure > Login Security
      summary: Update The Login Security Settings For An Organization
      description: >+
        Update the login security settings for an organization
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        enforcePasswordExpiration| boolean| Boolean indicating whether users are
        forced to change their password every X number of days.

        passwordExpirationDays| integer| Number of days after which users will
        be forced to change their password.

        enforceDifferentPasswords| boolean| Boolean indicating whether users,
        when setting a new password, are forced to choose a new password that is
        different from any past passwords.

        numDifferentPasswords| integer| Number of recent passwords that new
        password must be distinct from.

        enforceStrongPasswords| boolean| Boolean indicating whether users will
        be forced to choose strong passwords for their accounts. Strong
        passwords are at least 8 characters that contain 3 of the following:
        number, uppercase letter, lowercase letter, and symbol

        enforceAccountLockout| boolean| Boolean indicating whether users'
        Dashboard accounts will be locked out after a specified number of
        consecutive failed login attempts.

        accountLockoutAttempts| integer| Number of consecutive failed login
        attempts after which users' accounts will be locked.

        enforceIdleTimeout| boolean| Boolean indicating whether users will be
        logged out after being idle for the specified number of minutes.

        idleTimeoutMinutes| integer| Number of minutes users can remain idle
        before being logged out of their accounts.

        enforceTwoFactorAuth| boolean| Boolean indicating whether users in this
        organization will be required to use an extra verification code when
        logging in to Dashboard. This code will be sent to their mobile phone
        via SMS, or can be generated by the Google Authenticator application.

        enforceLoginIpRanges| boolean| Boolean indicating whether organization
        will restrict access to Dashboard (including the API) from certain IP
        addresses.

        loginIpRanges| array| List of acceptable IP ranges. Entries can be
        single IP addresses, IP address ranges, and CIDR subnets.


        #### Supports Action Batches


        **Resource**|**Operation**

        :-------------: |:-------------:

        `/organizations/{organizationId}/loginSecurity` | update

      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"enforcePasswordExpiration\": \"<boolean>\",\n   
                \"passwordExpirationDays\": \"<integer>\",\n   
                \"enforceDifferentPasswords\": \"<boolean>\",\n   
                \"numDifferentPasswords\": \"<integer>\",\n   
                \"enforceStrongPasswords\": \"<boolean>\",\n   
                \"enforceAccountLockout\": \"<boolean>\",\n   
                \"accountLockoutAttempts\": \"<integer>\",\n   
                \"enforceIdleTimeout\": \"<boolean>\",\n   
                \"idleTimeoutMinutes\": \"<integer>\",\n   
                \"enforceTwoFactorAuth\": \"<boolean>\",\n   
                \"enforceLoginIpRanges\": \"<boolean>\",\n    \"loginIpRanges\":
                [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: organizationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{organizationId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                enforcePasswordExpiration: true
                passwordExpirationDays: 90
                enforceDifferentPasswords: true
                numDifferentPasswords: 3
                enforceStrongPasswords: true
                enforceAccountLockout: true
                accountLockoutAttempts: 3
                enforceIdleTimeout: true
                idleTimeoutMinutes: 30
                enforceTwoFactorAuth: true
                enforceLoginIpRanges: true
                loginIpRanges:
                  - 192.195.83.1
                  - 192.195.83.255
  /organizations/{organizationId}/networks:
    get:
      tags:
        - General
      summary: 'List the Networks in an Organization '
      description: List the networks that the user has privileges on in an organization
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: organizationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{organizationId}}'
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: L_123456
                  organizationId: '2930418'
                  name: Long Island Office
                  timeZone: America/Los_Angeles
                  tags:
                    - tag1
                    - tag2
                  productTypes:
                    - appliance
                    - switch
                    - wireless
                  enrollmentString: long-island-office
    post:
      tags:
        - GENERAL > Organizations > Configure > Networks
      summary: Create A Network
      description: >+
        Create a network
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        name| string| The name of the new network

        productTypes| array| The product type(s) of the new network. Valid types
        are wireless, appliance, switch, systemsManager, camera,
        cellularGateway, environmental. If more than one type is included, the
        network will be a combined network.

        tags| array| A list of tags to be applied to the network

        timeZone| string| The timezone of the network. For a list of allowed
        timezones, please see the 'TZ' column in the table in <a target='_blank'
        href='https://en.wikipedia.org/wiki/List_of_tz_database_time_zones'>this
        article.</a>

        copyFromNetworkId| string| The ID of the network to copy configuration
        from. Other provided parameters will override the copied configuration,
        except type which must match this network's type exactly.

        notes| string| Add any notes or additional information about this
        network here.


        #### Supports Action Batches


        **Resource**|**Operation**

        :-------------: |:-------------:

        `/organizations/{organizationId}/networks` | create

      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"name\": \"<string>\",\n    \"productTypes\":
                [\n        \"<string>\",\n        \"<string>\"\n    ],\n   
                \"tags\": [\n        \"<string>\",\n        \"<string>\"\n   
                ],\n    \"timeZone\": \"<string>\",\n    \"copyFromNetworkId\":
                \"<string>\",\n    \"notes\": \"<string>\"\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: organizationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{organizationId}}'
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: L_123456
                organizationId: '2930418'
                name: Long Island Office
                timeZone: America/Los_Angeles
                tags:
                  - tag1
                  - tag2
                productTypes:
                  - appliance
                  - switch
                  - wireless
                enrollmentString: long-island-office
                notes: Combined network for Long Island Office
  /organizations/{organizationId}/networks/combine:
    post:
      tags:
        - GENERAL > Organizations > Configure > Networks
      summary: Combine Multiple Networks Into A Single Network
      description: >+
        Combine multiple networks into a single network
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        name| string| The name of the combined network

        networkIds| array| A list of the network IDs that will be combined. If
        an ID of a combined network is included in this list, the other networks
        in the list will be grouped into that network

        enrollmentString| string| A unique identifier which can be used for
        device enrollment or easy access through the Meraki SM Registration page
        or the Self Service Portal. Please note that changing this field may
        cause existing bookmarks to break. All networks that are part of this
        combined network will have their enrollment string appended by
        '-network_type'. If left empty, all exisitng enrollment strings will be
        deleted.


        #### Supports Action Batches


        **Resource**|**Operation**

        :-------------: |:-------------:

        `/organizations/{organizationId}/networks` | combine

      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"name\": \"<string>\",\n    \"networkIds\": [\n       
                \"<string>\",\n        \"<string>\"\n    ],\n   
                \"enrollmentString\": \"<string>\"\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: organizationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{organizationId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                resultingNetwork:
                  id: L_123456
                  organizationId: '2930418'
                  name: Long Island Office
                  timeZone: America/Los_Angeles
                  tags:
                    - tag1
                    - tag2
                  productTypes:
                    - appliance
                    - switch
                    - wireless
                  enrollmentString: long-island-office
                  notes: Combined network for Long Island Office
  /organizations/{organizationId}/saml/idps:
    get:
      tags:
        - GENERAL > Organizations > Configure > Saml > Idps
      summary: List The SAML Id Ps In Your Organization
      description: List the SAML IdPs in your organization.
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: organizationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{organizationId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - idpId: ab0c1de23Fg
                  consumerUrl: https://n7.meraki.com/saml/login/XXX
                  x509certSha1Fingerprint: '00:11:22:33:44:55:66:77:88:99:00:11:22:33:44:55:66:77:88:99'
                  sloLogoutUrl: https://somewhere.com
    post:
      tags:
        - GENERAL > Organizations > Configure > Saml > Idps
      summary: Create A SAML Id P For Your Organization
      description: >+
        Create a SAML IdP for your organization.
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        x509certSha1Fingerprint| string| Fingerprint (SHA1) of the SAML
        certificate provided by your Identity Provider (IdP). This will be used
        for encryption / validation.

        sloLogoutUrl| string| Dashboard will redirect users to this URL when
        they sign out.


        #### Supports Action Batches


        **Resource**|**Operation**

        :-------------: |:-------------:

        `/organizations/{organizationId}/saml/idps` | create

      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"x509certSha1Fingerprint\": \"<string>\",\n   
                \"sloLogoutUrl\": \"<string>\"\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: organizationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{organizationId}}'
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                idpId: ab0c1de23Fg
                consumerUrl: https://n7.meraki.com/saml/login/XXX
                x509certSha1Fingerprint: '00:11:22:33:44:55:66:77:88:99:00:11:22:33:44:55:66:77:88:99'
                sloLogoutUrl: https://somewhere.com
  /organizations/{organizationId}/saml/idps/{idpId}:
    put:
      tags:
        - GENERAL > Organizations > Configure > Saml > Idps
      summary: Update A SAML Id P In Your Organization
      description: >+
        Update a SAML IdP in your organization
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        x509certSha1Fingerprint| string| Fingerprint (SHA1) of the SAML
        certificate provided by your Identity Provider (IdP). This will be used
        for encryption / validation.

        sloLogoutUrl| string| Dashboard will redirect users to this URL when
        they sign out.


        #### Supports Action Batches


        **Resource**|**Operation**

        :-------------: |:-------------:

        `/organizations/{organizationId}/saml/idps/{idpId}` | update

      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"x509certSha1Fingerprint\": \"<string>\",\n   
                \"sloLogoutUrl\": \"<string>\"\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: organizationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{organizationId}}'
        - name: idpId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{idpId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                idpId: ab0c1de23Fg
                consumerUrl: https://n7.meraki.com/saml/login/XXX
                x509certSha1Fingerprint: '00:11:22:33:44:55:66:77:88:99:00:11:22:33:44:55:66:77:88:99'
                sloLogoutUrl: https://somewhere.com
    get:
      tags:
        - GENERAL > Organizations > Configure > Saml > Idps
      summary: Get A SAML Id P From Your Organization
      description: Get a SAML IdP from your organization.
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: organizationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{organizationId}}'
        - name: idpId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{idpId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                idpId: ab0c1de23Fg
                consumerUrl: https://n7.meraki.com/saml/login/XXX
                x509certSha1Fingerprint: '00:11:22:33:44:55:66:77:88:99:00:11:22:33:44:55:66:77:88:99'
                sloLogoutUrl: https://somewhere.com
    delete:
      tags:
        - GENERAL > Organizations > Configure > Saml > Idps
      summary: Remove A SAML Id P In Your Organization
      description: |+
        Remove a SAML IdP in your organization.
        #### Supports Action Batches

        **Resource**|**Operation**
        :-------------: |:-------------:
        `/organizations/{organizationId}/saml/idps/{idpId}` | destroy

      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: organizationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{organizationId}}'
        - name: idpId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{idpId}}'
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /organizations/{organizationId}/saml:
    get:
      tags:
        - GENERAL > Organizations > Configure > Saml
      summary: Returns The SAML SSO Enabled Settings For An Organization
      description: Returns the SAML SSO enabled settings for an organization.
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: organizationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{organizationId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                enabled: true
    put:
      tags:
        - GENERAL > Organizations > Configure > Saml
      summary: Updates The SAML SSO Enabled Settings For An Organization
      description: |
        Updates the SAML SSO enabled settings for an organization.
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        enabled| boolean| Boolean for updating SAML SSO enabled settings.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n    \"enabled\": \"<boolean>\"\n}"'
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: organizationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{organizationId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                enabled: true
  /organizations/{organizationId}/samlRoles:
    get:
      tags:
        - GENERAL > Organizations > Configure > Saml Roles
      summary: List The SAML Roles For This Organization
      description: List the SAML roles for this organization
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: organizationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{organizationId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: TEdJIEN1c3RvbWVy
                  role: myrole
                  orgAccess: none
                  networks:
                    - id: N_1234
                      access: full
                  tags:
                    - tag: west
                      access: read-only
    post:
      tags:
        - GENERAL > Organizations > Configure > Saml Roles
      summary: Create A SAML Role
      description: >
        Create a SAML role
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        role| string| The role of the SAML administrator

        orgAccess| string| The privilege of the SAML administrator on the
        organization. Can be one of 'none', 'read-only' or 'full'

        tags| array| The list of tags that the SAML administrator has privleges
        on

        networks| array| The list of networks that the SAML administrator has
        privileges on
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"role\": \"<string>\",\n    \"orgAccess\":
                \"<string>\",\n    \"tags\": [\n        {\n            \"tag\":
                \"<string>\",\n            \"access\": \"<string>\"\n       
                },\n        {\n            \"tag\": \"<string>\",\n           
                \"access\": \"<string>\"\n        }\n    ],\n    \"networks\":
                [\n        {\n            \"id\": \"<string>\",\n           
                \"access\": \"<string>\"\n        },\n        {\n           
                \"id\": \"<string>\",\n            \"access\":
                \"<string>\"\n        }\n    ]\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: organizationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{organizationId}}'
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: TEdJIEN1c3RvbWVy
                role: myrole
                orgAccess: none
                networks:
                  - id: N_1234
                    access: full
                tags:
                  - tag: west
                    access: read-only
  /organizations/{organizationId}/samlRoles/{samlRoleId}:
    get:
      tags:
        - GENERAL > Organizations > Configure > Saml Roles
      summary: Return A SAML Role
      description: Return a SAML role
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: organizationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{organizationId}}'
        - name: samlRoleId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{samlRoleId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: TEdJIEN1c3RvbWVy
                role: myrole
                orgAccess: none
                networks:
                  - id: N_1234
                    access: full
                tags:
                  - tag: west
                    access: read-only
    put:
      tags:
        - GENERAL > Organizations > Configure > Saml Roles
      summary: Update A SAML Role
      description: >
        Update a SAML role
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        role| string| The role of the SAML administrator

        orgAccess| string| The privilege of the SAML administrator on the
        organization. Can be one of 'none', 'read-only' or 'full'

        tags| array| The list of tags that the SAML administrator has privleges
        on

        networks| array| The list of networks that the SAML administrator has
        privileges on
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"role\": \"<string>\",\n    \"orgAccess\":
                \"<string>\",\n    \"tags\": [\n        {\n            \"tag\":
                \"<string>\",\n            \"access\": \"<string>\"\n       
                },\n        {\n            \"tag\": \"<string>\",\n           
                \"access\": \"<string>\"\n        }\n    ],\n    \"networks\":
                [\n        {\n            \"id\": \"<string>\",\n           
                \"access\": \"<string>\"\n        },\n        {\n           
                \"id\": \"<string>\",\n            \"access\":
                \"<string>\"\n        }\n    ]\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: organizationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{organizationId}}'
        - name: samlRoleId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{samlRoleId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: TEdJIEN1c3RvbWVy
                role: myrole
                orgAccess: none
                networks:
                  - id: N_1234
                    access: full
                tags:
                  - tag: west
                    access: read-only
    delete:
      tags:
        - GENERAL > Organizations > Configure > Saml Roles
      summary: Remove A SAML Role
      description: Remove a SAML role
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: organizationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{organizationId}}'
        - name: samlRoleId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{samlRoleId}}'
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /organizations/{organizationId}/snmp:
    get:
      tags:
        - GENERAL > Organizations > Configure > Snmp
      summary: Return The SNMP Settings For An Organization
      description: Return the SNMP settings for an organization
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: organizationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{organizationId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                v2cEnabled: false
                v3Enabled: true
                v3AuthMode: SHA
                v3PrivMode: AES128
                peerIps:
                  - 123.123.123.1
                hostname: snmp.meraki.com
                port: 443
    put:
      tags:
        - GENERAL > Organizations > Configure > Snmp
      summary: Update The SNMP Settings For An Organization
      description: >
        Update the SNMP settings for an organization
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        v2cEnabled| boolean| Boolean indicating whether SNMP version 2c is
        enabled for the organization.

        v3Enabled| boolean| Boolean indicating whether SNMP version 3 is enabled
        for the organization.

        v3AuthMode| string| The SNMP version 3 authentication mode. Can be
        either 'MD5' or 'SHA'.

        v3AuthPass| string| The SNMP version 3 authentication password. Must be
        at least 8 characters if specified.

        v3PrivMode| string| The SNMP version 3 privacy mode. Can be either 'DES'
        or 'AES128'.

        v3PrivPass| string| The SNMP version 3 privacy password. Must be at
        least 8 characters if specified.

        peerIps| array| The list of IPv4 addresses that are allowed to access
        the SNMP server.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"v2cEnabled\": \"<boolean>\",\n    \"v3Enabled\":
                \"<boolean>\",\n    \"v3AuthMode\": \"<string>\",\n   
                \"v3AuthPass\": \"<string>\",\n    \"v3PrivMode\":
                \"<string>\",\n    \"v3PrivPass\": \"<string>\",\n   
                \"peerIps\": [\n        \"<string>\",\n        \"<string>\"\n   
                ]\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: organizationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{organizationId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                v2cEnabled: false
                v3Enabled: true
                v3AuthMode: SHA
                v3PrivMode: AES128
                peerIps:
                  - 123.123.123.1
                hostname: snmp.meraki.com
                port: 443
  /organizations:
    get:
      tags:
        - General
      summary: List the Organizations
      description: List the organizations that the user has privileges on
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: '2930418'
                  name: My organization
                  url: >-
                    https://dashboard.meraki.com/o/VjjsAd/manage/organization/overview
    post:
      tags:
        - GENERAL > Organizations > Configure
      summary: Create A New Organization
      description: |
        Create a new organization
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        name| string| The name of the organization
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n    \"name\": \"<string>\"\n}"'
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: '2930418'
                name: My organization
                url: >-
                  https://dashboard.meraki.com/o/VjjsAd/manage/organization/overview
  /organizations/{organizationId}:
    get:
      tags:
        - GENERAL > Organizations > Configure
      summary: Return An Organization
      description: Return an organization
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: organizationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{organizationId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: '2930418'
                name: My organization
                url: >-
                  https://dashboard.meraki.com/o/VjjsAd/manage/organization/overview
    put:
      tags:
        - GENERAL > Organizations > Configure
      summary: Update An Organization
      description: |
        Update an organization
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        name| string| The name of the organization
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n    \"name\": \"<string>\"\n}"'
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: organizationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{organizationId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: '2930418'
                name: My organization
                url: >-
                  https://dashboard.meraki.com/o/VjjsAd/manage/organization/overview
    delete:
      tags:
        - GENERAL > Organizations > Configure
      summary: Delete An Organization
      description: Delete an organization
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: organizationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{organizationId}}'
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /organizations/{organizationId}/claim:
    post:
      tags:
        - GENERAL > Organizations > Configure
      summary: Claim A List Of Devices Licenses And Or Orders Into An Organization
      description: >-
        Claim a list of devices, licenses, and/or orders into an organization.
        When claiming by order, all devices and licenses in the order will be
        claimed; licenses will be added to the organization and devices will be
        placed in the organization's inventory.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"orders\": [\n        \"<string>\",\n       
                \"<string>\"\n    ],\n    \"serials\": [\n       
                \"<string>\",\n        \"<string>\"\n    ],\n    \"licenses\":
                [\n        {\n            \"key\": \"<string>\",\n           
                \"mode\": \"<string>\"\n        },\n        {\n           
                \"key\": \"<string>\",\n            \"mode\":
                \"<string>\"\n        }\n    ]\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: organizationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{organizationId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                orders:
                  - 4CXXXXXXX
                serials:
                  - Q234-ABCD-5678
                licenses:
                  - key: Z2XXXXXXXXXX
                    mode: addDevices
  /organizations/{organizationId}/clone:
    post:
      tags:
        - GENERAL > Organizations > Configure
      summary: Create A New Organization By Cloning The Addressed Organization
      description: |
        Create a new organization by cloning the addressed organization
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        name| string| The name of the new organization
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n    \"name\": \"<string>\"\n}"'
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: organizationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{organizationId}}'
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: '2930418'
                name: My organization
                url: >-
                  https://dashboard.meraki.com/o/VjjsAd/manage/organization/overview
  /organizations/{organizationId}/apiRequests/overview:
    get:
      tags:
        - GENERAL > Organizations > Monitor > Api Requests > Overview
      summary: Return an aggregated overview of API requests data
      description: Return an aggregated overview of API requests data
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: organizationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{organizationId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                responseCodeCounts:
                  '200': 50000
                  '201': 4000
                  '204': 1000
                  '400': 3500
                  '404': 1500
                  '429': 10000
  /organizations/{organizationId}/apiRequests:
    get:
      tags:
        - GENERAL > Organizations > Monitor > Api Requests
      summary: List The API Requests Made By An Organization
      description: List the API requests made by an organization
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: organizationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{organizationId}}'
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - adminId: '212406'
                  method: GET
                  host: api.meraki.com
                  path: /api/v0/organizations/33349/apiRequests
                  queryString: timespan=604800
                  userAgent: PostmanRuntime/7.6.0
                  ts: '2019-02-20T17:31:23Z'
                  responseCode: 200
                  sourceIp: 123.123.123.1
  /organizations/{organizationId}/configurationChanges:
    get:
      tags:
        - GENERAL > Organizations > Monitor > Configuration Changes
      summary: View the Change Log for your organization
      description: View the Change Log for your organization
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: organizationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{organizationId}}'
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - ts: '2018-02-11T00:00:00.090210Z'
                  adminName: Miles Meraki
                  adminEmail: miles@meraki.com
                  adminId: '212406'
                  page: via API
                  label: PUT /api/v1/organizations/2930418
                  oldValue: >-
                    {"id":"2930418","name":"My
                    organization","url":"https://dashboard.meraki.com/o/VjjsAd/manage/organization/overview"}
                  newValue: >-
                    {"id":"2930418","name":"My organization
                    changed","url":"https://dashboard.meraki.com/o/VjjsAd/manage/organization/overview"}
  /organizations/{organizationId}/devices/statuses:
    get:
      tags:
        - GENERAL > Organizations > Monitor > Devices > Statuses
      summary: List the status of every Meraki device in the organization
      description: List the status of every Meraki device in the organization
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: organizationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{organizationId}}'
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - name: My AP
                  serial: Q234-ABCD-5678
                  mac: '00:11:22:33:44:55'
                  publicIp: 123.123.123.1
                  networkId: N_24329156
                  status: online
                  lastReportedAt: '2018-02-11T00:00:00.090210Z'
                  lanIp: 1.2.3.4
                  gateway: 1.2.3.5
                  ipType: dhcp
                  primaryDns: 8.8.8.8
                  secondaryDns: 8.8.4.4
  /organizations/{organizationId}/devices/uplinksLossAndLatency:
    get:
      tags:
        - GENERAL > Organizations > Monitor > Devices > Uplinks Loss And Latency
      summary: >-
        Return the uplink loss and latency for every MX in the organization from
        at latest 2 minutes ago
      description: >-
        Return the uplink loss and latency for every MX in the organization from
        at latest 2 minutes ago
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: organizationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{organizationId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - networkId: N_12345
                  serial: Q2AB-CDEF-GHIJ
                  uplink: wan1
                  ip: 8.8.8.8
                  timeSeries:
                    - ts: '2019-01-31T18:46:13Z'
                      lossPercent: 5.3
                      latencyMs: 194.9
  /organizations/{organizationId}/licenses/overview:
    get:
      tags:
        - GENERAL > Organizations > Monitor > Licenses > overview
      summary: Return an overview of the license state for an organization
      description: Return an overview of the license state for an organization
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: organizationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{organizationId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                status: OK
                expirationDate: Feb 8, 2020 UTC
                licensedDeviceCounts:
                  MS: 100
  /organizations/{organizationId}/openapiSpec:
    get:
      tags:
        - GENERAL > Organizations > Monitor > Openapi Spec
      summary: >-
        Return the OpenAPI 2.0 Specification of the organization's API
        documentation in JSON
      description: >-
        Return the OpenAPI 2.0 Specification of the organization's API
        documentation in JSON
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: organizationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{organizationId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                swagger: '2.0'
                info:
                  version: v0
                  title: Meraki Dashboard API
                  description: >-
                    This collection of API calls provides an easy way to
                    interact with a Cisco Meraki network
                paths:
                  /organizations:
                    get:
                      description: List the organizations that the user has privileges on
                      operationId: getOrganizations
                      responses:
                        '200':
                          description: Successful operation
                          examples:
                            application/json:
                              - id: '2930418'
                                name: My organization
  /organizations/{organizationId}/uplinks/statuses:
    get:
      tags:
        - GENERAL > Organizations > Monitor > Uplinks > statuses
      summary: >-
        List the uplink status of every Meraki MX, MG and Z series devices in
        the organization
      description: >-
        List the uplink status of every Meraki MX, MG and Z series devices in
        the organization
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: organizationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{organizationId}}'
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - networkId: N_24329156
                  serial: Q234-ABCD-5678
                  model: MX68C
                  lastReportedAt: '2018-02-11T00:00:00Z'
                  uplinks:
                    - interface: wan1
                      status: active
                      ip: 1.2.3.4
                      gateway: 1.2.3.5
                      publicIp: 123.123.123.1
                      primaryDns: 8.8.8.8
                      secondaryDns: 8.8.4.4
                      ipAssignedBy: static
                    - interface: cellular
                      status: ready
                      ip: 1.2.3.4
                      provider: at&t
                      publicIp: 123.123.123.1
                      model: integrated
                      signalStat:
                        rsrp: '-120'
                        rsrq: '-13'
                      connectionType: 4g
                      apn: internet
                      iccid: '123456789'
                - networkId: N_24329156
                  serial: Q234-ABCD-5678
                  model: MG21
                  lastReportedAt: '2018-02-11T00:00:00Z'
                  uplinks:
                    - interface: cellular
                      status: ready
                      ip: 1.2.3.4
                      provider: at&t
                      publicIp: 123.123.123.1
                      model: integrated
                      signalStat:
                        rsrp: '-120'
                        rsrq: '-13'
                      connectionType: 4g
                      apn: internet
                      iccid: '123456789'
  /organizations/{organizationId}/webhooks/alertTypes:
    get:
      tags:
        - GENERAL > Organizations > Monitor > Webhooks > Alert Types
      summary: Return a list of alert types to be used with managing webhook alerts
      description: Return a list of alert types to be used with managing webhook alerts
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: organizationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{organizationId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - alertTypeId: stopped_reporting
                  alertType: APs went down
                  version: '0.1'
                  sharedSecret: secret
                  sentAt: '2020-07-11T00:03:12.331789Z'
                  alertId: '0000000000000000'
                  alertLevel: warning
                  occurredAt: '2018-02-11T00:00:00.123450Z'
                  alertData: {}
                  organizationId: '2930418'
                  organizationName: My organization
                  organizationUrl: >-
                    https://dashboard.meraki.com/o/VjjsAd/manage/organization/overview
                  deviceSerial: Q234-ABCD-5678
                  deviceMac: '00:11:22:33:44:55'
                  deviceName: My AP
                  deviceUrl: https://n1.meraki.com//n//manage/nodes/new_list/000000000000
                  deviceTags:
                    - tag1
                    - tag2
                  deviceModel: MR34
                  networkId: N_24329156
                  networkName: Main Office
                  networkUrl: https://n1.meraki.com//n//manage/nodes/list
  /organizations/{organizationId}/webhooks/logs:
    get:
      tags:
        - GENERAL > Organizations > Monitor > Webhooks > Logs
      summary: Return the log of webhook POSTs sent
      description: Return the log of webhook POSTs sent
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: organizationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{organizationId}}'
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - organizationId: '33619'
                  networkId: L_22742
                  alertType: Settings changed
                  url: https://www.example.com/path
                  sentAt: '2019-01-01T13:37:28.123456Z'
                  loggedAt: '2019-01-01T13:37:28.423456Z'
                  responseCode: 200
                  responseDuration: 244
  /networks/{networkId}/appliance/connectivityMonitoringDestinations:
    get:
      tags:
        - >-
          PRODUCTS > Appliance > Configure > Connectivity Monitoring
          Destinations
      summary: Return The Connectivity Testing Destinations For An MX Network
      description: Return the connectivity testing destinations for an MX network
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                destinations:
                  - ip: 8.8.8.8
                    description: Google
                    default: false
                  - ip: 1.23.45.67
                    description: test description
                    default: true
                  - ip: 9.8.7.6
                    description: null
                    default: false
    put:
      tags:
        - >-
          PRODUCTS > Appliance > Configure > Connectivity Monitoring
          Destinations
      summary: Update The Connectivity Testing Destinations For An MX Network
      description: >+
        Update the connectivity testing destinations for an MX network
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        destinations| array| The list of connectivity monitoring destinations


        #### Supports Action Batches


        **Resource**|**Operation**

        :-------------: |:-------------:

        `/networks/{networkId}/appliance/connectivityMonitoringDestinations` |
        update

      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"destinations\": [\n        {\n            \"type\":
                \"boolean\",\n            \"description\": \"Boolean indicating
                whether this is the default testing destination (true) or not
                (false). Defaults to false. Only one default is
                allowed\",\n            \"default\": \"<boolean>\"\n       
                },\n        {\n            \"type\": \"boolean\",\n           
                \"description\": \"Boolean indicating whether this is the
                default testing destination (true) or not (false). Defaults to
                false. Only one default is allowed\",\n            \"default\":
                \"<boolean>\"\n        }\n    ]\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                destinations:
                  - ip: 8.8.8.8
                    description: Google
                    default: false
                  - ip: 1.23.45.67
                    description: test description
                    default: true
                  - ip: 9.8.7.6
                    description: null
                    default: false
  /networks/{networkId}/appliance/contentFiltering/categories:
    get:
      tags:
        - PRODUCTS > Appliance > Configure > Content Filtering > Categories
      summary: List all available content filtering categories for an MX network
      description: List all available content filtering categories for an MX network
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                categories:
                  - id: meraki:contentFiltering/category/1
                    name: Real Estate
                  - id: meraki:contentFiltering/category/3
                    name: Financial Services
                  - ...
                  - id: meraki:contentFiltering/category/11
                    name: Adult and Pornography
  /networks/{networkId}/appliance/contentFiltering:
    get:
      tags:
        - PRODUCTS > Appliance > Configure > Content Filtering
      summary: Return The Content Filtering Settings For An MX Network
      description: Return the content filtering settings for an MX network
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                allowedUrlPatterns:
                  - http://www.example.org
                  - http://help.com.au
                blockedUrlPatterns:
                  - http://www.example.com
                  - http://www.betting.com
                blockedUrlCategories:
                  - id: meraki:contentFiltering/category/1
                    name: Real Estate
                  - id: meraki:contentFiltering/category/7
                    name: Shopping
                urlCategoryListSize: topSites
    put:
      tags:
        - PRODUCTS > Appliance > Configure > Content Filtering
      summary: Update The Content Filtering Settings For An MX Network
      description: >
        Update the content filtering settings for an MX network
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        allowedUrlPatterns| array| A list of URL patterns that are allowed

        blockedUrlPatterns| array| A list of URL patterns that are blocked

        blockedUrlCategories| array| A list of URL categories to block

        urlCategoryListSize| string| URL category list size which is either
        'topSites' or 'fullList'
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"allowedUrlPatterns\": [\n       
                \"<string>\",\n        \"<string>\"\n    ],\n   
                \"blockedUrlPatterns\": [\n        \"<string>\",\n       
                \"<string>\"\n    ],\n    \"blockedUrlCategories\": [\n       
                \"<string>\",\n        \"<string>\"\n    ],\n   
                \"urlCategoryListSize\": \"<string>\"\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                allowedUrlPatterns:
                  - http://www.example.org
                  - http://help.com.au
                blockedUrlPatterns:
                  - http://www.example.com
                  - http://www.betting.com
                blockedUrlCategories:
                  - id: meraki:contentFiltering/category/1
                    name: Real Estate
                  - id: meraki:contentFiltering/category/7
                    name: Shopping
                urlCategoryListSize: topSites
  /networks/{networkId}/appliance/firewall/cellularFirewallRules:
    get:
      tags:
        - PRODUCTS > Appliance > Configure > Firewall > Cellular Firewall Rules
      summary: Return The Cellular Firewall Rules For An MX Network
      description: Return the cellular firewall rules for an MX network
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                rules:
                  - comment: Allow TCP traffic to subnet with HTTP servers.
                    policy: allow
                    protocol: tcp
                    destPort: 443
                    destCidr: 192.168.1.0/24
                    srcPort: Any
                    srcCidr: Any
                    syslogEnabled: false
    put:
      tags:
        - PRODUCTS > Appliance > Configure > Firewall > Cellular Firewall Rules
      summary: Update The Cellular Firewall Rules Of An MX Network
      description: >
        Update the cellular firewall rules of an MX network
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        rules| array| An ordered array of the firewall rules (not including the
        default rule)
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"rules\": [\n        {\n            \"policy\":
                \"<string>\",\n            \"protocol\":
                \"<string>\",\n            \"srcCidr\":
                \"<string>\",\n            \"destCidr\":
                \"<string>\",\n            \"comment\":
                \"<string>\",\n            \"srcPort\":
                \"<string>\",\n            \"destPort\":
                \"<string>\",\n            \"syslogEnabled\":
                \"<boolean>\"\n        },\n        {\n            \"policy\":
                \"<string>\",\n            \"protocol\":
                \"<string>\",\n            \"srcCidr\":
                \"<string>\",\n            \"destCidr\":
                \"<string>\",\n            \"comment\":
                \"<string>\",\n            \"srcPort\":
                \"<string>\",\n            \"destPort\":
                \"<string>\",\n            \"syslogEnabled\":
                \"<boolean>\"\n        }\n    ]\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                rules:
                  - comment: Allow TCP traffic to subnet with HTTP servers.
                    policy: allow
                    protocol: tcp
                    destPort: 443
                    destCidr: 192.168.1.0/24
                    srcPort: Any
                    srcCidr: Any
                    syslogEnabled: false
  /networks/{networkId}/appliance/firewall/firewalledServices:
    get:
      tags:
        - PRODUCTS > Appliance > Configure > Firewall > Firewalled Services
      summary: List The Appliance Services And Their Accessibility Rules
      description: List the appliance services and their accessibility rules
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - service: web
                  access: restricted
                  allowedIps:
                    - 123.123.123.1
  /networks/{networkId}/appliance/firewall/firewalledServices/{service}:
    get:
      tags:
        - PRODUCTS > Appliance > Configure > Firewall > Firewalled Services
      summary: Return The Accessibility Settings Of The Given Service ICMP Web Or SNMP
      description: >-
        Return the accessibility settings of the given service ('ICMP', 'web',
        or 'SNMP')
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: service
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{service}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                service: web
                access: restricted
                allowedIps:
                  - 123.123.123.1
    put:
      tags:
        - PRODUCTS > Appliance > Configure > Firewall > Firewalled Services
      summary: >-
        Updates The Accessibility Settings For The Given Service ICMP Web Or
        SNMP
      description: >
        Updates the accessibility settings for the given service ('ICMP', 'web',
        or 'SNMP')
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        access| string| A string indicating the rule for which IPs are allowed
        to use the specified service. Acceptable values are "blocked" (no remote
        IPs can access the service), "restricted" (only allowed IPs can access
        the service), and "unrestriced" (any remote IP can access the service).
        This field is required

        allowedIps| array| An array of allowed IPs that can access the service.
        This field is required if "access" is set to "restricted". Otherwise
        this field is ignored
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"access\": \"<string>\",\n    \"allowedIps\":
                [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: service
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{service}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                service: web
                access: restricted
                allowedIps:
                  - 123.123.123.1
  /networks/{networkId}/appliance/firewall/inboundFirewallRules:
    get:
      tags:
        - PRODUCTS > Appliance > Configure > Firewall > Inbound Firewall Rules
      summary: Return The Inbound Firewall Rules For An MX Network
      description: Return the inbound firewall rules for an MX network
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                rules:
                  - comment: Allow TCP traffic to subnet with HTTP servers.
                    policy: allow
                    protocol: tcp
                    destPort: 443
                    destCidr: 192.168.1.0/24
                    srcPort: Any
                    srcCidr: Any
                    syslogEnabled: false
                syslogDefaultRule: true
    put:
      tags:
        - PRODUCTS > Appliance > Configure > Firewall > Inbound Firewall Rules
      summary: Update The Inbound Firewall Rules Of An MX Network
      description: >
        Update the inbound firewall rules of an MX network
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        rules| array| An ordered array of the firewall rules (not including the
        default rule)

        syslogDefaultRule| boolean| Log the special default rule (boolean value
        - enable only if you've configured a syslog server) (optional)
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"rules\": [\n        {\n            \"policy\":
                \"<string>\",\n            \"protocol\":
                \"<string>\",\n            \"srcCidr\":
                \"<string>\",\n            \"destCidr\":
                \"<string>\",\n            \"comment\":
                \"<string>\",\n            \"srcPort\":
                \"<string>\",\n            \"destPort\":
                \"<string>\",\n            \"syslogEnabled\":
                \"<boolean>\"\n        },\n        {\n            \"policy\":
                \"<string>\",\n            \"protocol\":
                \"<string>\",\n            \"srcCidr\":
                \"<string>\",\n            \"destCidr\":
                \"<string>\",\n            \"comment\":
                \"<string>\",\n            \"srcPort\":
                \"<string>\",\n            \"destPort\":
                \"<string>\",\n            \"syslogEnabled\":
                \"<boolean>\"\n        }\n    ],\n    \"syslogDefaultRule\":
                \"<boolean>\"\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                rules:
                  - comment: Allow TCP traffic to subnet with HTTP servers.
                    policy: allow
                    protocol: tcp
                    destPort: 443
                    destCidr: 192.168.1.0/24
                    srcPort: Any
                    srcCidr: Any
                    syslogEnabled: false
                syslogDefaultRule: true
  /networks/{networkId}/appliance/firewall/l3FirewallRules:
    get:
      tags:
        - PRODUCTS > Appliance > Configure > Firewall > L 3 Firewall Rules
      summary: Return The L 3 Firewall Rules For An MX Network
      description: Return the L3 firewall rules for an MX network
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                rules:
                  - comment: Allow TCP traffic to subnet with HTTP servers.
                    policy: allow
                    protocol: tcp
                    destPort: 443
                    destCidr: 192.168.1.0/24
                    srcPort: Any
                    srcCidr: Any
                    syslogEnabled: false
    put:
      tags:
        - PRODUCTS > Appliance > Configure > Firewall > L 3 Firewall Rules
      summary: Update The L 3 Firewall Rules Of An MX Network
      description: >
        Update the L3 firewall rules of an MX network
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        rules| array| An ordered array of the firewall rules (not including the
        default rule)

        syslogDefaultRule| boolean| Log the special default rule (boolean value
        - enable only if you've configured a syslog server) (optional)
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"rules\": [\n        {\n            \"policy\":
                \"<string>\",\n            \"protocol\":
                \"<string>\",\n            \"srcCidr\":
                \"<string>\",\n            \"destCidr\":
                \"<string>\",\n            \"comment\":
                \"<string>\",\n            \"srcPort\":
                \"<string>\",\n            \"destPort\":
                \"<string>\",\n            \"syslogEnabled\":
                \"<boolean>\"\n        },\n        {\n            \"policy\":
                \"<string>\",\n            \"protocol\":
                \"<string>\",\n            \"srcCidr\":
                \"<string>\",\n            \"destCidr\":
                \"<string>\",\n            \"comment\":
                \"<string>\",\n            \"srcPort\":
                \"<string>\",\n            \"destPort\":
                \"<string>\",\n            \"syslogEnabled\":
                \"<boolean>\"\n        }\n    ],\n    \"syslogDefaultRule\":
                \"<boolean>\"\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                rules:
                  - comment: Allow TCP traffic to subnet with HTTP servers.
                    policy: allow
                    protocol: tcp
                    destPort: 443
                    destCidr: 192.168.1.0/24
                    srcPort: Any
                    srcCidr: Any
                    syslogEnabled: false
  /networks/{networkId}/appliance/firewall/l7FirewallRules/applicationCategories:
    get:
      tags:
        - >-
          PRODUCTS > Appliance > Configure > Firewall > L 7 Firewall Rules >
          Application Categories
      summary: >-
        Return the L7 firewall application categories and their associated
        applications for an MX network
      description: >-
        Return the L7 firewall application categories and their associated
        applications for an MX network
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                applicationCategories:
                  - id: meraki:layer7/category/24
                    name: Advertising
                    applications:
                      - id: meraki:layer7/application/5
                        name: Advertising.com
                      - id: meraki:layer7/application/0
                        name: AppNexus
                      - id: meraki:layer7/application/1
                        name: Brightroll
  /networks/{networkId}/appliance/firewall/l7FirewallRules:
    get:
      tags:
        - PRODUCTS > Appliance > Configure > Firewall > L 7 Firewall Rules
      summary: List The MX L 7 Firewall Rules For An MX Network
      description: List the MX L7 firewall rules for an MX network
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                rules:
                  - policy: deny
                    type: application
                    value:
                      id: meraki:layer7/application/67
                  - policy: deny
                    type: applicationCategory
                    value:
                      id: meraki:layer7/category/2
                  - policy: deny
                    type: host
                    value: google.com
                  - policy: deny
                    type: port
                    value: '23'
                  - policy: deny
                    type: ipRange
                    value: 10.11.12.00/24
                  - policy: deny
                    type: ipRange
                    value: 10.11.12.00/24:5555
                  - policy: deny
                    type: blockedCountries
                    value:
                      - AX
                      - CA
                  - policy: deny
                    type: allowedCountries
                    value:
                      - US
    put:
      tags:
        - PRODUCTS > Appliance > Configure > Firewall > L 7 Firewall Rules
      summary: Update The MX L 7 Firewall Rules For An MX Network
      description: |+
        Update the MX L7 firewall rules for an MX network
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        rules| array| An ordered array of the MX L7 firewall rules

        #### Supports Action Batches

        **Resource**|**Operation**
        :-------------: |:-------------:
        `/networks/{networkId}/appliance/firewall/l7FirewallRules` | update

      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"rules\": [\n        {\n            \"policy\":
                \"<string>\",\n            \"type\": \"<string>\",\n           
                \"value\": \"<string>\"\n        },\n        {\n           
                \"policy\": \"<string>\",\n            \"type\":
                \"<string>\",\n            \"value\": \"<string>\"\n       
                }\n    ]\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                rules:
                  - policy: deny
                    type: application
                    value:
                      id: meraki:layer7/application/67
                  - policy: deny
                    type: applicationCategory
                    value:
                      id: meraki:layer7/category/2
                  - policy: deny
                    type: host
                    value: google.com
                  - policy: deny
                    type: port
                    value: '23'
                  - policy: deny
                    type: ipRange
                    value: 10.11.12.00/24
                  - policy: deny
                    type: ipRange
                    value: 10.11.12.00/24:5555
                  - policy: deny
                    type: blockedCountries
                    value:
                      - AX
                      - CA
                  - policy: deny
                    type: allowedCountries
                    value:
                      - US
  /networks/{networkId}/appliance/firewall/oneToManyNatRules:
    get:
      tags:
        - PRODUCTS > Appliance > Configure > Firewall > One To Many Nat Rules
      summary: Return The 1 Many NAT Mapping Rules For An MX Network
      description: Return the 1:Many NAT mapping rules for an MX network
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                rules:
                  - publicIp: 146.11.11.13
                    uplink: internet1
                    portRules:
                      - name: Rule 1
                        protocol: tcp
                        publicPort: '9443'
                        localIp: 192.168.128.1
                        localPort: '443'
                        allowedIps:
                          - any
                      - name: Rule 2
                        protocol: tcp
                        publicPort: '8080'
                        localIp: 192.168.128.1
                        localPort: '80'
                        allowedIps:
                          - 10.82.110.0/24
                          - 10.82.111.0/24
    put:
      tags:
        - PRODUCTS > Appliance > Configure > Firewall > One To Many Nat Rules
      summary: Set The 1 Many NAT Mapping Rules For An MX Network
      description: |
        Set the 1:Many NAT mapping rules for an MX network
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        rules| array| An array of 1:Many nat rules
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"rules\": [\n        {\n            \"publicIp\":
                \"<string>\",\n            \"uplink\":
                \"<string>\",\n            \"portRules\": [\n               
                {\n                    \"name\":
                \"<string>\",\n                    \"protocol\":
                \"<string>\",\n                    \"publicPort\":
                \"<string>\",\n                    \"localIp\":
                \"<string>\",\n                    \"localPort\":
                \"<string>\",\n                    \"allowedIps\":
                [\n                       
                \"<string>\",\n                       
                \"<string>\"\n                    ]\n               
                },\n                {\n                    \"name\":
                \"<string>\",\n                    \"protocol\":
                \"<string>\",\n                    \"publicPort\":
                \"<string>\",\n                    \"localIp\":
                \"<string>\",\n                    \"localPort\":
                \"<string>\",\n                    \"allowedIps\":
                [\n                       
                \"<string>\",\n                       
                \"<string>\"\n                    ]\n               
                }\n            ]\n        },\n        {\n           
                \"publicIp\": \"<string>\",\n            \"uplink\":
                \"<string>\",\n            \"portRules\": [\n               
                {\n                    \"name\":
                \"<string>\",\n                    \"protocol\":
                \"<string>\",\n                    \"publicPort\":
                \"<string>\",\n                    \"localIp\":
                \"<string>\",\n                    \"localPort\":
                \"<string>\",\n                    \"allowedIps\":
                [\n                       
                \"<string>\",\n                       
                \"<string>\"\n                    ]\n               
                },\n                {\n                    \"name\":
                \"<string>\",\n                    \"protocol\":
                \"<string>\",\n                    \"publicPort\":
                \"<string>\",\n                    \"localIp\":
                \"<string>\",\n                    \"localPort\":
                \"<string>\",\n                    \"allowedIps\":
                [\n                       
                \"<string>\",\n                       
                \"<string>\"\n                    ]\n               
                }\n            ]\n        }\n    ]\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                rules:
                  - publicIp: 146.11.11.13
                    uplink: internet1
                    portRules:
                      - name: Rule 1
                        protocol: tcp
                        publicPort: '9443'
                        localIp: 192.168.128.1
                        localPort: '443'
                        allowedIps:
                          - any
                      - name: Rule 2
                        protocol: tcp
                        publicPort: '8080'
                        localIp: 192.168.128.1
                        localPort: '80'
                        allowedIps:
                          - 10.82.110.0/24
                          - 10.82.111.0/24
  /networks/{networkId}/appliance/firewall/oneToOneNatRules:
    get:
      tags:
        - PRODUCTS > Appliance > Configure > Firewall > One To One Nat Rules
      summary: Return The 1 1 NAT Mapping Rules For An MX Network
      description: Return the 1:1 NAT mapping rules for an MX network
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                rules:
                  - name: Service behind NAT
                    lanIp: 192.168.128.22
                    publicIp: 146.12.3.33
                    uplink: internet1
                    allowedInbound:
                      - protocol: tcp
                        destinationPorts:
                          - '80'
                        allowedIps:
                          - 10.82.112.0/24
                          - 10.82.0.0/16
                      - protocol: udp
                        destinationPorts:
                          - '8080'
                        allowedIps:
                          - 10.81.110.5
                          - 10.81.0.0/16
    put:
      tags:
        - PRODUCTS > Appliance > Configure > Firewall > One To One Nat Rules
      summary: Set The 1 1 NAT Mapping Rules For An MX Network
      description: |
        Set the 1:1 NAT mapping rules for an MX network
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        rules| array| An array of 1:1 nat rules
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"rules\": [\n        {\n            \"lanIp\":
                \"<string>\",\n            \"name\": \"<string>\",\n           
                \"publicIp\": \"<string>\",\n            \"uplink\":
                \"<string>\",\n            \"allowedInbound\":
                [\n                {\n                    \"protocol\":
                \"<string>\",\n                    \"destinationPorts\":
                [\n                       
                \"<string>\",\n                       
                \"<string>\"\n                    ],\n                   
                \"allowedIps\": [\n                       
                \"<string>\",\n                       
                \"<string>\"\n                    ]\n               
                },\n                {\n                    \"protocol\":
                \"<string>\",\n                    \"destinationPorts\":
                [\n                       
                \"<string>\",\n                       
                \"<string>\"\n                    ],\n                   
                \"allowedIps\": [\n                       
                \"<string>\",\n                       
                \"<string>\"\n                    ]\n               
                }\n            ]\n        },\n        {\n            \"lanIp\":
                \"<string>\",\n            \"name\": \"<string>\",\n           
                \"publicIp\": \"<string>\",\n            \"uplink\":
                \"<string>\",\n            \"allowedInbound\":
                [\n                {\n                    \"protocol\":
                \"<string>\",\n                    \"destinationPorts\":
                [\n                       
                \"<string>\",\n                       
                \"<string>\"\n                    ],\n                   
                \"allowedIps\": [\n                       
                \"<string>\",\n                       
                \"<string>\"\n                    ]\n               
                },\n                {\n                    \"protocol\":
                \"<string>\",\n                    \"destinationPorts\":
                [\n                       
                \"<string>\",\n                       
                \"<string>\"\n                    ],\n                   
                \"allowedIps\": [\n                       
                \"<string>\",\n                       
                \"<string>\"\n                    ]\n               
                }\n            ]\n        }\n    ]\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                rules:
                  - name: Service behind NAT
                    lanIp: 192.168.128.22
                    publicIp: 146.12.3.33
                    uplink: internet1
                    allowedInbound:
                      - protocol: tcp
                        destinationPorts:
                          - '80'
                        allowedIps:
                          - 10.82.112.0/24
                          - 10.82.0.0/16
                      - protocol: udp
                        destinationPorts:
                          - '8080'
                        allowedIps:
                          - 10.81.110.5
                          - 10.81.0.0/16
  /networks/{networkId}/appliance/firewall/portForwardingRules:
    get:
      tags:
        - PRODUCTS > Appliance > Configure > Firewall > Port Forwarding Rules
      summary: Return The Port Forwarding Rules For An MX Network
      description: Return the port forwarding rules for an MX network
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                rules:
                  - lanIp: 192.168.128.1
                    allowedIps:
                      - any
                    name: Description of Port Forwarding Rule
                    protocol: tcp
                    publicPort: 8100-8101
                    localPort: 442-443
                    uplink: both
    put:
      tags:
        - PRODUCTS > Appliance > Configure > Firewall > Port Forwarding Rules
      summary: Update The Port Forwarding Rules For An MX Network
      description: |
        Update the port forwarding rules for an MX network
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        rules| array| An array of port forwarding params
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"rules\": [\n        {\n            \"lanIp\":
                \"<string>\",\n            \"publicPort\":
                \"<string>\",\n            \"localPort\":
                \"<string>\",\n            \"allowedIps\": [\n               
                \"<string>\",\n                \"<string>\"\n           
                ],\n            \"protocol\": \"<string>\",\n           
                \"name\": \"<string>\",\n            \"uplink\":
                \"<string>\"\n        },\n        {\n            \"lanIp\":
                \"<string>\",\n            \"publicPort\":
                \"<string>\",\n            \"localPort\":
                \"<string>\",\n            \"allowedIps\": [\n               
                \"<string>\",\n                \"<string>\"\n           
                ],\n            \"protocol\": \"<string>\",\n           
                \"name\": \"<string>\",\n            \"uplink\":
                \"<string>\"\n        }\n    ]\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                rules:
                  - lanIp: 192.168.128.1
                    allowedIps:
                      - any
                    name: Description of Port Forwarding Rule
                    protocol: tcp
                    publicPort: 8100-8101
                    localPort: 442-443
                    uplink: both
  /networks/{networkId}/appliance/ports:
    get:
      tags:
        - PRODUCTS > Appliance > Configure > Ports
      summary: List Per Port VLAN Settings For All Ports Of A MX
      description: List per-port VLAN settings for all ports of a MX.
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - number: 1
                  enabled: true
                  type: access
                  dropUntaggedTraffic: false
                  vlan: 3
                  accessPolicy: open
  /networks/{networkId}/appliance/ports/{portId}:
    get:
      tags:
        - PRODUCTS > Appliance > Configure > Ports
      summary: Return Per Port VLAN Settings For A Single MX Port
      description: Return per-port VLAN settings for a single MX port.
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: portId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{portId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                number: 1
                enabled: true
                type: access
                dropUntaggedTraffic: false
                vlan: 3
                accessPolicy: open
    put:
      tags:
        - PRODUCTS > Appliance > Configure > Ports
      summary: Update The Per Port VLAN Settings For A Single MX Port
      description: >+
        Update the per-port VLAN settings for a single MX port.
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        enabled| boolean| The status of the port

        dropUntaggedTraffic| boolean| Trunk port can Drop all Untagged traffic.
        When true, no VLAN is required. Access ports cannot have
        dropUntaggedTraffic set to true.

        type| string| The type of the port: 'access' or 'trunk'.

        vlan| integer| Native VLAN when the port is in Trunk mode. Access VLAN
        when the port is in Access mode.

        allowedVlans| string| Comma-delimited list of the VLAN ID's allowed on
        the port, or 'all' to permit all VLAN's on the port.

        accessPolicy| string| The name of the policy. Only applicable to Access
        ports. Valid values are: 'open', '8021x-radius', 'mac-radius',
        'hybris-radius' for MX64 or Z3 or any MX supporting the per port
        authentication feature. Otherwise, 'open' is the only valid value and
        'open' is the default value if the field is missing.


        #### Supports Action Batches


        **Resource**|**Operation**

        :-------------: |:-------------:

        `/networks/{networkId}/appliance/ports/{portId}` | update

      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"enabled\": \"<boolean>\",\n   
                \"dropUntaggedTraffic\": \"<boolean>\",\n    \"type\":
                \"<string>\",\n    \"vlan\": \"<integer>\",\n   
                \"allowedVlans\": \"<string>\",\n    \"accessPolicy\":
                \"<string>\"\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: portId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{portId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                number: 1
                enabled: true
                type: access
                dropUntaggedTraffic: false
                vlan: 3
                accessPolicy: open
  /networks/{networkId}/appliance/security/intrusion:
    get:
      tags:
        - PRODUCTS > Appliance > Configure > Security > Intrusion
      summary: Returns All Supported Intrusion Settings For An MX Network
      description: Returns all supported intrusion settings for an MX network
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                mode: prevention
                idsRulesets: balanced
                protectedNetworks:
                  useDefault: false
                  includedCidr:
                    - 10.0.0.0/8
                    - 127.0.0.0/8
                    - 169.254.0.0/16
                    - 172.16.0.0/12
                  excludedCidr:
                    - 10.0.0.0/8
                    - 127.0.0.0/8
    put:
      tags:
        - PRODUCTS > Appliance > Configure > Security > Intrusion
      summary: Set The Supported Intrusion Settings For An MX Network
      description: >
        Set the supported intrusion settings for an MX network
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        mode| string| Set mode to 'disabled'/'detection'/'prevention' (optional
        - omitting will leave current config unchanged)

        idsRulesets| string| Set the detection ruleset
        'connectivity'/'balanced'/'security' (optional - omitting will leave
        current config unchanged). Default value is 'balanced' if none currently
        saved

        protectedNetworks| object| Set the included/excluded networks from the
        intrusion engine (optional - omitting will leave current config
        unchanged). This is available only in 'passthrough' mode
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"mode\": \"<string>\",\n    \"idsRulesets\":
                \"<string>\",\n    \"protectedNetworks\": {\n       
                \"useDefault\": \"<boolean>\",\n        \"includedCidr\":
                [\n            \"<string>\",\n            \"<string>\"\n       
                ],\n        \"excludedCidr\": [\n           
                \"<string>\",\n            \"<string>\"\n        ]\n    }\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                mode: prevention
                idsRulesets: balanced
                protectedNetworks:
                  useDefault: false
                  includedCidr:
                    - 10.0.0.0/8
                    - 127.0.0.0/8
                    - 169.254.0.0/16
                    - 172.16.0.0/12
                  excludedCidr:
                    - 10.0.0.0/8
                    - 127.0.0.0/8
  /organizations/{organizationId}/appliance/security/intrusion:
    get:
      tags:
        - PRODUCTS > Appliance > Configure > Security > Intrusion
      summary: Returns All Supported Intrusion Settings For An Organization
      description: Returns all supported intrusion settings for an organization
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: organizationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{organizationId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                allowedRules:
                  - ruleId: meraki:intrusion/snort/GID/01/SID/688
                    message: SQL sa login failed
                  - ruleId: meraki:intrusion/snort/GID/01/SID/5805
                    message: >-
                      MALWARE-OTHER Trackware myway speedbar runtime detection -
                      switch engines
    put:
      tags:
        - PRODUCTS > Appliance > Configure > Security > Intrusion
      summary: Sets Supported Intrusion Settings For An Organization
      description: |
        Sets supported intrusion settings for an organization
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        allowedRules| array| Sets a list of specific SNORT signatures to allow
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"allowedRules\": [\n        {\n            \"ruleId\":
                \"<string>\",\n            \"message\": \"<string>\"\n       
                },\n        {\n            \"ruleId\":
                \"<string>\",\n            \"message\": \"<string>\"\n       
                }\n    ]\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: organizationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{organizationId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                allowedRules:
                  - ruleId: meraki:intrusion/snort/GID/01/SID/688
                    message: SQL sa login failed
                  - ruleId: meraki:intrusion/snort/GID/01/SID/5805
                    message: >-
                      MALWARE-OTHER Trackware myway speedbar runtime detection -
                      switch engines
  /networks/{networkId}/appliance/security/malware:
    get:
      tags:
        - PRODUCTS > Appliance > Configure > Security > Malware
      summary: Returns All Supported Malware Settings For An MX Network
      description: Returns all supported malware settings for an MX network
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                mode: enabled
                allowedUrls:
                  - url: example.org
                    comment: allow example.org
                  - url: help.com.au
                    comment: allow help.com.au
                allowedFiles:
                  - sha256: >-
                      e82c5f7d75004727e1f3b94426b9a11c8bc4c312a9170ac9a73abace40aef503
                    comment: allow ZIP file
    put:
      tags:
        - PRODUCTS > Appliance > Configure > Security > Malware
      summary: Set The Supported Malware Settings For An MX Network
      description: >
        Set the supported malware settings for an MX network
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        mode| string| Set mode to 'enabled' to enable malware prevention,
        otherwise 'disabled'

        allowedUrls| array| The urls that should be permitted by the malware
        detection engine. If omitted, the current config will remain unchanged.
        This is available only if your network supports AMP allow listing

        allowedFiles| array| The sha256 digests of files that should be
        permitted by the malware detection engine. If omitted, the current
        config will remain unchanged. This is available only if your network
        supports AMP allow listing
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"mode\": \"<string>\",\n    \"allowedUrls\": [\n       
                {\n            \"url\": \"<string>\",\n            \"comment\":
                \"<string>\"\n        },\n        {\n            \"url\":
                \"<string>\",\n            \"comment\": \"<string>\"\n       
                }\n    ],\n    \"allowedFiles\": [\n        {\n           
                \"sha256\": \"<string>\",\n            \"comment\":
                \"<string>\"\n        },\n        {\n            \"sha256\":
                \"<string>\",\n            \"comment\": \"<string>\"\n       
                }\n    ]\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                mode: enabled
                allowedUrls:
                  - url: example.org
                    comment: allow example.org
                  - url: help.com.au
                    comment: allow help.com.au
                allowedFiles:
                  - sha256: >-
                      e82c5f7d75004727e1f3b94426b9a11c8bc4c312a9170ac9a73abace40aef503
                    comment: allow ZIP file
  /networks/{networkId}/appliance/settings:
    get:
      tags:
        - PRODUCTS > Appliance > Configure > Settings
      summary: Return the appliance settings for a network
      description: Return the appliance settings for a network
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                clientTrackingMethod: MAC address
  /networks/{networkId}/appliance/singleLan:
    get:
      tags:
        - PRODUCTS > Appliance > Configure > Single Lan
      summary: Return Single LAN Configuration
      description: Return single LAN configuration
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                subnet: 192.168.1.0/24
                applianceIp: 192.168.1.2
    put:
      tags:
        - PRODUCTS > Appliance > Configure > Single Lan
      summary: Update Single LAN Configuration
      description: |+
        Update single LAN configuration
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        subnet| string| The subnet of the single LAN configuration
        applianceIp| string| The appliance IP address of the single LAN

        #### Supports Action Batches

        **Resource**|**Operation**
        :-------------: |:-------------:
        `/networks/{networkId}/appliance/singleLan` | update

      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"subnet\": \"<string>\",\n    \"applianceIp\":
                \"<string>\"\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                subnet: 192.168.1.0/24
                applianceIp: 192.168.1.2
  /networks/{networkId}/appliance/staticRoutes:
    post:
      tags:
        - PRODUCTS > Appliance > Configure > Static Routes
      summary: Add A Static Route For An MX Or Teleworker Network
      description: |
        Add a static route for an MX or teleworker network
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        name| string| The name of the new static route
        subnet| string| The subnet of the static route
        gatewayIp| string| The gateway IP (next hop) of the static route
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"name\": \"<string>\",\n    \"subnet\":
                \"<string>\",\n    \"gatewayIp\": \"<string>\"\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: d7fa4948-7921-4dfa-af6b-ae8b16c20c39
                networkId: N_24329156
                enabled: true
                name: My route
                subnet: 192.168.1.0/24
                gatewayIp: 1.2.3.5
                fixedIpAssignments: {}
                reservedIpRanges: []
    get:
      tags:
        - PRODUCTS > Appliance > Configure > Static Routes
      summary: List The Static Routes For An MX Or Teleworker Network
      description: List the static routes for an MX or teleworker network
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: d7fa4948-7921-4dfa-af6b-ae8b16c20c39
                  networkId: N_24329156
                  enabled: true
                  name: My route
                  subnet: 192.168.1.0/24
                  gatewayIp: 1.2.3.5
                  fixedIpAssignments:
                    '22:33:44:55:66:77':
                      ip: 1.2.3.4
                      name: Some client name
                  reservedIpRanges:
                    - start: 192.168.1.0
                      end: 192.168.1.1
                      comment: A reserved IP range
  /networks/{networkId}/appliance/staticRoutes/{staticRouteId}:
    delete:
      tags:
        - PRODUCTS > Appliance > Configure > Static Routes
      summary: Delete A Static Route From An MX Or Teleworker Network
      description: Delete a static route from an MX or teleworker network
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: staticRouteId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{staticRouteId}}'
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    get:
      tags:
        - PRODUCTS > Appliance > Configure > Static Routes
      summary: Return A Static Route For An MX Or Teleworker Network
      description: Return a static route for an MX or teleworker network
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: staticRouteId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{staticRouteId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: d7fa4948-7921-4dfa-af6b-ae8b16c20c39
                networkId: N_24329156
                enabled: true
                name: My route
                subnet: 192.168.1.0/24
                gatewayIp: 1.2.3.5
                fixedIpAssignments:
                  '22:33:44:55:66:77':
                    ip: 1.2.3.4
                    name: Some client name
                reservedIpRanges:
                  - start: 192.168.1.0
                    end: 192.168.1.1
                    comment: A reserved IP range
    put:
      tags:
        - PRODUCTS > Appliance > Configure > Static Routes
      summary: Update A Static Route For An MX Or Teleworker Network
      description: >
        Update a static route for an MX or teleworker network
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        name| string| The name of the static route

        subnet| string| The subnet of the static route

        gatewayIp| string| The gateway IP (next hop) of the static route

        enabled| boolean| The enabled state of the static route

        fixedIpAssignments| object| The DHCP fixed IP assignments on the static
        route. This should be an object that contains mappings from MAC
        addresses to objects that themselves each contain "ip" and "name" string
        fields. See the sample request/response for more details.

        reservedIpRanges| array| The DHCP reserved IP ranges on the static route
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"name\": \"<string>\",\n    \"subnet\":
                \"<string>\",\n    \"gatewayIp\": \"<string>\",\n   
                \"enabled\": \"<boolean>\",\n    \"fixedIpAssignments\":
                {},\n    \"reservedIpRanges\": [\n        {\n           
                \"start\": \"<string>\",\n            \"end\":
                \"<string>\",\n            \"comment\": \"<string>\"\n       
                },\n        {\n            \"start\": \"<string>\",\n           
                \"end\": \"<string>\",\n            \"comment\":
                \"<string>\"\n        }\n    ]\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: staticRouteId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{staticRouteId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: d7fa4948-7921-4dfa-af6b-ae8b16c20c39
                networkId: N_24329156
                enabled: true
                name: My route
                subnet: 192.168.1.0/24
                gatewayIp: 1.2.3.5
                fixedIpAssignments:
                  '22:33:44:55:66:77':
                    ip: 1.2.3.4
                    name: Some client name
                reservedIpRanges:
                  - start: 192.168.1.0
                    end: 192.168.1.1
                    comment: A reserved IP range
  /networks/{networkId}/appliance/trafficShaping/customPerformanceClasses:
    post:
      tags:
        - >-
          PRODUCTS > Appliance > Configure > Traffic Shaping > Custom
          Performance Classes
      summary: Add A Custom Performance Class For An MX Network
      description: >+
        Add a custom performance class for an MX network
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        name| string| Name of the custom performance class

        maxLatency| integer| Maximum latency in milliseconds

        maxJitter| integer| Maximum jitter in milliseconds

        maxLossPercentage| integer| Maximum percentage of packet loss


        #### Supports Action Batches


        **Resource**|**Operation**

        :-------------: |:-------------:

        `/networks/{networkId}/appliance/trafficShaping/customPerformanceClasses`
        | create

      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"name\": \"<string>\",\n    \"maxLatency\":
                \"<integer>\",\n    \"maxJitter\": \"<integer>\",\n   
                \"maxLossPercentage\": \"<integer>\"\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                customPerformanceClassId: '123'
                name: myCustomPerformanceClass
                maxLatency: 100
                maxJitter: 100
                maxLossPercentage: 5
    get:
      tags:
        - >-
          PRODUCTS > Appliance > Configure > Traffic Shaping > Custom
          Performance Classes
      summary: List All Custom Performance Classes For An MX Network
      description: List all custom performance classes for an MX network
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - customPerformanceClassId: '123'
                  name: myCustomPerformanceClass
                  maxLatency: 100
                  maxJitter: 100
                  maxLossPercentage: 5
  /networks/{networkId}/appliance/trafficShaping/customPerformanceClasses/{customPerformanceClassId}:
    delete:
      tags:
        - >-
          PRODUCTS > Appliance > Configure > Traffic Shaping > Custom
          Performance Classes
      summary: Delete A Custom Performance Class From An MX Network
      description: >+
        Delete a custom performance class from an MX network

        #### Supports Action Batches


        **Resource**|**Operation**

        :-------------: |:-------------:

        `/networks/{networkId}/appliance/trafficShaping/customPerformanceClasses/{customPerformanceClassId}`
        | destroy

      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: customPerformanceClassId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{customPerformanceClassId}}'
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    get:
      tags:
        - >-
          PRODUCTS > Appliance > Configure > Traffic Shaping > Custom
          Performance Classes
      summary: Return A Custom Performance Class For An MX Network
      description: Return a custom performance class for an MX network
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: customPerformanceClassId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{customPerformanceClassId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                customPerformanceClassId: '123'
                name: myCustomPerformanceClass
                maxLatency: 100
                maxJitter: 100
                maxLossPercentage: 5
    put:
      tags:
        - >-
          PRODUCTS > Appliance > Configure > Traffic Shaping > Custom
          Performance Classes
      summary: Update A Custom Performance Class For An MX Network
      description: >+
        Update a custom performance class for an MX network
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        name| string| Name of the custom performance class

        maxLatency| integer| Maximum latency in milliseconds

        maxJitter| integer| Maximum jitter in milliseconds

        maxLossPercentage| integer| Maximum percentage of packet loss


        #### Supports Action Batches


        **Resource**|**Operation**

        :-------------: |:-------------:

        `/networks/{networkId}/appliance/trafficShaping/customPerformanceClasses/{customPerformanceClassId}`
        | update

      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"name\": \"<string>\",\n    \"maxLatency\":
                \"<integer>\",\n    \"maxJitter\": \"<integer>\",\n   
                \"maxLossPercentage\": \"<integer>\"\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: customPerformanceClassId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{customPerformanceClassId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                customPerformanceClassId: '123'
                name: myCustomPerformanceClass
                maxLatency: 100
                maxJitter: 100
                maxLossPercentage: 5
  /networks/{networkId}/appliance/trafficShaping/rules:
    get:
      tags:
        - PRODUCTS > Appliance > Configure > Traffic Shaping > Rules
      summary: Display The Traffic Shaping Settings Rules For An MX Network
      description: Display the traffic shaping settings rules for an MX network
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                defaultRulesEnabled: true
                rules:
                  - definitions:
                      - type: host
                        value: google.com
                      - type: port
                        value: '9090'
                      - type: ipRange
                        value: 192.1.0.0
                      - type: ipRange
                        value: 192.1.0.0/16
                      - type: ipRange
                        value: 10.1.0.0/16:80
                      - type: localNet
                        value: 192.168.0.0/16
                      - type: applicationCategory
                        value:
                          id: meraki:layer7/category/2
                          name: Blogging
                      - type: application
                        value:
                          id: meraki:layer7/application/133
                          name: Battle.net
                    perClientBandwidthLimits:
                      settings: custom
                      bandwidthLimits:
                        limitUp: 1000000
                        limitDown: 1000000
                    dscpTagValue: null
                    priority: normal
    put:
      tags:
        - PRODUCTS > Appliance > Configure > Traffic Shaping > Rules
      summary: Update The Traffic Shaping Settings Rules For An MX Network
      description: >+
        Update the traffic shaping settings rules for an MX network
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        defaultRulesEnabled| boolean| Whether default traffic shaping rules are
        enabled (true) or disabled (false). There are 4 default rules, which can
        be seen on your network's traffic shaping page. Note that default rules
        count against the rule limit of 8.

        rules| array|     An array of traffic shaping rules. Rules are applied
        in the order that
            they are specified in. An empty list (or null) means no rules. Note that
            you are allowed a maximum of 8 rules.


        #### Supports Action Batches


        **Resource**|**Operation**

        :-------------: |:-------------:

        `/networks/{networkId}/appliance/trafficShaping/rules` | update

      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"defaultRulesEnabled\": \"<boolean>\",\n    \"rules\":
                [\n        {\n            \"definitions\": {\n               
                \"type\": \"array\",\n                \"description\": \"    A
                list of objects describing the definitions of your traffic
                shaping rule. At least one definition is
                required.\\n\",\n                \"maxItems\":
                2,\n                \"minItems\": 2,\n                \"items\":
                {\n                    \"type\":
                \"object\",\n                    \"required\":
                [\n                        \"type\",\n                       
                \"value\"\n                    ],\n                   
                \"properties\": {\n                        \"type\":
                {\n                            \"type\":
                \"string\",\n                            \"enum\":
                [\n                               
                \"application\",\n                               
                \"applicationCategory\",\n                               
                \"host\",\n                               
                \"port\",\n                               
                \"ipRange\",\n                               
                \"localNet\"\n                           
                ],\n                            \"description\": \"The type of
                definition. Can be one of 'application', 'applicationCategory',
                'host', 'port', 'ipRange' or
                'localNet'.\",\n                            \"default\":
                \"<string>\"\n                       
                },\n                        \"value\":
                {\n                            \"type\":
                \"string\",\n                            \"description\": \"   
                If \\\"type\\\" is 'host', 'port', 'ipRange' or 'localNet', then
                \\\"value\\\" must be a string, matching either\\n    a hostname
                (e.g. \\\"somesite.com\\\"), a port (e.g. 8080), or an IP range
                (\\\"192.1.0.0\\\",\\n    \\\"192.1.0.0/16\\\", or
                \\\"10.1.0.0/16:80\\\"). 'localNet' also supports CIDR notation,
                excluding\\n    custom ports.\\n     If \\\"type\\\" is
                'application' or 'applicationCategory', then \\\"value\\\" must
                be an object\\n    with the structure { \\\"id\\\":
                \\\"meraki:layer7/...\\\" }, where \\\"id\\\" is the application
                category or\\n    application ID (for a list of IDs for your
                network, use the trafficShaping/applicationCategories\\n   
                endpoint).\\n\",\n                            \"default\":
                \"<string>\"\n                        }\n                   
                }\n                }\n            },\n           
                \"perClientBandwidthLimits\": {\n                \"settings\":
                \"<string>\",\n                \"bandwidthLimits\":
                {\n                    \"limitUp\":
                \"<integer>\",\n                    \"limitDown\":
                \"<integer>\"\n                }\n            },\n           
                \"dscpTagValue\": \"<integer>\",\n            \"priority\":
                \"<string>\"\n        },\n        {\n           
                \"definitions\": {\n                \"type\":
                \"array\",\n                \"description\": \"    A list of
                objects describing the definitions of your traffic shaping rule.
                At least one definition is required.\\n\",\n               
                \"maxItems\": 2,\n                \"minItems\":
                2,\n                \"items\": {\n                    \"type\":
                \"object\",\n                    \"required\":
                [\n                        \"type\",\n                       
                \"value\"\n                    ],\n                   
                \"properties\": {\n                        \"type\":
                {\n                            \"type\":
                \"string\",\n                            \"enum\":
                [\n                               
                \"application\",\n                               
                \"applicationCategory\",\n                               
                \"host\",\n                               
                \"port\",\n                               
                \"ipRange\",\n                               
                \"localNet\"\n                           
                ],\n                            \"description\": \"The type of
                definition. Can be one of 'application', 'applicationCategory',
                'host', 'port', 'ipRange' or
                'localNet'.\",\n                            \"default\":
                \"<string>\"\n                       
                },\n                        \"value\":
                {\n                            \"type\":
                \"string\",\n                            \"description\": \"   
                If \\\"type\\\" is 'host', 'port', 'ipRange' or 'localNet', then
                \\\"value\\\" must be a string, matching either\\n    a hostname
                (e.g. \\\"somesite.com\\\"), a port (e.g. 8080), or an IP range
                (\\\"192.1.0.0\\\",\\n    \\\"192.1.0.0/16\\\", or
                \\\"10.1.0.0/16:80\\\"). 'localNet' also supports CIDR notation,
                excluding\\n    custom ports.\\n     If \\\"type\\\" is
                'application' or 'applicationCategory', then \\\"value\\\" must
                be an object\\n    with the structure { \\\"id\\\":
                \\\"meraki:layer7/...\\\" }, where \\\"id\\\" is the application
                category or\\n    application ID (for a list of IDs for your
                network, use the trafficShaping/applicationCategories\\n   
                endpoint).\\n\",\n                            \"default\":
                \"<string>\"\n                        }\n                   
                }\n                }\n            },\n           
                \"perClientBandwidthLimits\": {\n                \"settings\":
                \"<string>\",\n                \"bandwidthLimits\":
                {\n                    \"limitUp\":
                \"<integer>\",\n                    \"limitDown\":
                \"<integer>\"\n                }\n            },\n           
                \"dscpTagValue\": \"<integer>\",\n            \"priority\":
                \"<string>\"\n        }\n    ]\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                defaultRulesEnabled: true
                rules:
                  - definitions:
                      - type: host
                        value: google.com
                      - type: port
                        value: '9090'
                      - type: ipRange
                        value: 192.1.0.0
                      - type: ipRange
                        value: 192.1.0.0/16
                      - type: ipRange
                        value: 10.1.0.0/16:80
                      - type: localNet
                        value: 192.168.0.0/16
                      - type: applicationCategory
                        value:
                          id: meraki:layer7/category/2
                          name: Blogging
                      - type: application
                        value:
                          id: meraki:layer7/application/133
                          name: Battle.net
                    perClientBandwidthLimits:
                      settings: custom
                      bandwidthLimits:
                        limitUp: 1000000
                        limitDown: 1000000
                    dscpTagValue: null
                    priority: normal
  /networks/{networkId}/appliance/trafficShaping/uplinkSelection:
    get:
      tags:
        - PRODUCTS > Appliance > Configure > Traffic Shaping > Uplink Selection
      summary: Show Uplink Selection Settings For An MX Network
      description: Show uplink selection settings for an MX network
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                activeActiveAutoVpnEnabled: true
                defaultUplink: wan1
                loadBalancingEnabled: true
                wanTrafficUplinkPreferences:
                  - trafficFilters:
                      - type: custom
                        value:
                          protocol: tcp
                          source:
                            port: any
                            cidr: 192.168.1.0/24
                          destination:
                            port: any
                            cidr: any
                    preferredUplink: wan2
                  - trafficFilters:
                      - type: custom
                        value:
                          protocol: tcp
                          source:
                            port: 1-1024
                            vlan: 10
                            host: 254
                          destination:
                            port: any
                            cidr: any
                    preferredUplink: wan1
                vpnTrafficUplinkPreferences:
                  - trafficFilters:
                      - type: applicationCategory
                        value:
                          id: meraki:layer7/category/1
                      - type: application
                        value:
                          id: meraki:layer7/application/33
                      - type: custom
                        value:
                          protocol: tcp
                          source:
                            port: any
                            cidr: 192.168.1.0/24
                          destination:
                            port: any
                            cidr: any
                      - type: custom
                        value:
                          protocol: tcp
                          source:
                            port: any
                            cidr: any
                          destination:
                            port: any
                            network: L_23456789
                            vlan: 20
                            host: 200
                      - type: custom
                        value:
                          protocol: tcp
                          source:
                            port: any
                            cidr: any
                          destination:
                            port: 1-1024
                            fqdn: www.google.com
                    preferredUplink: wan2
                    failOverCriterion: poorPerformance
                    performanceClass:
                      type: custom
                      customPerformanceClassId: '123456'
                  - trafficFilters:
                      - type: application
                        value:
                          id: meraki:layer7/application/9
                    preferredUplink: defaultUplink
                  - trafficFilters:
                      - type: application
                        value:
                          id: meraki:layer7/application/106
                    preferredUplink: bestForVoIP
                  - trafficFilters:
                      - type: application
                        value:
                          id: meraki:layer7/application/107
                    preferredUplink: loadBalancing
                    performanceClass:
                      type: builtin
                      builtinPerformanceClassName: VoIP
                  - trafficFilters:
                      - type: application
                        value:
                          id: meraki:layer7/application/162
                    preferredUplink: loadBalancing
                    performanceClass:
                      type: custom
                      customPerformanceClassId: '123456'
                  - trafficFilters:
                      - type: application
                        value:
                          id: meraki:layer7/application/168
                    preferredUplink: wan2
                    failOverCriterion: poorPerformance
                    performanceClass:
                      type: builtin
                      builtinPerformanceClassName: VoIP
                  - trafficFilters:
                      - type: application
                        value:
                          id: meraki:layer7/application/171
                    preferredUplink: wan2
                    failOverCriterion: poorPerformance
                    performanceClass:
                      type: custom
                      customPerformanceClassId: '123456'
    put:
      tags:
        - PRODUCTS > Appliance > Configure > Traffic Shaping > Uplink Selection
      summary: Update Uplink Selection Settings For An MX Network
      description: >+
        Update uplink selection settings for an MX network
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        activeActiveAutoVpnEnabled| boolean| Toggle for enabling or disabling
        active-active AutoVPN

        defaultUplink| string| The default uplink. Must be one of: 'wan1' or
        'wan2'

        loadBalancingEnabled| boolean| Toggle for enabling or disabling load
        balancing

        wanTrafficUplinkPreferences| array| Array of uplink preference rules for
        WAN traffic

        vpnTrafficUplinkPreferences| array| Array of uplink preference rules for
        VPN traffic


        #### Supports Action Batches


        **Resource**|**Operation**

        :-------------: |:-------------:

        `/networks/{networkId}/appliance/trafficShaping/uplinkSelection` |
        update

      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"activeActiveAutoVpnEnabled\": \"<boolean>\",\n   
                \"defaultUplink\": \"<string>\",\n    \"loadBalancingEnabled\":
                \"<boolean>\",\n    \"wanTrafficUplinkPreferences\": [\n       
                {\n            \"trafficFilters\": [\n               
                {\n                    \"type\":
                \"<string>\",\n                    \"value\":
                {\n                        \"source\":
                {\n                            \"port\":
                \"<string>\",\n                            \"cidr\":
                \"<string>\",\n                            \"vlan\":
                \"<integer>\",\n                            \"host\":
                \"<integer>\"\n                       
                },\n                        \"destination\":
                {\n                            \"port\":
                \"<string>\",\n                            \"cidr\":
                \"<string>\"\n                       
                },\n                        \"protocol\":
                \"<string>\"\n                    }\n               
                },\n                {\n                    \"type\":
                \"<string>\",\n                    \"value\":
                {\n                        \"source\":
                {\n                            \"port\":
                \"<string>\",\n                            \"cidr\":
                \"<string>\",\n                            \"vlan\":
                \"<integer>\",\n                            \"host\":
                \"<integer>\"\n                       
                },\n                        \"destination\":
                {\n                            \"port\":
                \"<string>\",\n                            \"cidr\":
                \"<string>\"\n                       
                },\n                        \"protocol\":
                \"<string>\"\n                    }\n               
                }\n            ],\n            \"preferredUplink\":
                \"<string>\"\n        },\n        {\n           
                \"trafficFilters\": [\n                {\n                   
                \"type\": \"<string>\",\n                    \"value\":
                {\n                        \"source\":
                {\n                            \"port\":
                \"<string>\",\n                            \"cidr\":
                \"<string>\",\n                            \"vlan\":
                \"<integer>\",\n                            \"host\":
                \"<integer>\"\n                       
                },\n                        \"destination\":
                {\n                            \"port\":
                \"<string>\",\n                            \"cidr\":
                \"<string>\"\n                       
                },\n                        \"protocol\":
                \"<string>\"\n                    }\n               
                },\n                {\n                    \"type\":
                \"<string>\",\n                    \"value\":
                {\n                        \"source\":
                {\n                            \"port\":
                \"<string>\",\n                            \"cidr\":
                \"<string>\",\n                            \"vlan\":
                \"<integer>\",\n                            \"host\":
                \"<integer>\"\n                       
                },\n                        \"destination\":
                {\n                            \"port\":
                \"<string>\",\n                            \"cidr\":
                \"<string>\"\n                       
                },\n                        \"protocol\":
                \"<string>\"\n                    }\n               
                }\n            ],\n            \"preferredUplink\":
                \"<string>\"\n        }\n    ],\n   
                \"vpnTrafficUplinkPreferences\": [\n        {\n           
                \"trafficFilters\": [\n                {\n                   
                \"type\": \"<string>\",\n                    \"value\":
                {\n                        \"id\":
                \"<string>\",\n                        \"protocol\":
                \"<string>\",\n                        \"source\":
                {\n                            \"port\":
                \"<string>\",\n                            \"cidr\":
                \"<string>\",\n                            \"network\":
                \"<string>\",\n                            \"vlan\":
                \"<integer>\",\n                            \"host\":
                \"<integer>\"\n                       
                },\n                        \"destination\":
                {\n                            \"port\":
                \"<string>\",\n                            \"cidr\":
                \"<string>\",\n                            \"network\":
                \"<string>\",\n                            \"vlan\":
                \"<integer>\",\n                            \"host\":
                \"<integer>\",\n                            \"fqdn\":
                \"<string>\"\n                        }\n                   
                }\n                },\n                {\n                   
                \"type\": \"<string>\",\n                    \"value\":
                {\n                        \"id\":
                \"<string>\",\n                        \"protocol\":
                \"<string>\",\n                        \"source\":
                {\n                            \"port\":
                \"<string>\",\n                            \"cidr\":
                \"<string>\",\n                            \"network\":
                \"<string>\",\n                            \"vlan\":
                \"<integer>\",\n                            \"host\":
                \"<integer>\"\n                       
                },\n                        \"destination\":
                {\n                            \"port\":
                \"<string>\",\n                            \"cidr\":
                \"<string>\",\n                            \"network\":
                \"<string>\",\n                            \"vlan\":
                \"<integer>\",\n                            \"host\":
                \"<integer>\",\n                            \"fqdn\":
                \"<string>\"\n                        }\n                   
                }\n                }\n            ],\n           
                \"preferredUplink\": \"<string>\",\n           
                \"failOverCriterion\": \"<string>\",\n           
                \"performanceClass\": {\n                \"type\":
                \"<string>\",\n                \"builtinPerformanceClassName\":
                \"<string>\",\n                \"customPerformanceClassId\":
                \"<string>\"\n            }\n        },\n        {\n           
                \"trafficFilters\": [\n                {\n                   
                \"type\": \"<string>\",\n                    \"value\":
                {\n                        \"id\":
                \"<string>\",\n                        \"protocol\":
                \"<string>\",\n                        \"source\":
                {\n                            \"port\":
                \"<string>\",\n                            \"cidr\":
                \"<string>\",\n                            \"network\":
                \"<string>\",\n                            \"vlan\":
                \"<integer>\",\n                            \"host\":
                \"<integer>\"\n                       
                },\n                        \"destination\":
                {\n                            \"port\":
                \"<string>\",\n                            \"cidr\":
                \"<string>\",\n                            \"network\":
                \"<string>\",\n                            \"vlan\":
                \"<integer>\",\n                            \"host\":
                \"<integer>\",\n                            \"fqdn\":
                \"<string>\"\n                        }\n                   
                }\n                },\n                {\n                   
                \"type\": \"<string>\",\n                    \"value\":
                {\n                        \"id\":
                \"<string>\",\n                        \"protocol\":
                \"<string>\",\n                        \"source\":
                {\n                            \"port\":
                \"<string>\",\n                            \"cidr\":
                \"<string>\",\n                            \"network\":
                \"<string>\",\n                            \"vlan\":
                \"<integer>\",\n                            \"host\":
                \"<integer>\"\n                       
                },\n                        \"destination\":
                {\n                            \"port\":
                \"<string>\",\n                            \"cidr\":
                \"<string>\",\n                            \"network\":
                \"<string>\",\n                            \"vlan\":
                \"<integer>\",\n                            \"host\":
                \"<integer>\",\n                            \"fqdn\":
                \"<string>\"\n                        }\n                   
                }\n                }\n            ],\n           
                \"preferredUplink\": \"<string>\",\n           
                \"failOverCriterion\": \"<string>\",\n           
                \"performanceClass\": {\n                \"type\":
                \"<string>\",\n                \"builtinPerformanceClassName\":
                \"<string>\",\n                \"customPerformanceClassId\":
                \"<string>\"\n            }\n        }\n    ]\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                activeActiveAutoVpnEnabled: true
                defaultUplink: wan1
                loadBalancingEnabled: true
                wanTrafficUplinkPreferences:
                  - trafficFilters:
                      - type: custom
                        value:
                          protocol: tcp
                          source:
                            port: any
                            cidr: 192.168.1.0/24
                          destination:
                            port: any
                            cidr: any
                    preferredUplink: wan2
                  - trafficFilters:
                      - type: custom
                        value:
                          protocol: tcp
                          source:
                            port: 1-1024
                            vlan: 10
                            host: 254
                          destination:
                            port: any
                            cidr: any
                    preferredUplink: wan1
                vpnTrafficUplinkPreferences:
                  - trafficFilters:
                      - type: applicationCategory
                        value:
                          id: meraki:layer7/category/1
                      - type: application
                        value:
                          id: meraki:layer7/application/33
                      - type: custom
                        value:
                          protocol: tcp
                          source:
                            port: any
                            cidr: 192.168.1.0/24
                          destination:
                            port: any
                            cidr: any
                      - type: custom
                        value:
                          protocol: tcp
                          source:
                            port: any
                            cidr: any
                          destination:
                            port: any
                            network: L_23456789
                            vlan: 20
                            host: 200
                      - type: custom
                        value:
                          protocol: tcp
                          source:
                            port: any
                            cidr: any
                          destination:
                            port: 1-1024
                            fqdn: www.google.com
                    preferredUplink: wan2
                    failOverCriterion: poorPerformance
                    performanceClass:
                      type: custom
                      customPerformanceClassId: '123456'
                  - trafficFilters:
                      - type: application
                        value:
                          id: meraki:layer7/application/9
                    preferredUplink: defaultUplink
                  - trafficFilters:
                      - type: application
                        value:
                          id: meraki:layer7/application/106
                    preferredUplink: bestForVoIP
                  - trafficFilters:
                      - type: application
                        value:
                          id: meraki:layer7/application/107
                    preferredUplink: loadBalancing
                    performanceClass:
                      type: builtin
                      builtinPerformanceClassName: VoIP
                  - trafficFilters:
                      - type: application
                        value:
                          id: meraki:layer7/application/162
                    preferredUplink: loadBalancing
                    performanceClass:
                      type: custom
                      customPerformanceClassId: '123456'
                  - trafficFilters:
                      - type: application
                        value:
                          id: meraki:layer7/application/168
                    preferredUplink: wan2
                    failOverCriterion: poorPerformance
                    performanceClass:
                      type: builtin
                      builtinPerformanceClassName: VoIP
                  - trafficFilters:
                      - type: application
                        value:
                          id: meraki:layer7/application/171
                    preferredUplink: wan2
                    failOverCriterion: poorPerformance
                    performanceClass:
                      type: custom
                      customPerformanceClassId: '123456'
  /networks/{networkId}/appliance/trafficShaping:
    get:
      tags:
        - PRODUCTS > Appliance > Configure > Traffic Shaping
      summary: Display The Traffic Shaping Settings For An MX Network
      description: Display the traffic shaping settings for an MX network
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                globalBandwidthLimits:
                  limitUp: 2048
                  limitDown: 5120
    put:
      tags:
        - PRODUCTS > Appliance > Configure > Traffic Shaping
      summary: Update The Traffic Shaping Settings For An MX Network
      description: |
        Update the traffic shaping settings for an MX network
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        globalBandwidthLimits| object| Global per-client bandwidth limit
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"globalBandwidthLimits\": {\n        \"limitUp\":
                \"<integer>\",\n        \"limitDown\": \"<integer>\"\n    }\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                globalBandwidthLimits:
                  limitUp: 2048
                  limitDown: 5120
  /networks/{networkId}/appliance/vlans/settings:
    put:
      tags:
        - PRODUCTS > Appliance > Configure > Vlans > Settings
      summary: Enable Disable VLA Ns For The Given Network
      description: >+
        Enable/Disable VLANs for the given network
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        vlansEnabled| boolean| Boolean indicating whether to enable (true) or
        disable (false) VLANs for the network


        #### Supports Action Batches


        **Resource**|**Operation**

        :-------------: |:-------------:

        `/networks/{networkId}/appliance/vlans/settings` | update

      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n    \"vlansEnabled\": \"<boolean>\"\n}"'
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                vlansEnabled: true
    get:
      tags:
        - PRODUCTS > Appliance > Configure > Vlans > Settings
      summary: Returns The Enabled Status Of VLA Ns For The Network
      description: Returns the enabled status of VLANs for the network
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                vlansEnabled: true
  /networks/{networkId}/appliance/vlans:
    post:
      tags:
        - PRODUCTS > Appliance > Configure > Vlans
      summary: Add A VLAN
      description: >+
        Add a VLAN
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        id| string| The VLAN ID of the new VLAN (must be between 1 and 4094)

        name| string| The name of the new VLAN

        subnet| string| The subnet of the VLAN

        applianceIp| string| The local IP of the appliance on the VLAN

        groupPolicyId| string| The id of the desired group policy to apply to
        the VLAN


        #### Supports Action Batches


        **Resource**|**Operation**

        :-------------: |:-------------:

        `/networks/{networkId}/appliance/vlans` | create

      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n   
                \"subnet\": \"<string>\",\n    \"applianceIp\":
                \"<string>\",\n    \"groupPolicyId\": \"<string>\"\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: '1234'
                networkId: N_24329156
                name: My VLAN
                applianceIp: 192.168.1.2
                subnet: 192.168.1.0/24
                groupPolicyId: '101'
                fixedIpAssignments: {}
                reservedIpRanges: []
                dnsNameservers: google_dns
                dhcpHandling: Run a DHCP server
                dhcpLeaseTime: 1 day
                dhcpBootOptionsEnabled: false
                dhcpBootNextServer: null
                dhcpBootFilename: null
                dhcpOptions: []
    get:
      tags:
        - PRODUCTS > Appliance > Configure > Vlans
      summary: List The VLA Ns For An MX Network
      description: List the VLANs for an MX network
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: '1234'
                  networkId: N_24329156
                  name: My VLAN
                  applianceIp: 192.168.1.2
                  subnet: 192.168.1.0/24
                  groupPolicyId: '101'
                  fixedIpAssignments:
                    '22:33:44:55:66:77':
                      ip: 1.2.3.4
                      name: Some client name
                  reservedIpRanges:
                    - start: 192.168.1.0
                      end: 192.168.1.1
                      comment: A reserved IP range
                  dnsNameservers: google_dns
                  dhcpHandling: Run a DHCP server
                  dhcpLeaseTime: 1 day
                  dhcpBootOptionsEnabled: false
                  dhcpBootNextServer: null
                  dhcpBootFilename: null
                  dhcpOptions:
                    - code: 5
                      type: text
                      value: five
  /networks/{networkId}/appliance/vlans/{vlanId}:
    delete:
      tags:
        - PRODUCTS > Appliance > Configure > Vlans
      summary: Delete A VLAN From A Network
      description: |+
        Delete a VLAN from a network
        #### Supports Action Batches

        **Resource**|**Operation**
        :-------------: |:-------------:
        `/networks/{networkId}/appliance/vlans/{vlanId}` | destroy

      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: vlanId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{vlanId}}'
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    get:
      tags:
        - PRODUCTS > Appliance > Configure > Vlans
      summary: Return A VLAN
      description: Return a VLAN
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: vlanId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{vlanId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: '1234'
                networkId: N_24329156
                name: My VLAN
                applianceIp: 192.168.1.2
                subnet: 192.168.1.0/24
                groupPolicyId: '101'
                fixedIpAssignments:
                  '22:33:44:55:66:77':
                    ip: 1.2.3.4
                    name: Some client name
                reservedIpRanges:
                  - start: 192.168.1.0
                    end: 192.168.1.1
                    comment: A reserved IP range
                dnsNameservers: google_dns
                dhcpHandling: Run a DHCP server
                dhcpLeaseTime: 1 day
                dhcpBootOptionsEnabled: false
                dhcpBootNextServer: null
                dhcpBootFilename: null
                dhcpOptions:
                  - code: 5
                    type: text
                    value: five
    put:
      tags:
        - PRODUCTS > Appliance > Configure > Vlans
      summary: Update A VLAN
      description: >+
        Update a VLAN
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        name| string| The name of the VLAN

        subnet| string| The subnet of the VLAN

        applianceIp| string| The local IP of the appliance on the VLAN

        groupPolicyId| string| The id of the desired group policy to apply to
        the VLAN

        vpnNatSubnet| string| The translated VPN subnet if VPN and VPN subnet
        translation are enabled on the VLAN

        dhcpHandling| string| The appliance's handling of DHCP requests on this
        VLAN. One of: 'Run a DHCP server', 'Relay DHCP to another server' or 'Do
        not respond to DHCP requests'

        dhcpRelayServerIps| array| The IPs of the DHCP servers that DHCP
        requests should be relayed to

        dhcpLeaseTime| string| The term of DHCP leases if the appliance is
        running a DHCP server on this VLAN. One of: '30 minutes', '1 hour', '4
        hours', '12 hours', '1 day' or '1 week'

        dhcpBootOptionsEnabled| boolean| Use DHCP boot options specified in
        other properties

        dhcpBootNextServer| string| DHCP boot option to direct boot clients to
        the server to load the boot file from

        dhcpBootFilename| string| DHCP boot option for boot filename

        fixedIpAssignments| object| The DHCP fixed IP assignments on the VLAN.
        This should be an object that contains mappings from MAC addresses to
        objects that themselves each contain "ip" and "name" string fields. See
        the sample request/response for more details.

        reservedIpRanges| array| The DHCP reserved IP ranges on the VLAN

        dnsNameservers| string| The DNS nameservers used for DHCP responses,
        either "upstream_dns", "google_dns", "opendns", or a newline seperated
        string of IP addresses or domain names

        dhcpOptions| array| The list of DHCP options that will be included in
        DHCP responses. Each object in the list should have "code", "type", and
        "value" properties.


        #### Supports Action Batches


        **Resource**|**Operation**

        :-------------: |:-------------:

        `/networks/{networkId}/appliance/vlans/{vlanId}` | update

      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"name\": \"<string>\",\n    \"subnet\":
                \"<string>\",\n    \"applianceIp\": \"<string>\",\n   
                \"groupPolicyId\": \"<string>\",\n    \"vpnNatSubnet\":
                \"<string>\",\n    \"dhcpHandling\": \"<string>\",\n   
                \"dhcpRelayServerIps\": [\n        \"<string>\",\n       
                \"<string>\"\n    ],\n    \"dhcpLeaseTime\": \"<string>\",\n   
                \"dhcpBootOptionsEnabled\": \"<boolean>\",\n   
                \"dhcpBootNextServer\": \"<string>\",\n    \"dhcpBootFilename\":
                \"<string>\",\n    \"fixedIpAssignments\": {},\n   
                \"reservedIpRanges\": [\n        {\n            \"start\":
                \"<string>\",\n            \"end\": \"<string>\",\n           
                \"comment\": \"<string>\"\n        },\n        {\n           
                \"start\": \"<string>\",\n            \"end\":
                \"<string>\",\n            \"comment\": \"<string>\"\n       
                }\n    ],\n    \"dnsNameservers\": \"<string>\",\n   
                \"dhcpOptions\": [\n        {\n            \"code\":
                \"<string>\",\n            \"type\": \"<string>\",\n           
                \"value\": \"<string>\"\n        },\n        {\n           
                \"code\": \"<string>\",\n            \"type\":
                \"<string>\",\n            \"value\": \"<string>\"\n       
                }\n    ]\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: vlanId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{vlanId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: '1234'
                networkId: N_24329156
                name: My VLAN
                applianceIp: 192.168.1.2
                subnet: 192.168.1.0/24
                groupPolicyId: '101'
                fixedIpAssignments:
                  '22:33:44:55:66:77':
                    ip: 1.2.3.4
                    name: Some client name
                reservedIpRanges:
                  - start: 192.168.1.0
                    end: 192.168.1.1
                    comment: A reserved IP range
                dnsNameservers: google_dns
                dhcpHandling: Run a DHCP server
                dhcpLeaseTime: 1 day
                dhcpBootOptionsEnabled: false
                dhcpBootNextServer: null
                dhcpBootFilename: null
                dhcpOptions:
                  - code: 5
                    type: text
                    value: five
  /networks/{networkId}/appliance/vpn/bgp:
    get:
      tags:
        - PRODUCTS > Appliance > Configure > Vpn > Bgp
      summary: Return A Hub BGP Configuration
      description: Return a Hub BGP Configuration
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                enabled: true
                asNumber: 64515
                ibgpHoldTimer: 120
                neighbors:
                  - ip: 10.10.10.22
                    remoteAsNumber: 64343
                    receiveLimit: 120
                    allowTransit: true
                    ebgpHoldTimer: 180
                    ebgpMultihop: 2
    put:
      tags:
        - PRODUCTS > Appliance > Configure > Vpn > Bgp
      summary: Update A Hub BGP Configuration
      description: >+
        Update a Hub BGP Configuration
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        enabled| boolean| Boolean value to enable or disable the BGP
        configuration. When BGP is enabled, the asNumber (ASN) will be
        autopopulated with the preconfigured ASN at other Hubs or a default
        value if there is no ASN configured.

        asNumber| integer| An Autonomous System Number (ASN) is required if you
        are to run BGP and peer with another BGP Speaker outside of the Auto VPN
        domain. This ASN will be applied to the entire Auto VPN domain. The
        entire 4-byte ASN range is supported. So, the ASN must be an integer
        between 1 and 4294967295. When absent, this field is not updated. If no
        value exists then it defaults to 64512.

        ibgpHoldTimer| integer| The IBGP holdtimer in seconds. The IBGP
        holdtimer must be an integer between 12 and 240. When absent, this field
        is not updated. If no value exists then it defaults to 240.

        neighbors| array| List of BGP neighbors. This list replaces the existing
        set of neighbors. When absent, this field is not updated.


        #### Supports Action Batches


        **Resource**|**Operation**

        :-------------: |:-------------:

        `/networks/{networkId}/appliance/vpn/bgp` | update

      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"enabled\": \"<boolean>\",\n    \"asNumber\":
                \"<integer>\",\n    \"ibgpHoldTimer\": \"<integer>\",\n   
                \"neighbors\": [\n        {\n            \"ip\":
                \"<string>\",\n            \"remoteAsNumber\":
                \"<integer>\",\n            \"ebgpHoldTimer\":
                \"<integer>\",\n            \"ebgpMultihop\":
                \"<integer>\",\n            \"receiveLimit\":
                \"<integer>\",\n            \"allowTransit\":
                \"<boolean>\"\n        },\n        {\n            \"ip\":
                \"<string>\",\n            \"remoteAsNumber\":
                \"<integer>\",\n            \"ebgpHoldTimer\":
                \"<integer>\",\n            \"ebgpMultihop\":
                \"<integer>\",\n            \"receiveLimit\":
                \"<integer>\",\n            \"allowTransit\":
                \"<boolean>\"\n        }\n    ]\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                enabled: true
                asNumber: 64515
                ibgpHoldTimer: 120
                neighbors:
                  - ip: 10.10.10.22
                    remoteAsNumber: 64343
                    receiveLimit: 120
                    allowTransit: true
                    ebgpHoldTimer: 180
                    ebgpMultihop: 2
  /networks/{networkId}/appliance/vpn/siteToSiteVpn:
    get:
      tags:
        - PRODUCTS > Appliance > Configure > Vpn > Site To Site Vpn
      summary: Return The Site To Site VPN Settings Of A Network
      description: >-
        Return the site-to-site VPN settings of a network. Only valid for MX
        networks.
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                mode: spoke
                hubs:
                  - hubId: N_4901849
                    useDefaultRoute: true
                  - hubId: N_1892489
                    useDefaultRoute: false
                subnets:
                  - localSubnet: 192.168.1.0/24
                    useVpn: true
                  - localSubnet: 192.168.128.0/24
                    useVpn: true
    put:
      tags:
        - PRODUCTS > Appliance > Configure > Vpn > Site To Site Vpn
      summary: Update The Site To Site VPN Settings Of A Network
      description: >-
        Update the site-to-site VPN settings of a network. Only valid for MX
        networks in NAT mode.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"mode\": \"<string>\",\n    \"hubs\": [\n       
                {\n            \"hubId\": \"<string>\",\n           
                \"useDefaultRoute\": \"<boolean>\"\n        },\n       
                {\n            \"hubId\": \"<string>\",\n           
                \"useDefaultRoute\": \"<boolean>\"\n        }\n    ],\n   
                \"subnets\": [\n        {\n            \"localSubnet\":
                \"<string>\",\n            \"useVpn\": \"<boolean>\"\n       
                },\n        {\n            \"localSubnet\":
                \"<string>\",\n            \"useVpn\": \"<boolean>\"\n       
                }\n    ]\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                mode: spoke
                hubs:
                  - hubId: N_4901849
                    useDefaultRoute: true
                  - hubId: N_1892489
                    useDefaultRoute: false
                subnets:
                  - localSubnet: 192.168.1.0/24
                    useVpn: true
                  - localSubnet: 192.168.128.0/24
                    useVpn: true
  /organizations/{organizationId}/appliance/vpn/thirdPartyVPNPeers:
    get:
      tags:
        - PRODUCTS > Appliance > Configure > Vpn > Third Party VPN Peers
      summary: Return The Third Party VPN Peers For An Organization
      description: Return the third party VPN peers for an organization
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: organizationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{organizationId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                peers:
                  - name: My peer 1
                    publicIp: 123.123.123.1
                    privateSubnets:
                      - 192.168.1.0/24
                      - 192.168.128.0/24
                    secret: asdf1234
                    ikeVersion: '2'
                    ipsecPolicies:
                      ikeCipherAlgo:
                        - tripledes
                      ikeAuthAlgo:
                        - sha1
                      ikePrfAlgo:
                        - prfsha1
                      ikeDiffieHellmanGroup:
                        - group2
                      ikeLifetime: 28800
                      childCipherAlgo:
                        - aes128
                      childAuthAlgo:
                        - sha1
                      childPfsGroup:
                        - disabled
                      childLifetime: 28800
                    networkTags:
                      - all
                  - name: My peer 2
                    publicIp: 123.123.123.2
                    remoteId: miles@meraki.com
                    privateSubnets:
                      - 192.168.2.0/24
                      - 192.168.129.0/24
                    secret: asdf56785678567856785678
                    networkTags:
                      - none
                    ikeVersion: '1'
                    ipsecPoliciesPreset: default
    put:
      tags:
        - PRODUCTS > Appliance > Configure > Vpn > Third Party VPN Peers
      summary: Update The Third Party VPN Peers For An Organization
      description: |
        Update the third party VPN peers for an organization
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        peers| array| The list of VPN peers
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"peers\": [\n        {\n            \"name\":
                \"<string>\",\n            \"publicIp\":
                \"<string>\",\n            \"privateSubnets\":
                [\n                \"<string>\",\n               
                \"<string>\"\n            ],\n            \"secret\":
                \"<string>\",\n            \"remoteId\":
                \"<string>\",\n            \"ipsecPolicies\": {\n               
                \"ikeCipherAlgo\": [\n                   
                \"<string>\",\n                    \"<string>\"\n               
                ],\n                \"ikeAuthAlgo\": [\n                   
                \"<string>\",\n                    \"<string>\"\n               
                ],\n                \"ikePrfAlgo\": [\n                   
                \"<string>\",\n                    \"<string>\"\n               
                ],\n                \"ikeDiffieHellmanGroup\":
                [\n                    \"<string>\",\n                   
                \"<string>\"\n                ],\n               
                \"ikeLifetime\": \"<integer>\",\n               
                \"childCipherAlgo\": [\n                   
                \"<string>\",\n                    \"<string>\"\n               
                ],\n                \"childAuthAlgo\": [\n                   
                \"<string>\",\n                    \"<string>\"\n               
                ],\n                \"childPfsGroup\": [\n                   
                \"<string>\",\n                    \"<string>\"\n               
                ],\n                \"childLifetime\":
                \"<integer>\"\n            },\n           
                \"ipsecPoliciesPreset\": \"<string>\",\n           
                \"ikeVersion\": \"1\",\n            \"networkTags\":
                [\n                \"<string>\",\n               
                \"<string>\"\n            ]\n        },\n        {\n           
                \"name\": \"<string>\",\n            \"publicIp\":
                \"<string>\",\n            \"privateSubnets\":
                [\n                \"<string>\",\n               
                \"<string>\"\n            ],\n            \"secret\":
                \"<string>\",\n            \"remoteId\":
                \"<string>\",\n            \"ipsecPolicies\": {\n               
                \"ikeCipherAlgo\": [\n                   
                \"<string>\",\n                    \"<string>\"\n               
                ],\n                \"ikeAuthAlgo\": [\n                   
                \"<string>\",\n                    \"<string>\"\n               
                ],\n                \"ikePrfAlgo\": [\n                   
                \"<string>\",\n                    \"<string>\"\n               
                ],\n                \"ikeDiffieHellmanGroup\":
                [\n                    \"<string>\",\n                   
                \"<string>\"\n                ],\n               
                \"ikeLifetime\": \"<integer>\",\n               
                \"childCipherAlgo\": [\n                   
                \"<string>\",\n                    \"<string>\"\n               
                ],\n                \"childAuthAlgo\": [\n                   
                \"<string>\",\n                    \"<string>\"\n               
                ],\n                \"childPfsGroup\": [\n                   
                \"<string>\",\n                    \"<string>\"\n               
                ],\n                \"childLifetime\":
                \"<integer>\"\n            },\n           
                \"ipsecPoliciesPreset\": \"<string>\",\n           
                \"ikeVersion\": \"1\",\n            \"networkTags\":
                [\n                \"<string>\",\n               
                \"<string>\"\n            ]\n        }\n    ]\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: organizationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{organizationId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                peers:
                  - name: My peer 1
                    publicIp: 123.123.123.1
                    privateSubnets:
                      - 192.168.1.0/24
                      - 192.168.128.0/24
                    secret: asdf1234
                    ikeVersion: '2'
                    ipsecPolicies:
                      ikeCipherAlgo:
                        - tripledes
                      ikeAuthAlgo:
                        - sha1
                      ikePrfAlgo:
                        - prfsha1
                      ikeDiffieHellmanGroup:
                        - group2
                      ikeLifetime: 28800
                      childCipherAlgo:
                        - aes128
                      childAuthAlgo:
                        - sha1
                      childPfsGroup:
                        - disabled
                      childLifetime: 28800
                    networkTags:
                      - all
                  - name: My peer 2
                    publicIp: 123.123.123.2
                    remoteId: miles@meraki.com
                    privateSubnets:
                      - 192.168.2.0/24
                      - 192.168.129.0/24
                    secret: asdf56785678567856785678
                    networkTags:
                      - none
                    ikeVersion: '1'
                    ipsecPoliciesPreset: default
  /organizations/{organizationId}/appliance/vpn/vpnFirewallRules:
    get:
      tags:
        - PRODUCTS > Appliance > Configure > Vpn > Vpn Firewall Rules
      summary: Return The Firewall Rules For An Organizations Site To Site VPN
      description: Return the firewall rules for an organization's site-to-site VPN
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: organizationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{organizationId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                rules:
                  - comment: Allow TCP traffic to subnet with HTTP servers.
                    policy: allow
                    protocol: tcp
                    destPort: 443
                    destCidr: 192.168.1.0/24
                    srcPort: Any
                    srcCidr: Any
                    syslogEnabled: false
    put:
      tags:
        - PRODUCTS > Appliance > Configure > Vpn > Vpn Firewall Rules
      summary: Update The Firewall Rules Of An Organizations Site To Site VPN
      description: >
        Update the firewall rules of an organization's site-to-site VPN
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        rules| array| An ordered array of the firewall rules (not including the
        default rule)

        syslogDefaultRule| boolean| Log the special default rule (boolean value
        - enable only if you've configured a syslog server) (optional)
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"rules\": [\n        {\n            \"policy\":
                \"<string>\",\n            \"protocol\":
                \"<string>\",\n            \"srcCidr\":
                \"<string>\",\n            \"destCidr\":
                \"<string>\",\n            \"comment\":
                \"<string>\",\n            \"srcPort\":
                \"<string>\",\n            \"destPort\":
                \"<string>\",\n            \"syslogEnabled\":
                \"<boolean>\"\n        },\n        {\n            \"policy\":
                \"<string>\",\n            \"protocol\":
                \"<string>\",\n            \"srcCidr\":
                \"<string>\",\n            \"destCidr\":
                \"<string>\",\n            \"comment\":
                \"<string>\",\n            \"srcPort\":
                \"<string>\",\n            \"destPort\":
                \"<string>\",\n            \"syslogEnabled\":
                \"<boolean>\"\n        }\n    ],\n    \"syslogDefaultRule\":
                \"<boolean>\"\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: organizationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{organizationId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                rules:
                  - comment: Allow TCP traffic to subnet with HTTP servers.
                    policy: allow
                    protocol: tcp
                    destPort: 443
                    destCidr: 192.168.1.0/24
                    srcPort: Any
                    srcCidr: Any
                    syslogEnabled: false
  /networks/{networkId}/appliance/warmSpare:
    get:
      tags:
        - PRODUCTS > Appliance > Configure > Warm Spare
      summary: Return MX Warm Spare Settings
      description: Return MX warm spare settings
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                enabled: true
                primarySerial: Q234-ABCD-5678
                spareSerial: Q234-ABCD-5678
                uplinkMode: virtual
                wan1:
                  ip: 1.2.3.4
                  subnet: 192.168.1.0/24
                wan2:
                  ip: 1.2.3.4
                  subnet: 192.168.128.0/24
    put:
      tags:
        - PRODUCTS > Appliance > Configure > Warm Spare
      summary: Update MX Warm Spare Settings
      description: |+
        Update MX warm spare settings
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        enabled| boolean| Enable warm spare
        spareSerial| string| Serial number of the warm spare appliance
        uplinkMode| string| Uplink mode, either virtual or public
        virtualIp1| string| The WAN 1 shared IP
        virtualIp2| string| The WAN 2 shared IP

        #### Supports Action Batches

        **Resource**|**Operation**
        :-------------: |:-------------:
        `/networks/{networkId}/appliance/warmSpare` | update

      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"enabled\": \"<boolean>\",\n    \"spareSerial\":
                \"<string>\",\n    \"uplinkMode\": \"<string>\",\n   
                \"virtualIp1\": \"<string>\",\n    \"virtualIp2\":
                \"<string>\"\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                enabled: true
                primarySerial: Q234-ABCD-5678
                spareSerial: Q234-ABCD-5678
                uplinkMode: virtual
                wan1:
                  ip: 1.2.3.4
                  subnet: 192.168.1.0/24
                wan2:
                  ip: 1.2.3.4
                  subnet: 192.168.128.0/24
  /networks/{networkId}/appliance/warmSpare/swap:
    post:
      tags:
        - PRODUCTS > Appliance > Configure > Warm Spare
      summary: Swap MX Primary And Warm Spare Appliances
      description: Swap MX primary and warm spare appliances
      requestBody:
        content: {}
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                enabled: true
                primarySerial: Q234-ABCD-5678
                spareSerial: Q234-ABCD-5678
                uplinkMode: virtual
                wan1:
                  ip: 1.2.3.4
                  subnet: 192.168.1.0/24
                wan2:
                  ip: 1.2.3.4
                  subnet: 192.168.128.0/24
  /networks/{networkId}/appliance/clients/{clientId}/security/events:
    get:
      tags:
        - PRODUCTS > Appliance > Monitor > Clients > security > events
      summary: List the security events for a client
      description: >-
        List the security events for a client. Clients can be identified by a
        client key or either the MAC or IP depending on whether the network uses
        Track-by-IP.
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: clientId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{clientId}}'
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - ts: '2020-03-20T16:00:10.144989Z'
                  eventType: File Scanned
                  clientName: COMPUTER-M-V78J
                  clientMac: 10:dd:b1:eb:88:f8
                  clientIp: 192.168.128.2
                  srcIp: 192.168.128.2
                  destIp: 119.192.233.48
                  protocol: http
                  uri: >-
                    http://www.favorite-icons.com/program/FavoriteIconsUninstall.exe
                  canonicalName: PUA.Win.Dropper.Kraddare::1201
                  destinationPort: 80
                  fileHash: >-
                    3ec1b9a95fe62aa25fc959643a0f227b76d253094681934daaf628d3574b3463
                  fileType: MS_EXE
                  fileSizeBytes: 193688
                  disposition: Malicious
                  action: Blocked
                - ts: '2018-02-11T00:00:00.090210Z'
                  eventType: IDS Alert
                  deviceMac: 00:18:0a:01:02:03
                  clientMac: A1:B2:C3:D4:E5:F6
                  srcIp: 1.2.3.4:34195
                  destIp: 10.20.30.40:80
                  protocol: tcp/ip
                  priority: '2'
                  classification: '4'
                  blocked: true
                  message: SERVER-WEBAPP JBoss JMX console access attempt
                  signature: '1:21516:9'
                  sigSource: ''
                  ruleId: meraki:intrusion/snort/GID/1/SID/26267
                - ts: '2018-02-11T00:00:00.090210Z'
                  eventType: IDS Alert
                  deviceMac: 00:18:0a:01:02:03
                  clientMac: A1:B2:C3:D4:E5:F6
                  srcIp: 1.2.3.4:56023
                  destIp: 10.20.30.40:80
                  protocol: tcp/ip
                  priority: '1'
                  classification: '33'
                  blocked: true
                  message: POLICY-OTHER Adobe ColdFusion admin interface access attempt
                  signature: '1:25975:2'
                  sigSource: ''
                  ruleId: meraki:intrusion/snort/GID/1/SID/26267
  /devices/{serial}/appliance/dhcp/subnets:
    get:
      tags:
        - PRODUCTS > Appliance > Monitor > Dhcp > subnets
      summary: Return the DHCP subnet information for an appliance
      description: Return the DHCP subnet information for an appliance
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: serial
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{serial}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - subnet: 192.168.1.0/24
                  vlanId: 100
                  usedCount: 2
                  freeCount: 251
  /devices/{serial}/appliance/performance:
    get:
      tags:
        - PRODUCTS > Appliance > Monitor > Performance
      summary: Return the performance score for a single MX
      description: >-
        Return the performance score for a single MX. Only primary MX devices
        supported. If no data is available, a 204 error code is returned.
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: serial
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{serial}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                perfScore: 10
  /networks/{networkId}/appliance/security/events:
    get:
      tags:
        - PRODUCTS > Appliance > Monitor > Security > events
      summary: List The Security Events For A Network
      description: List the security events for a network
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - ts: '2020-03-20T16:00:10.144989Z'
                  eventType: File Scanned
                  clientName: COMPUTER-M-V78J
                  clientMac: 10:dd:b1:eb:88:f8
                  clientIp: 192.168.128.2
                  srcIp: 192.168.128.2
                  destIp: 119.192.233.48
                  protocol: http
                  uri: >-
                    http://www.favorite-icons.com/program/FavoriteIconsUninstall.exe
                  canonicalName: PUA.Win.Dropper.Kraddare::1201
                  destinationPort: 80
                  fileHash: >-
                    3ec1b9a95fe62aa25fc959643a0f227b76d253094681934daaf628d3574b3463
                  fileType: MS_EXE
                  fileSizeBytes: 193688
                  disposition: Malicious
                  action: Blocked
                - ts: '2018-02-11T00:00:00.090210Z'
                  eventType: IDS Alert
                  deviceMac: 00:18:0a:01:02:03
                  clientMac: A1:B2:C3:D4:E5:F6
                  srcIp: 1.2.3.4:34195
                  destIp: 10.20.30.40:80
                  protocol: tcp/ip
                  priority: '2'
                  classification: '4'
                  blocked: true
                  message: SERVER-WEBAPP JBoss JMX console access attempt
                  signature: '1:21516:9'
                  sigSource: ''
                  ruleId: meraki:intrusion/snort/GID/1/SID/26267
                - ts: '2018-02-11T00:00:00.090210Z'
                  eventType: IDS Alert
                  deviceMac: 00:18:0a:01:02:03
                  clientMac: A1:B2:C3:D4:E5:F6
                  srcIp: 1.2.3.4:56023
                  destIp: 10.20.30.40:80
                  protocol: tcp/ip
                  priority: '1'
                  classification: '33'
                  blocked: true
                  message: POLICY-OTHER Adobe ColdFusion admin interface access attempt
                  signature: '1:25975:2'
                  sigSource: ''
                  ruleId: meraki:intrusion/snort/GID/1/SID/26267
  /organizations/{organizationId}/appliance/security/events:
    get:
      tags:
        - PRODUCTS > Appliance > Monitor > Security > events
      summary: List The Security Events For An Organization
      description: List the security events for an organization
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: organizationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{organizationId}}'
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - ts: '2020-03-20T16:00:10.144989Z'
                  eventType: File Scanned
                  clientName: COMPUTER-M-V78J
                  clientMac: 10:dd:b1:eb:88:f8
                  clientIp: 192.168.128.2
                  srcIp: 192.168.128.2
                  destIp: 119.192.233.48
                  protocol: http
                  uri: >-
                    http://www.favorite-icons.com/program/FavoriteIconsUninstall.exe
                  canonicalName: PUA.Win.Dropper.Kraddare::1201
                  destinationPort: 80
                  fileHash: >-
                    3ec1b9a95fe62aa25fc959643a0f227b76d253094681934daaf628d3574b3463
                  fileType: MS_EXE
                  fileSizeBytes: 193688
                  disposition: Malicious
                  action: Blocked
                - ts: '2018-02-11T00:00:00.090210Z'
                  eventType: IDS Alert
                  deviceMac: 00:18:0a:01:02:03
                  clientMac: A1:B2:C3:D4:E5:F6
                  srcIp: 1.2.3.4:34195
                  destIp: 10.20.30.40:80
                  protocol: tcp/ip
                  priority: '2'
                  classification: '4'
                  blocked: true
                  message: SERVER-WEBAPP JBoss JMX console access attempt
                  signature: '1:21516:9'
                  sigSource: ''
                  ruleId: meraki:intrusion/snort/GID/1/SID/26267
                - ts: '2018-02-11T00:00:00.090210Z'
                  eventType: IDS Alert
                  deviceMac: 00:18:0a:01:02:03
                  clientMac: A1:B2:C3:D4:E5:F6
                  srcIp: 1.2.3.4:56023
                  destIp: 10.20.30.40:80
                  protocol: tcp/ip
                  priority: '1'
                  classification: '33'
                  blocked: true
                  message: POLICY-OTHER Adobe ColdFusion admin interface access attempt
                  signature: '1:25975:2'
                  sigSource: ''
                  ruleId: meraki:intrusion/snort/GID/1/SID/26267
  /organizations/{organizationId}/appliance/uplink/statuses:
    get:
      tags:
        - PRODUCTS > Appliance > Monitor > Uplink > statuses
      summary: >-
        List the uplink status of every Meraki MX and Z series appliances in the
        organization
      description: >-
        List the uplink status of every Meraki MX and Z series appliances in the
        organization
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: organizationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{organizationId}}'
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - networkId: N_24329156
                  serial: Q234-ABCD-5678
                  model: MX68C
                  lastReportedAt: '2018-02-11T00:00:00Z'
                  uplinks:
                    - interface: wan1
                      status: active
                      ip: 1.2.3.4
                      gateway: 1.2.3.5
                      publicIp: 123.123.123.1
                      primaryDns: 8.8.8.8
                      secondaryDns: 8.8.4.4
                      ipAssignedBy: static
                    - interface: cellular
                      status: ready
                      ip: 1.2.3.4
                      provider: at&t
                      publicIp: 123.123.123.1
                      model: integrated
                      signalStat:
                        rsrp: '-120'
                        rsrq: '-13'
                      connectionType: 4g
                      apn: internet
                      iccid: '123456789'
  /organizations/{organizationId}/appliance/vpn/stats:
    get:
      tags:
        - PRODUCTS > Appliance > Monitor > Vpn > Stats
      summary: Show VPN history stat for networks in an organization
      description: Show VPN history stat for networks in an organization
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: organizationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{organizationId}}'
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - networkId: N_12345678
                  networkName: San Francisco Office
                  merakiVpnPeers:
                    - networkId: L_23456789
                      networkName: New York Office
                      usageSummary:
                        receivedInKilobytes: 1234567
                        sentInKilobytes: 2345678
                      latencySummaries:
                        - senderUplink: wan1
                          receiverUplink: wan1
                          avgLatencyMs: 15
                          minLatencyMs: 10
                          maxLatencyMs: 30
                        - senderUplink: wan2
                          receiverUplink: wan1
                          avgLatencyMs: 15
                          minLatencyMs: 10
                          maxLatencyMs: 30
                      lossPercentageSummaries:
                        - senderUplink: wan1
                          receiverUplink: wan1
                          avgLossPercentage: 0
                          minLossPercentage: 0
                          maxLossPercentage: 0.1
                        - senderUplink: wan2
                          receiverUplink: wan1
                          avgLossPercentage: 0
                          minLossPercentage: 0
                          maxLossPercentage: 0.1
                      jitterSummaries:
                        - senderUplink: wan1
                          receiverUplink: wan1
                          avgJitter: 0.01
                          minJitter: 0
                          maxJitter: 0.25
                        - senderUplink: wan2
                          receiverUplink: wan1
                          avgJitter: 0.01
                          minJitter: 0
                          maxJitter: 0.25
                      mosSummaries:
                        - senderUplink: wan1
                          receiverUplink: wan1
                          avgMos: 4.1
                          minMos: 4
                          maxMos: 4.2
                        - senderUplink: wan2
                          receiverUplink: wan1
                          avgMos: 4.1
                          minMos: 4
                          maxMos: 4.2
                - networkId: L_23456789
                  networkName: New York Office
                  merakiVpnPeers:
                    - networkId: N_12345678
                      networkName: San Francisco Office
                      usageSummary:
                        receivedInKilobytes: 2345678
                        sentInKilobytes: 1234567
                      latencySummaries:
                        - senderUplink: wan1
                          receiverUplink: wan1
                          avgLatencyMs: 15
                          minLatencyMs: 10
                          maxLatencyMs: 30
                        - senderUplink: wan1
                          receiverUplink: wan2
                          avgLatencyMs: 15
                          minLatencyMs: 10
                          maxLatencyMs: 30
                      lossPercentageSummaries:
                        - senderUplink: wan1
                          receiverUplink: wan1
                          avgLossPercentage: 0
                          minLossPercentage: 0
                          maxLossPercentage: 0.1
                        - senderUplink: wan1
                          receiverUplink: wan2
                          avgLossPercentage: 0
                          minLossPercentage: 0
                          maxLossPercentage: 0.1
                      jitterSummaries:
                        - senderUplink: wan1
                          receiverUplink: wan1
                          avgJitter: 0.01
                          minJitter: 0
                          maxJitter: 0.25
                        - senderUplink: wan1
                          receiverUplink: wan2
                          avgJitter: 0.01
                          minJitter: 0
                          maxJitter: 0.25
                      mosSummaries:
                        - senderUplink: wan1
                          receiverUplink: wan1
                          avgMos: 4.1
                          minMos: 4
                          maxMos: 4.2
                        - senderUplink: wan1
                          receiverUplink: wan2
                          avgMos: 4.1
                          minMos: 4
                          maxMos: 4.2
  /organizations/{organizationId}/appliance/vpn/statuses:
    get:
      tags:
        - PRODUCTS > Appliance > Monitor > Vpn > Statuses
      summary: Show VPN status for networks in an organization
      description: Show VPN status for networks in an organization
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: organizationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{organizationId}}'
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - networkId: N_12345678
                  networkName: San Francisco Office
                  deviceSerial: Q234-ABCD-1234
                  deviceStatus: online
                  uplinks:
                    - interface: wan1
                      publicIp: 1.2.3.4
                    - interface: wan2
                      publicIp: 2.3.4.5
                  vpnMode: hub
                  exportedSubnets:
                    - subnet: 192.168.0.0/24
                      name: sales-vlan
                    - subnet: 172.16.0.0/24
                      name: engineering-vlan
                  merakiVpnPeers:
                    - networkId: L_1234
                      networkName: New York Office
                      reachability: reachable
                  thirdPartyVpnPeers:
                    - name: London Office
                      publicIp: 111.222.333.444
                      reachability: reachable
                - networkId: L_1234
                  networkName: New York Office
                  deviceSerial: Q234-EFGH-5678
                  deviceStatus: online
                  uplinks:
                    - interface: wan1
                      publicIp: 3.4.5.6
                  vpnMode: spoke
                  exportedSubnets:
                    - subnet: 192.168.1.0/24
                      name: sales-vlan
                    - subnet: 172.16.1.0/24
                      name: engineering-vlan
                  merakiVpnPeers:
                    - networkId: N_12345678
                      networkName: San Francisco Office
                      reachability: reachable
                  thirdPartyVpnPeers:
                    - name: Tokyo Office
                      publicIp: 222.333.444.555
                      reachability: reachable
  /devices/{serial}/camera/qualityAndRetention:
    get:
      tags:
        - PRODUCTS > Camera > Configure > Quality And Retention
      summary: Returns Quality And Retention Settings For The Given Camera
      description: Returns quality and retention settings for the given camera
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: serial
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{serial}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                motionBasedRetentionEnabled: false
                audioRecordingEnabled: false
                restrictedBandwidthModeEnabled: false
                profileId: null
                quality: Standard
                motionDetectorVersion: 2
                resolution: 720
    put:
      tags:
        - PRODUCTS > Camera > Configure > Quality And Retention
      summary: Update Quality And Retention Settings For The Given Camera
      description: >+
        Update quality and retention settings for the given camera
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        profileId| string| The ID of a quality and retention profile to assign
        to the camera. The profile's settings will override all of the
        per-camera quality and retention settings. If the value of this
        parameter is null, any existing profile will be unassigned from the
        camera.

        motionBasedRetentionEnabled| boolean| Boolean indicating if motion-based
        retention is enabled(true) or disabled(false) on the camera.

        audioRecordingEnabled| boolean| Boolean indicating if audio recording is
        enabled(true) or disabled(false) on the camera

        restrictedBandwidthModeEnabled| boolean| Boolean indicating if
        restricted bandwidth is enabled(true) or disabled(false) on the camera

        quality| string| Quality of the camera. Can be one of 'Standard', 'High'
        or 'Enhanced'. Not all qualities are supported by every camera model.

        resolution| string| Resolution of the camera. Can be one of '1280x720',
        '1920x1080', '1080x1080' or '2058x2058'. Not all resolutions are
        supported by every camera model.

        motionDetectorVersion| integer| The version of the motion detector that
        will be used by the camera. Only applies to Gen 2 cameras. Defaults to
        v2.


        #### Supports Action Batches


        **Resource**|**Operation**

        :-------------: |:-------------:

        `/devices/{serial}/camera/qualityAndRetention` | update

      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"profileId\": \"<string>\",\n   
                \"motionBasedRetentionEnabled\": \"<boolean>\",\n   
                \"audioRecordingEnabled\": \"<boolean>\",\n   
                \"restrictedBandwidthModeEnabled\": \"<boolean>\",\n   
                \"quality\": \"<string>\",\n    \"resolution\":
                \"<string>\",\n    \"motionDetectorVersion\": \"<integer>\"\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: serial
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{serial}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                motionBasedRetentionEnabled: false
                audioRecordingEnabled: false
                restrictedBandwidthModeEnabled: false
                profileId: null
                quality: Standard
                motionDetectorVersion: 2
                resolution: 720
  /networks/{networkId}/camera/qualityRetentionProfiles:
    post:
      tags:
        - PRODUCTS > Camera > Configure > Quality Retention Profiles
      summary: Creates New Quality Retention Profile For This Network
      description: >
        Creates new quality retention profile for this network.
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        name| string| The name of the new profile. Must be unique. This
        parameter is required.

        motionBasedRetentionEnabled| boolean| Deletes footage older than 3 days
        in which no motion was detected. Can be either true or false. Defaults
        to false.

        restrictedBandwidthModeEnabled| boolean| Disable features that require
        additional bandwidth such as Motion Recap. Can be either true or false.
        Defaults to false.

        audioRecordingEnabled| boolean| Whether or not to record audio. Can be
        either true or false. Defaults to false.

        cloudArchiveEnabled| boolean| Create redundant video backup using Cloud
        Archive. Can be either true or false. Defaults to false.

        motionDetectorVersion| integer| The version of the motion detector that
        will be used by the camera. Only applies to Gen 2 cameras. Defaults to
        v2.

        scheduleId| string| Schedule for which this camera will record video, or
        'null' to always record.

        maxRetentionDays| integer| The maximum number of days for which the data
        will be stored, or 'null' to keep data until storage space runs out. If
        the former, it can be one of [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 30, 60,
        90] days.

        videoSettings| object| Video quality and resolution settings for all the
        camera models.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"name\": \"<string>\",\n   
                \"motionBasedRetentionEnabled\": \"<boolean>\",\n   
                \"restrictedBandwidthModeEnabled\": \"<boolean>\",\n   
                \"audioRecordingEnabled\": \"<boolean>\",\n   
                \"cloudArchiveEnabled\": \"<boolean>\",\n   
                \"motionDetectorVersion\": \"<integer>\",\n    \"scheduleId\":
                \"<string>\",\n    \"maxRetentionDays\": \"<integer>\",\n   
                \"videoSettings\": {\n        \"MV21/MV71\": {\n           
                \"quality\": \"<string>\",\n            \"resolution\":
                \"<string>\"\n        },\n        \"MV12/MV22/MV72\":
                {\n            \"quality\": \"<string>\",\n           
                \"resolution\": \"<string>\"\n        },\n        \"MV32\":
                {\n            \"quality\": \"<string>\",\n           
                \"resolution\": \"<string>\"\n        },\n        \"MV12WE\":
                {\n            \"quality\": \"<string>\",\n           
                \"resolution\": \"<string>\"\n        },\n       
                \"MV22X/MV72X\": {\n            \"quality\":
                \"<string>\",\n            \"resolution\": \"<string>\"\n       
                }\n    }\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: '1234'
                networkId: N_24329156
                name: Sample quality retention profile
                restrictedBandwidthModeEnabled: true
                motionBasedRetentionEnabled: false
                audioRecordingEnabled: false
                cloudArchiveEnabled: false
                maxRetentionDays: 7
                scheduleId: null
                motionDetectorVersion: 2
                videoSettings:
                  MV32:
                    quality: Enhanced
                    resolution: 1080x1080
                  MV21/MV71:
                    quality: High
                    resolution: 1280x720
                  MV12/MV22/MV72:
                    quality: High
                    resolution: 1920x1080
                  MV12WE:
                    quality: High
                    resolution: 1920x1080
    get:
      tags:
        - PRODUCTS > Camera > Configure > Quality Retention Profiles
      summary: List The Quality Retention Profiles For This Network
      description: List the quality retention profiles for this network
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: '1234'
                  networkId: N_24329156
                  name: Sample quality retention profile
                  restrictedBandwidthModeEnabled: true
                  motionBasedRetentionEnabled: false
                  audioRecordingEnabled: false
                  cloudArchiveEnabled: false
                  maxRetentionDays: 7
                  scheduleId: null
                  motionDetectorVersion: 2
                  videoSettings:
                    MV32:
                      quality: Enhanced
                      resolution: 1080x1080
                    MV21/MV71:
                      quality: High
                      resolution: 1280x720
                    MV12/MV22/MV72:
                      quality: High
                      resolution: 1920x1080
                    MV12WE:
                      quality: High
                      resolution: 1920x1080
  /networks/{networkId}/camera/qualityRetentionProfiles/{qualityRetentionProfileId}:
    delete:
      tags:
        - PRODUCTS > Camera > Configure > Quality Retention Profiles
      summary: Delete An Existing Quality Retention Profile For This Network
      description: Delete an existing quality retention profile for this network.
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: qualityRetentionProfileId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{qualityRetentionProfileId}}'
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    get:
      tags:
        - PRODUCTS > Camera > Configure > Quality Retention Profiles
      summary: Retrieve A Single Quality Retention Profile
      description: Retrieve a single quality retention profile
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: qualityRetentionProfileId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{qualityRetentionProfileId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: '1234'
                networkId: N_24329156
                name: Sample quality retention profile
                restrictedBandwidthModeEnabled: true
                motionBasedRetentionEnabled: false
                audioRecordingEnabled: false
                cloudArchiveEnabled: false
                maxRetentionDays: 7
                scheduleId: null
                motionDetectorVersion: 2
                videoSettings:
                  MV32:
                    quality: Enhanced
                    resolution: 1080x1080
                  MV21/MV71:
                    quality: High
                    resolution: 1280x720
                  MV12/MV22/MV72:
                    quality: High
                    resolution: 1920x1080
                  MV12WE:
                    quality: High
                    resolution: 1920x1080
    put:
      tags:
        - PRODUCTS > Camera > Configure > Quality Retention Profiles
      summary: Update An Existing Quality Retention Profile For This Network
      description: >
        Update an existing quality retention profile for this network.
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        name| string| The name of the new profile. Must be unique.

        motionBasedRetentionEnabled| boolean| Deletes footage older than 3 days
        in which no motion was detected. Can be either true or false. Defaults
        to false.

        restrictedBandwidthModeEnabled| boolean| Disable features that require
        additional bandwidth such as Motion Recap. Can be either true or false.
        Defaults to false.

        audioRecordingEnabled| boolean| Whether or not to record audio. Can be
        either true or false. Defaults to false.

        cloudArchiveEnabled| boolean| Create redundant video backup using Cloud
        Archive. Can be either true or false. Defaults to false.

        motionDetectorVersion| integer| The version of the motion detector that
        will be used by the camera. Only applies to Gen 2 cameras. Defaults to
        v2.

        scheduleId| string| Schedule for which this camera will record video, or
        'null' to always record.

        maxRetentionDays| integer| The maximum number of days for which the data
        will be stored, or 'null' to keep data until storage space runs out. If
        the former, it can be one of [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 30, 60,
        90] days.

        videoSettings| object| Video quality and resolution settings for all the
        camera models.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"name\": \"<string>\",\n   
                \"motionBasedRetentionEnabled\": \"<boolean>\",\n   
                \"restrictedBandwidthModeEnabled\": \"<boolean>\",\n   
                \"audioRecordingEnabled\": \"<boolean>\",\n   
                \"cloudArchiveEnabled\": \"<boolean>\",\n   
                \"motionDetectorVersion\": \"<integer>\",\n    \"scheduleId\":
                \"<string>\",\n    \"maxRetentionDays\": \"<integer>\",\n   
                \"videoSettings\": {\n        \"MV21/MV71\": {\n           
                \"quality\": \"<string>\",\n            \"resolution\":
                \"<string>\"\n        },\n        \"MV12/MV22/MV72\":
                {\n            \"quality\": \"<string>\",\n           
                \"resolution\": \"<string>\"\n        },\n        \"MV32\":
                {\n            \"quality\": \"<string>\",\n           
                \"resolution\": \"<string>\"\n        },\n        \"MV12WE\":
                {\n            \"quality\": \"<string>\",\n           
                \"resolution\": \"<string>\"\n        },\n       
                \"MV22X/MV72X\": {\n            \"quality\":
                \"<string>\",\n            \"resolution\": \"<string>\"\n       
                }\n    }\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: qualityRetentionProfileId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{qualityRetentionProfileId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: '1234'
                networkId: N_24329156
                name: Sample quality retention profile
                restrictedBandwidthModeEnabled: true
                motionBasedRetentionEnabled: false
                audioRecordingEnabled: false
                cloudArchiveEnabled: false
                maxRetentionDays: 7
                scheduleId: null
                motionDetectorVersion: 2
                videoSettings:
                  MV32:
                    quality: Enhanced
                    resolution: 1080x1080
                  MV21/MV71:
                    quality: High
                    resolution: 1280x720
                  MV12/MV22/MV72:
                    quality: High
                    resolution: 1920x1080
                  MV12WE:
                    quality: High
                    resolution: 1920x1080
  /networks/{networkId}/camera/schedules:
    get:
      tags:
        - PRODUCTS > Camera > Configure > Schedules
      summary: Returns a list of all camera recording schedules.
      description: Returns a list of all camera recording schedules.
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: '123'
                  name: Weekday schedule
                - id: '124'
                  name: Office hours
  /devices/{serial}/camera/sense/objectDetectionModels:
    get:
      tags:
        - PRODUCTS > Camera > Configure > Sense > Object Detection Models
      summary: Returns the MV Sense object detection model list for the given camera
      description: Returns the MV Sense object detection model list for the given camera
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: serial
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{serial}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: '0'
                  description: Model A
  /devices/{serial}/camera/sense:
    get:
      tags:
        - PRODUCTS > Camera > Configure > Sense
      summary: Returns Sense Settings For A Given Camera
      description: Returns sense settings for a given camera
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: serial
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{serial}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                senseEnabled: true
                audioDetection:
                  enabled: false
                mqttBrokerId: '1234'
                mqttTopics:
                  - /merakimv/Q2AA-AAAA-1111/raw_detections
                  - /merakimv/Q2AA-AAAA-1111/light
    put:
      tags:
        - PRODUCTS > Camera > Configure > Sense
      summary: Update Sense Settings For The Given Camera
      description: >+
        Update sense settings for the given camera
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        senseEnabled| boolean| Boolean indicating if sense(license) is
        enabled(true) or disabled(false) on the camera

        mqttBrokerId| string| The ID of the MQTT broker to be enabled on the
        camera. A value of null will disable MQTT on the camera

        audioDetection| object| The details of the audio detection config.

        detectionModelId| string| The ID of the object detection model


        #### Supports Action Batches


        **Resource**|**Operation**

        :-------------: |:-------------:

        `/devices/{serial}/camera/sense` | update

      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"senseEnabled\": \"<boolean>\",\n    \"mqttBrokerId\":
                \"<string>\",\n    \"audioDetection\": {\n        \"enabled\":
                \"<boolean>\"\n    },\n    \"detectionModelId\":
                \"<string>\"\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: serial
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{serial}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                senseEnabled: true
                audioDetection:
                  enabled: false
                mqttBrokerId: '1234'
                mqttTopics:
                  - /merakimv/Q2AA-AAAA-1111/raw_detections
                  - /merakimv/Q2AA-AAAA-1111/light
  /devices/{serial}/camera/video/settings:
    get:
      tags:
        - PRODUCTS > Camera > Configure > Video > settings
      summary: Returns Video Settings For The Given Camera
      description: Returns video settings for the given camera
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: serial
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{serial}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                externalRtspEnabled: true
                rtspUrl: rtsp://10.0.0.1:9000/live
    put:
      tags:
        - PRODUCTS > Camera > Configure > Video > settings
      summary: Update Video Settings For The Given Camera
      description: >+
        Update video settings for the given camera
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        externalRtspEnabled| boolean| Boolean indicating if external rtsp stream
        is exposed


        #### Supports Action Batches


        **Resource**|**Operation**

        :-------------: |:-------------:

        `/devices/{serial}/camera/video/settings` | update

      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n    \"externalRtspEnabled\": \"<boolean>\"\n}"'
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: serial
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{serial}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                externalRtspEnabled: true
                rtspUrl: rtsp://10.0.0.1:9000/live
  /devices/{serial}/camera/videoLink:
    get:
      tags:
        - PRODUCTS > Camera > Configure > Video Link
      summary: Returns video link to the specified camera
      description: >-
        Returns video link to the specified camera. If a timestamp is supplied,
        it links to that timestamp.
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: serial
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{serial}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                url: >-
                  https://nxx.meraki.com/office-cameras/n/bs0a1k/manage/nodes/new_list/29048243992402?timestamp=1535732570077
  /devices/{serial}/camera/analytics/live:
    get:
      tags:
        - PRODUCTS > Camera > Monitor > Analytics > Live
      summary: Returns live state from camera of analytics zones
      description: Returns live state from camera of analytics zones
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: serial
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{serial}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ts: '2018-08-15T18:32:38.123Z'
                zones:
                  '0':
                    person: 0
  /devices/{serial}/camera/analytics/overview:
    get:
      tags:
        - PRODUCTS > Camera > Monitor > Analytics > Overview
      summary: Returns an overview of aggregate analytics data for a timespan
      description: Returns an overview of aggregate analytics data for a timespan
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: serial
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{serial}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - startTs: '2018-08-15T18:32:38.123Z'
                  endTs: '2018-08-15T18:33:38.123Z'
                  zoneId: 0
                  entrances: 254
                  averageCount: 5
  /devices/{serial}/camera/analytics/recent:
    get:
      tags:
        - PRODUCTS > Camera > Monitor > Analytics > Recent
      summary: Returns most recent record for analytics zones
      description: Returns most recent record for analytics zones
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: serial
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{serial}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - startTs: '2018-08-15T18:32:38.123Z'
                  endTs: '2018-08-15T18:33:38.123Z'
                  zoneId: 0
                  entrances: 10
                  averageCount: 2.54
  /devices/{serial}/camera/analytics/zones/{zoneId}/history:
    get:
      tags:
        - PRODUCTS > Camera > Monitor > Analytics > Zones > History
      summary: Return historical records for analytic zones
      description: Return historical records for analytic zones
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: serial
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{serial}}'
        - name: zoneId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{zoneId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - startTs: '2018-08-15T18:32:38.123Z'
                  endTs: '2018-08-15T18:33:38.123Z'
                  entrances: 5
                  averageCount: 1.5
  /devices/{serial}/camera/analytics/zones:
    get:
      tags:
        - PRODUCTS > Camera > Monitor > Analytics > Zones
      summary: Returns All Configured Analytic Zones For This Camera
      description: Returns all configured analytic zones for this camera
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: serial
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{serial}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: '0'
                  type: occupancy
                  label: Full Frame
                  regionOfInterest:
                    x0: '0.00'
                    y0: '0.00'
                    x1: '1.00'
                    y1: '1.00'
  /devices/{serial}/camera/generateSnapshot:
    post:
      tags:
        - PRODUCTS > Camera > Monitor
      summary: >-
        Generate A Snapshot Of What The Camera Sees At The Specified Time And
        Return A Link To That Image
      description: >
        Generate a snapshot of what the camera sees at the specified time and
        return a link to that image.
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        timestamp| string| [optional] The snapshot will be taken from this time
        on the camera. The timestamp is expected to be in ISO 8601 format. If no
        timestamp is specified, we will assume current time.

        fullframe| boolean| [optional] If set to "true" the snapshot will be
        taken at full sensor resolution. This will error if used with timestamp.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"timestamp\": \"<dateTime>\",\n    \"fullframe\":
                \"<boolean>\"\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: serial
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{serial}}'
      responses:
        '202':
          description: Accepted
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                url: >-
                  https://spn4.meraki.com/stream/jpeg/snapshot/b2d123asdf423qd22d2
                expiry: Access to the image will expire at 2018-12-11T03:12:39Z.
  /networks/{networkId}/cellularGateway/connectivityMonitoringDestinations:
    get:
      tags:
        - >-
          PRODUCTS > Cellular Gateway > Configure > Connectivity Monitoring
          Destinations
      summary: Return The Connectivity Testing Destinations For An MG Network
      description: Return the connectivity testing destinations for an MG network
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                destinations:
                  - ip: 8.8.8.8
                    description: Google
                    default: false
                  - ip: 1.23.45.67
                    description: test description
                    default: true
                  - ip: 9.8.7.6
                    description: null
                    default: false
    put:
      tags:
        - >-
          PRODUCTS > Cellular Gateway > Configure > Connectivity Monitoring
          Destinations
      summary: Update The Connectivity Testing Destinations For An MG Network
      description: >+
        Update the connectivity testing destinations for an MG network
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        destinations| array| The list of connectivity monitoring destinations


        #### Supports Action Batches


        **Resource**|**Operation**

        :-------------: |:-------------:

        `/networks/{networkId}/cellularGateway/connectivityMonitoringDestinations`
        | update

      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"destinations\": [\n        {\n            \"type\":
                \"boolean\",\n            \"description\": \"Boolean indicating
                whether this is the default testing destination (true) or not
                (false). Defaults to false. Only one default is
                allowed\",\n            \"default\": false\n        },\n       
                {\n            \"type\": \"boolean\",\n           
                \"description\": \"Boolean indicating whether this is the
                default testing destination (true) or not (false). Defaults to
                false. Only one default is allowed\",\n            \"default\":
                false\n        }\n    ]\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                destinations:
                  - ip: 8.8.8.8
                    description: Google
                    default: false
                  - ip: 1.23.45.67
                    description: test description
                    default: true
                  - ip: 9.8.7.6
                    description: null
                    default: false
  /networks/{networkId}/cellularGateway/dhcp:
    get:
      tags:
        - PRODUCTS > Cellular Gateway > Configure > Dhcp
      summary: List Common DHCP Settings Of M Gs
      description: List common DHCP settings of MGs
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                dhcpLeaseTime: 1 hour
                dnsNameservers: custom
                dnsCustomNameservers:
                  - 172.16.2.111
                  - 172.16.2.30
    put:
      tags:
        - PRODUCTS > Cellular Gateway > Configure > Dhcp
      summary: Update Common DHCP Settings Of M Gs
      description: >+
        Update common DHCP settings of MGs
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        dhcpLeaseTime| string| DHCP Lease time for all MG of the network. It can
        be '30 minutes', '1 hour', '4 hours', '12 hours', '1 day' or '1 week'.

        dnsNameservers| string| DNS name servers mode for all MG of the network.
        It can take 4 different values: 'upstream_dns', 'google_dns', 'opendns',
        'custom'.

        dnsCustomNameservers| array| list of fixed IP representing the the DNS
        Name servers when the mode is 'custom'


        #### Supports Action Batches


        **Resource**|**Operation**

        :-------------: |:-------------:

        `/networks/{networkId}/cellularGateway/dhcp` | update

      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"dhcpLeaseTime\": \"<string>\",\n   
                \"dnsNameservers\": \"<string>\",\n    \"dnsCustomNameservers\":
                [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                dhcpLeaseTime: 1 hour
                dnsNameservers: custom
                dnsCustomNameservers:
                  - 172.16.2.111
                  - 172.16.2.30
  /devices/{serial}/cellularGateway/lan:
    get:
      tags:
        - PRODUCTS > Cellular Gateway > Configure > Lan
      summary: Show The LAN Settings Of A MG
      description: Show the LAN Settings of a MG
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: serial
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{serial}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                deviceName: name of the MG
                deviceLanIp: 192.168.0.33
                deviceSubnet: 192.168.0.32/27
                fixedIpAssignments:
                  - mac: 0b:00:00:00:00:ac
                    name: server 1
                    ip: 192.168.0.10
                  - mac: 0b:00:00:00:00:ab
                    name: server 2
                    ip: 192.168.0.20
                reservedIpRanges:
                  - start: 192.168.1.0
                    end: 192.168.1.1
                    comment: A reserved IP range
    put:
      tags:
        - PRODUCTS > Cellular Gateway > Configure > Lan
      summary: Update The LAN Settings For A Single MG
      description: >+
        Update the LAN Settings for a single MG.
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        reservedIpRanges| array| list of all reserved IP ranges for a single MG

        fixedIpAssignments| array| list of all fixed IP assignments for a single
        MG


        #### Supports Action Batches


        **Resource**|**Operation**

        :-------------: |:-------------:

        `/devices/{serial}/cellularGateway/lan` | update

      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"reservedIpRanges\": [\n        {\n           
                \"start\": \"<string>\",\n            \"end\":
                \"<string>\",\n            \"comment\": \"<string>\"\n       
                },\n        {\n            \"start\": \"<string>\",\n           
                \"end\": \"<string>\",\n            \"comment\":
                \"<string>\"\n        }\n    ],\n    \"fixedIpAssignments\":
                [\n        {\n            \"ip\": \"<string>\",\n           
                \"mac\": \"<string>\",\n            \"name\":
                \"<string>\"\n        },\n        {\n            \"ip\":
                \"<string>\",\n            \"mac\": \"<string>\",\n           
                \"name\": \"<string>\"\n        }\n    ]\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: serial
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{serial}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                deviceName: name of the MG
                deviceLanIp: 192.168.0.33
                deviceSubnet: 192.168.0.32/27
                fixedIpAssignments:
                  - mac: 0b:00:00:00:00:ac
                    name: server 1
                    ip: 192.168.0.10
                  - mac: 0b:00:00:00:00:ab
                    name: server 2
                    ip: 192.168.0.20
                reservedIpRanges:
                  - start: 192.168.1.0
                    end: 192.168.1.1
                    comment: A reserved IP range
  /devices/{serial}/cellularGateway/portForwardingRules:
    get:
      tags:
        - PRODUCTS > Cellular Gateway > Configure > Port Forwarding Rules
      summary: Returns The Port Forwarding Rules For A Single MG
      description: Returns the port forwarding rules for a single MG.
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: serial
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{serial}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                rules:
                  - lanIp: 172.31.128.5
                    name: test
                    access: any
                    publicPort: 11-12
                    localPort: '4'
                    uplink: both
                    protocol: tcp
                  - lanIp: 172.31.128.5
                    name: test 2
                    access: restricted
                    allowedIps:
                      - 10.10.10.10
                      - 10.10.10.11
                    publicPort: '99'
                    localPort: '5'
                    uplink: both
                    protocol: tcp
    put:
      tags:
        - PRODUCTS > Cellular Gateway > Configure > Port Forwarding Rules
      summary: Updates The Port Forwarding Rules For A Single MG
      description: |+
        Updates the port forwarding rules for a single MG.
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        rules| array| An array of port forwarding params

        #### Supports Action Batches

        **Resource**|**Operation**
        :-------------: |:-------------:
        `/devices/{serial}/cellularGateway/portForwardingRules` | update

      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"rules\": [\n        {\n            \"lanIp\":
                \"<string>\",\n            \"publicPort\":
                \"<string>\",\n            \"localPort\":
                \"<string>\",\n            \"protocol\":
                \"<string>\",\n            \"access\":
                \"<string>\",\n            \"name\": \"<string>\",\n           
                \"allowedIps\": [\n               
                \"<string>\",\n                \"<string>\"\n           
                ]\n        },\n        {\n            \"lanIp\":
                \"<string>\",\n            \"publicPort\":
                \"<string>\",\n            \"localPort\":
                \"<string>\",\n            \"protocol\":
                \"<string>\",\n            \"access\":
                \"<string>\",\n            \"name\": \"<string>\",\n           
                \"allowedIps\": [\n               
                \"<string>\",\n                \"<string>\"\n           
                ]\n        }\n    ]\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: serial
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{serial}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                rules:
                  - lanIp: 172.31.128.5
                    name: test
                    access: any
                    publicPort: 11-12
                    localPort: '4'
                    uplink: both
                    protocol: tcp
                  - lanIp: 172.31.128.5
                    name: test 2
                    access: restricted
                    allowedIps:
                      - 10.10.10.10
                      - 10.10.10.11
                    publicPort: '99'
                    localPort: '5'
                    uplink: both
                    protocol: tcp
  /networks/{networkId}/cellularGateway/subnetPool:
    get:
      tags:
        - PRODUCTS > Cellular Gateway > Configure > Subnet Pool
      summary: Return The Subnet Pool And Mask Configured For M Gs In The Network
      description: Return the subnet pool and mask configured for MGs in the network.
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                cidr: 192.168.0.0/16
                mask: '24'
                subnets:
                  - serial: AAAA-AAAA-AAAA
                    name: my first MG
                    applianceIp: 192.168.0.1
                    subnet: 192.168.0.0/24
                  - serial: BBBB-BBBB-BBBB
                    name: my second MG
                    applianceIp: 192.168.0.33
                    subnet: 192.168.0.32/24
    put:
      tags:
        - PRODUCTS > Cellular Gateway > Configure > Subnet Pool
      summary: Update The Subnet Pool And Mask Configuration For M Gs In The Network
      description: >+
        Update the subnet pool and mask configuration for MGs in the network.
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        mask| integer| Mask used for the subnet of all MGs in  this network.

        cidr| string| CIDR of the pool of subnets. Each MG in this network will
        automatically pick a subnet from this pool.


        #### Supports Action Batches


        **Resource**|**Operation**

        :-------------: |:-------------:

        `/networks/{networkId}/cellularGateway/subnetPool` | update

      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n    \"mask\": \"<integer>\",\n    \"cidr\": \"<string>\"\n}"'
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                cidr: 192.168.0.0/16
                mask: '24'
                subnets:
                  - serial: AAAA-AAAA-AAAA
                    name: my first MG
                    applianceIp: 192.168.0.1
                    subnet: 192.168.0.0/24
                  - serial: BBBB-BBBB-BBBB
                    name: my second MG
                    applianceIp: 192.168.0.33
                    subnet: 192.168.0.32/24
  /networks/{networkId}/cellularGateway/uplink:
    get:
      tags:
        - PRODUCTS > Cellular Gateway > Configure > Uplink
      summary: Returns The Uplink Settings For Your MG Network
      description: Returns the uplink settings for your MG network.
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                bandwidthLimits:
                  limitUp: 51200
                  limitDown: 51200
    put:
      tags:
        - PRODUCTS > Cellular Gateway > Configure > Uplink
      summary: Updates The Uplink Settings For Your MG Network
      description: >+
        Updates the uplink settings for your MG network.
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        bandwidthLimits| object| The bandwidth settings for the 'cellular'
        uplink


        #### Supports Action Batches


        **Resource**|**Operation**

        :-------------: |:-------------:

        `/networks/{networkId}/cellularGateway/uplink` | update

      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"bandwidthLimits\": {\n        \"limitUp\":
                \"<integer>\",\n        \"limitDown\": \"<integer>\"\n    }\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                bandwidthLimits:
                  limitUp: 51200
                  limitDown: 51200
  /organizations/{organizationId}/cellularGateway/uplink/statuses:
    get:
      tags:
        - PRODUCTS > Cellular Gateway > Monitor > uplink > statuses
      summary: >-
        List the uplink status of every Meraki MG cellular gateway in the
        organization
      description: >-
        List the uplink status of every Meraki MG cellular gateway in the
        organization
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: organizationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{organizationId}}'
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - networkId: N_24329156
                  serial: Q234-ABCD-5678
                  model: MG21
                  lastReportedAt: '2018-02-11T00:00:00Z'
                  uplinks:
                    - interface: cellular
                      status: ready
                      ip: 1.2.3.4
                      provider: at&t
                      publicIp: 123.123.123.1
                      model: integrated
                      signalStat:
                        rsrp: '-120'
                        rsrq: '-13'
                      connectionType: 4g
                      apn: internet
                      iccid: '123456789'
  /networks/{networkId}/switch/accessControlLists:
    get:
      tags:
        - PRODUCTS > Switch > Configure > Access Control Lists
      summary: Return The Access Control Lists For A MS Network
      description: Return the access control lists for a MS network
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                rules:
                  - comment: Deny SSH
                    policy: deny
                    ipVersion: ipv4
                    protocol: tcp
                    srcCidr: 10.1.10.0/24
                    srcPort: any
                    dstCidr: 172.16.30/24
                    dstPort: 22
                    vlan: 10
                  - comment: Default rule
                    policy: allow
                    ipVersion: any
                    protocol: any
                    srcCidr: any
                    srcPort: any
                    dstCidr: any
                    dstPort: any
                    vlan: any
    put:
      tags:
        - PRODUCTS > Switch > Configure > Access Control Lists
      summary: Update The Access Control Lists For A MS Network
      description: >
        Update the access control lists for a MS network
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        rules| array| An ordered array of the access control list rules (not
        including the default rule). An empty array will clear the rules.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"rules\": [\n        {\n            \"policy\":
                \"<string>\",\n            \"protocol\":
                \"<string>\",\n            \"srcCidr\":
                \"<string>\",\n            \"dstCidr\":
                \"<string>\",\n            \"comment\":
                \"<string>\",\n            \"ipVersion\":
                \"<string>\",\n            \"srcPort\":
                \"<string>\",\n            \"dstPort\":
                \"<string>\",\n            \"vlan\": \"<string>\"\n       
                },\n        {\n            \"policy\":
                \"<string>\",\n            \"protocol\":
                \"<string>\",\n            \"srcCidr\":
                \"<string>\",\n            \"dstCidr\":
                \"<string>\",\n            \"comment\":
                \"<string>\",\n            \"ipVersion\":
                \"<string>\",\n            \"srcPort\":
                \"<string>\",\n            \"dstPort\":
                \"<string>\",\n            \"vlan\": \"<string>\"\n       
                }\n    ]\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                rules:
                  - comment: Deny SSH
                    policy: deny
                    ipVersion: ipv4
                    protocol: tcp
                    srcCidr: 10.1.10.0/24
                    srcPort: any
                    dstCidr: 172.16.30/24
                    dstPort: 22
                    vlan: 10
                  - comment: Default rule
                    policy: allow
                    ipVersion: any
                    protocol: any
                    srcCidr: any
                    srcPort: any
                    dstCidr: any
                    dstPort: any
                    vlan: any
  /networks/{networkId}/switch/accessPolicies:
    post:
      tags:
        - PRODUCTS > Switch > Configure > Access Policies
      summary: Create An Access Policy For A Switch Network
      description: >-
        Create an access policy for a switch network. This endpoint only
        supports access policies with 'My RADIUS server' as authentication
        method.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"name\": \"<string>\",\n    \"radiusServers\":
                [\n        {\n            \"host\": \"<string>\",\n           
                \"port\": \"<integer>\",\n            \"secret\":
                \"<string>\"\n        },\n        {\n            \"host\":
                \"<string>\",\n            \"port\": \"<integer>\",\n           
                \"secret\": \"<string>\"\n        }\n    ],\n   
                \"radiusTestingEnabled\": \"<boolean>\",\n   
                \"radiusCoaSupportEnabled\": \"<boolean>\",\n   
                \"radiusAccountingEnabled\": \"<boolean>\",\n    \"hostMode\":
                \"<string>\",\n    \"urlRedirectWalledGardenEnabled\":
                \"<boolean>\",\n    \"radiusAccountingServers\": [\n       
                {\n            \"host\": \"<string>\",\n            \"port\":
                \"<integer>\",\n            \"secret\": \"<string>\"\n       
                },\n        {\n            \"host\": \"<string>\",\n           
                \"port\": \"<integer>\",\n            \"secret\":
                \"<string>\"\n        }\n    ],\n    \"radiusGroupAttribute\":
                \"<string>\",\n    \"accessPolicyType\": \"<string>\",\n   
                \"increaseAccessSpeed\": \"<boolean>\",\n    \"guestVlanId\":
                \"<integer>\",\n    \"voiceVlanClients\": \"<boolean>\",\n   
                \"urlRedirectWalledGardenRanges\": [\n       
                \"<string>\",\n        \"<string>\"\n    ]\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                accessPolicyNumber: '1234'
                name: 'Access policy #1'
                radiusServers:
                  - host: 1.2.3.4
                    port: 22
                    secret: password1
                radiusTestingEnabled: false
                radiusCoaSupportEnabled: false
                radiusAccountingEnabled: true
                radiusAccountingServers:
                  - host: 1.2.3.4
                    port: 22
                    secret: password1
                radiusGroupAttribute: '11'
                hostMode: Single-Host
                accessPolicyType: Hybrid authentication
                increaseAccessSpeed: false
                guestVlanId: 100
                voiceVlanClients: true
                urlRedirectWalledGardenEnabled: true
                urlRedirectWalledGardenRanges: 192.168.1.0/24
    get:
      tags:
        - PRODUCTS > Switch > Configure > Access Policies
      summary: List The Access Policies For A Switch Network
      description: >-
        List the access policies for a switch network. Only returns access
        policies with 'my RADIUS server' as authentication method
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - accessPolicyNumber: '1234'
                  name: 'Access policy #1'
                  radiusServers:
                    - host: 1.2.3.4
                      port: 22
                      secret: password1
                  radiusTestingEnabled: false
                  radiusCoaSupportEnabled: false
                  radiusAccountingEnabled: true
                  radiusAccountingServers:
                    - host: 1.2.3.4
                      port: 22
                      secret: password1
                  radiusGroupAttribute: '11'
                  hostMode: Single-Host
                  accessPolicyType: Hybrid authentication
                  increaseAccessSpeed: false
                  guestVlanId: 100
                  voiceVlanClients: true
                  urlRedirectWalledGardenEnabled: true
                  urlRedirectWalledGardenRanges: 192.168.1.0/24
  /networks/{networkId}/switch/accessPolicies/{accessPolicyNumber}:
    delete:
      tags:
        - PRODUCTS > Switch > Configure > Access Policies
      summary: Delete An Access Policy For A Switch Network
      description: >+
        Delete an access policy for a switch network

        #### Supports Action Batches


        **Resource**|**Operation**

        :-------------: |:-------------:

        `/networks/{networkId}/switch/accessPolicies/{accessPolicyNumber}` |
        destroy

      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: accessPolicyNumber
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{accessPolicyNumber}}'
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    get:
      tags:
        - PRODUCTS > Switch > Configure > Access Policies
      summary: Return A Specific Access Policy For A Switch Network
      description: Return a specific access policy for a switch network
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: accessPolicyNumber
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{accessPolicyNumber}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                accessPolicyNumber: '1234'
                name: 'Access policy #1'
                radiusServers:
                  - host: 1.2.3.4
                    port: 22
                    secret: password1
                radiusTestingEnabled: false
                radiusCoaSupportEnabled: false
                radiusAccountingEnabled: true
                radiusAccountingServers:
                  - host: 1.2.3.4
                    port: 22
                    secret: password1
                radiusGroupAttribute: '11'
                hostMode: Single-Host
                accessPolicyType: Hybrid authentication
                increaseAccessSpeed: false
                guestVlanId: 100
                voiceVlanClients: true
                urlRedirectWalledGardenEnabled: true
                urlRedirectWalledGardenRanges: 192.168.1.0/24
    put:
      tags:
        - PRODUCTS > Switch > Configure > Access Policies
      summary: Update An Access Policy For A Switch Network
      description: >-
        Update an access policy for a switch network. This endpoint only
        supports access policies with 'My RADIUS server' as authentication
        method.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"name\": \"<string>\",\n    \"radiusServers\":
                [\n        {\n            \"host\": \"<string>\",\n           
                \"port\": \"<integer>\",\n            \"secret\":
                \"<string>\"\n        },\n        {\n            \"host\":
                \"<string>\",\n            \"port\": \"<integer>\",\n           
                \"secret\": \"<string>\"\n        }\n    ],\n   
                \"radiusTestingEnabled\": \"<boolean>\",\n   
                \"radiusCoaSupportEnabled\": \"<boolean>\",\n   
                \"radiusAccountingEnabled\": \"<boolean>\",\n   
                \"radiusAccountingServers\": [\n        {\n            \"host\":
                \"<string>\",\n            \"port\": \"<integer>\",\n           
                \"secret\": \"<string>\"\n        },\n        {\n           
                \"host\": \"<string>\",\n            \"port\":
                \"<integer>\",\n            \"secret\": \"<string>\"\n       
                }\n    ],\n    \"radiusGroupAttribute\": \"<string>\",\n   
                \"hostMode\": \"<string>\",\n    \"accessPolicyType\":
                \"<string>\",\n    \"increaseAccessSpeed\": \"<boolean>\",\n   
                \"guestVlanId\": \"<integer>\",\n    \"voiceVlanClients\":
                \"<boolean>\",\n    \"urlRedirectWalledGardenEnabled\":
                \"<boolean>\",\n    \"urlRedirectWalledGardenRanges\":
                [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: accessPolicyNumber
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{accessPolicyNumber}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                accessPolicyNumber: '1234'
                name: 'Access policy #1'
                radiusServers:
                  - host: 1.2.3.4
                    port: 22
                    secret: password1
                radiusTestingEnabled: false
                radiusCoaSupportEnabled: false
                radiusAccountingEnabled: true
                radiusAccountingServers:
                  - host: 1.2.3.4
                    port: 22
                    secret: password1
                radiusGroupAttribute: '11'
                hostMode: Single-Host
                accessPolicyType: Hybrid authentication
                increaseAccessSpeed: false
                guestVlanId: 100
                voiceVlanClients: true
                urlRedirectWalledGardenEnabled: true
                urlRedirectWalledGardenRanges: 192.168.1.0/24
  /networks/{networkId}/switch/alternateManagementInterface:
    get:
      tags:
        - PRODUCTS > Switch > Configure > Alternate Management Interface
      summary: Return The Switch Alternate Management Interface For The Network
      description: Return the switch alternate management interface for the network
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                enabled: true
                vlanId: 100
                protocols:
                  - radius
                  - snmp
                  - syslog
                switches:
                  - serial: Q234-ABCD-5678
                    alternateManagementIp: 1.2.3.4
    put:
      tags:
        - PRODUCTS > Switch > Configure > Alternate Management Interface
      summary: Update The Switch Alternate Management Interface For The Network
      description: >+
        Update the switch alternate management interface for the network
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        enabled| boolean| Boolean value to enable or disable AMI configuration.
        If enabled, VLAN and protocols must be set

        vlanId| integer| Alternate management VLAN, must be between 1 and 4094

        protocols| array| Can be one or more of the following values: 'radius',
        'snmp' or 'syslog'

        switches| array| Array of switch serial number and IP assignment. If
        parameter is present, it cannot have empty body. Note: switches
        parameter is not applicable for template networks, in other words, do
        not put 'switches' in the body when updating template networks. Also, an
        empty 'switches' array will remove all previous assignments


        #### Supports Action Batches


        **Resource**|**Operation**

        :-------------: |:-------------:

        `/networks/{networkId}/switch/alternateManagementInterface` | update

      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"enabled\": \"<boolean>\",\n    \"vlanId\":
                \"<integer>\",\n    \"protocols\": [\n       
                \"<string>\",\n        \"<string>\"\n    ],\n    \"switches\":
                [\n        {\n            \"serial\": \"<string>\",\n           
                \"alternateManagementIp\": \"<string>\"\n        },\n       
                {\n            \"serial\": \"<string>\",\n           
                \"alternateManagementIp\": \"<string>\"\n        }\n    ]\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                enabled: true
                vlanId: 100
                protocols:
                  - radius
                  - snmp
                  - syslog
                switches:
                  - serial: Q234-ABCD-5678
                    alternateManagementIp: 1.2.3.4
  /organizations/{organizationId}/configTemplates/{configTemplateId}/switch/profiles/{profileId}/ports/{portId}:
    get:
      tags:
        - PRODUCTS > Switch > Configure > Config Templates > profiles > Ports
      summary: Return A Switch Profile Port
      description: Return a switch profile port
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: organizationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{organizationId}}'
        - name: configTemplateId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{configTemplateId}}'
        - name: profileId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{profileId}}'
        - name: portId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{portId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                portId: '1'
                name: My switch port
                tags:
                  - tag1
                  - tag2
                enabled: true
                poeEnabled: true
                type: access
                vlan: 10
                voiceVlan: 20
                isolationEnabled: false
                rstpEnabled: true
                stpGuard: disabled
                linkNegotiation: Auto negotiate
                portScheduleId: '1234'
                udld: Alert only
                accessPolicyType: Sticky MAC allow list
                stickyMacAllowList:
                  - 34:56:fe:ce:8e:b0
                  - 34:56:fe:ce:8e:b1
                stickyMacAllowListLimit: 5
                stormControlEnabled: true
    put:
      tags:
        - PRODUCTS > Switch > Configure > Config Templates > profiles > Ports
      summary: Update A Switch Profile Port
      description: >+
        Update a switch profile port
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        name| string| The name of the switch profile port

        tags| array| The list of tags of the switch profile port

        enabled| boolean| The status of the switch profile port

        type| string| The type of the switch profile port ('trunk' or 'access')

        vlan| integer| The VLAN of the switch profile port. A null value will
        clear the value set for trunk ports.

        voiceVlan| integer| The voice VLAN of the switch profile port. Only
        applicable to access ports

        allowedVlans| string| The VLANs allowed on the switch profile port. Only
        applicable to trunk ports

        poeEnabled| boolean| The PoE status of the switch profile port

        isolationEnabled| boolean| The isolation status of the switch profile
        port

        rstpEnabled| boolean| The rapid spanning tree protocol status

        stpGuard| string| The state of the STP guard ('disabled', 'root guard',
        'bpdu guard' or 'loop guard')

        linkNegotiation| string| The link speed for the switch profile port

        portScheduleId| string| The ID of the port schedule. A value of null
        will clear the port schedule.

        udld| string| The action to take when Unidirectional Link is detected
        (Alert only, Enforce). Default configuration is Alert only.

        accessPolicyType| string| The type of the access policy of the switch
        profile port. Only applicable to access ports. Can be one of 'Open',
        'Custom access policy', 'MAC allow list' or 'Sticky MAC allow list'

        accessPolicyNumber| integer| The number of a custom access policy to
        configure on the switch profile port. Only applicable when
        'accessPolicyType' is 'Custom access policy'

        macAllowList| array| Only devices with MAC addresses specified in this
        list will have access to this port. Up to 20 MAC addresses can be
        defined. Only applicable when 'accessPolicyType' is 'MAC allow list'

        stickyMacAllowList| array| The initial list of MAC addresses for sticky
        Mac allow list. Only applicable when 'accessPolicyType' is 'Sticky MAC
        allow list'

        stickyMacAllowListLimit| integer| The maximum number of MAC addresses
        for sticky MAC allow list. Only applicable when 'accessPolicyType' is
        'Sticky MAC allow list'

        stormControlEnabled| boolean| The storm control status of the switch
        profile port

        flexibleStackingEnabled| boolean| For supported switches (e.g.
        MS420/MS425), whether or not the port has flexible stacking enabled.


        #### Supports Action Batches


        **Resource**|**Operation**

        :-------------: |:-------------:

        `/organizations/{organizationId}/configTemplates/{configTemplateId}/switch/profiles/{profileId}/ports/{portId}`
        | update

      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"name\": \"<string>\",\n    \"tags\": [\n       
                \"<string>\",\n        \"<string>\"\n    ],\n    \"enabled\":
                \"<boolean>\",\n    \"type\": \"<string>\",\n    \"vlan\":
                \"<integer>\",\n    \"voiceVlan\": \"<integer>\",\n   
                \"allowedVlans\": \"<string>\",\n    \"poeEnabled\":
                \"<boolean>\",\n    \"isolationEnabled\": \"<boolean>\",\n   
                \"rstpEnabled\": \"<boolean>\",\n    \"stpGuard\":
                \"<string>\",\n    \"linkNegotiation\": \"<string>\",\n   
                \"portScheduleId\": \"<string>\",\n    \"udld\":
                \"<string>\",\n    \"accessPolicyType\": \"<string>\",\n   
                \"accessPolicyNumber\": \"<integer>\",\n    \"macAllowList\":
                [\n        \"<string>\",\n        \"<string>\"\n    ],\n   
                \"stickyMacAllowList\": [\n        \"<string>\",\n       
                \"<string>\"\n    ],\n    \"stickyMacAllowListLimit\":
                \"<integer>\",\n    \"stormControlEnabled\": \"<boolean>\",\n   
                \"flexibleStackingEnabled\": \"<boolean>\"\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: organizationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{organizationId}}'
        - name: configTemplateId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{configTemplateId}}'
        - name: profileId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{profileId}}'
        - name: portId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{portId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                portId: '1'
                name: My switch port
                tags:
                  - tag1
                  - tag2
                enabled: true
                poeEnabled: true
                type: access
                vlan: 10
                voiceVlan: 20
                isolationEnabled: false
                rstpEnabled: true
                stpGuard: disabled
                linkNegotiation: Auto negotiate
                portScheduleId: '1234'
                udld: Alert only
                accessPolicyType: Sticky MAC allow list
                stickyMacAllowList:
                  - 34:56:fe:ce:8e:b0
                  - 34:56:fe:ce:8e:b1
                stickyMacAllowListLimit: 5
                stormControlEnabled: true
  /organizations/{organizationId}/configTemplates/{configTemplateId}/switch/profiles/{profileId}/ports:
    get:
      tags:
        - PRODUCTS > Switch > Configure > Config Templates > profiles > Ports
      summary: Return All The Ports Of A Switch Profile
      description: Return all the ports of a switch profile
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: organizationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{organizationId}}'
        - name: configTemplateId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{configTemplateId}}'
        - name: profileId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{profileId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                portId: '1'
                name: My switch port
                tags:
                  - tag1
                  - tag2
                enabled: true
                poeEnabled: true
                type: access
                vlan: 10
                voiceVlan: 20
                isolationEnabled: false
                rstpEnabled: true
                stpGuard: disabled
                linkNegotiation: Auto negotiate
                portScheduleId: '1234'
                udld: Alert only
                accessPolicyType: Sticky MAC allow list
                stickyMacAllowList:
                  - 34:56:fe:ce:8e:b0
                  - 34:56:fe:ce:8e:b1
                stickyMacAllowListLimit: 5
                stormControlEnabled: true
  /organizations/{organizationId}/configTemplates/{configTemplateId}/switch/profiles:
    get:
      tags:
        - PRODUCTS > Switch > Configure > Config Templates > profiles
      summary: List The Switch Profiles For Your Switch Template Configuration
      description: List the switch profiles for your switch template configuration
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: organizationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{organizationId}}'
        - name: configTemplateId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{configTemplateId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - switchProfileId: '1234'
                  name: A Simple Switch Profile
                  model: MS450-24
  /organizations/{organizationId}/switch/devices/clone:
    post:
      tags:
        - PRODUCTS > Switch > Configure > Devices
      summary: >-
        Clone port-level and some switch-level configuration settings from a
        source switch to one or more target switches
      description: >-
        Clone port-level and some switch-level configuration settings from a
        source switch to one or more target switches. Cloned settings include:
        Aggregation Groups, Power Settings, Multicast Settings, MTU
        Configuration, STP Bridge priority, Port Mirroring
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"sourceSerial\": \"<string>\",\n    \"targetSerials\":
                [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: organizationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{organizationId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                sourceSerial: Q234-ABCD-5678
                targetSerials:
                  - Q234-ABCD-0001
                  - Q234-ABCD-0002
                  - Q234-ABCD-0003
  /networks/{networkId}/switch/dhcpServerPolicy:
    get:
      tags:
        - PRODUCTS > Switch > Configure > Dhcp Server Policy
      summary: Return The DHCP Server Policy
      description: Return the DHCP server policy
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                defaultPolicy: block
                allowedServers:
                  - '00:50:56:00:00:01'
                  - '00:50:56:00:00:02'
    put:
      tags:
        - PRODUCTS > Switch > Configure > Dhcp Server Policy
      summary: Update The DHCP Server Policy
      description: >+
        Update the DHCP server policy
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        defaultPolicy| string| 'allow' or 'block' new DHCP servers. Default
        value is 'allow'.

        allowedServers| array| List the MAC addresses of DHCP servers to permit
        on the network. Applicable only if defaultPolicy is set to block. An
        empty array will clear the entries.

        blockedServers| array| List the MAC addresses of DHCP servers to block
        on the network. Applicable only if defaultPolicy is set to allow. An
        empty array will clear the entries.


        #### Supports Action Batches


        **Resource**|**Operation**

        :-------------: |:-------------:

        `/networks/{networkId}/switch/dhcpServerPolicy` | update

      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"defaultPolicy\": \"<string>\",\n   
                \"allowedServers\": [\n        \"<string>\",\n       
                \"<string>\"\n    ],\n    \"blockedServers\": [\n       
                \"<string>\",\n        \"<string>\"\n    ]\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                defaultPolicy: block
                allowedServers:
                  - '00:50:56:00:00:01'
                  - '00:50:56:00:00:02'
  /networks/{networkId}/switch/dscpToCosMappings:
    get:
      tags:
        - PRODUCTS > Switch > Configure > Dscp To Cos Mappings
      summary: Return The DSCP To Co S Mappings
      description: Return the DSCP to CoS mappings
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                mappings:
                  - dscp: 1
                    cos: 1
                    title: Video
    put:
      tags:
        - PRODUCTS > Switch > Configure > Dscp To Cos Mappings
      summary: Update The DSCP To Co S Mappings
      description: >+
        Update the DSCP to CoS mappings
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        mappings| array| An array of DSCP to CoS mappings. An empty array will
        reset the mappings to default.


        #### Supports Action Batches


        **Resource**|**Operation**

        :-------------: |:-------------:

        `/networks/{networkId}/switch/dscpToCosMappings` | update

      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"mappings\": [\n        {\n            \"dscp\":
                \"<integer>\",\n            \"cos\": \"<integer>\",\n           
                \"title\": \"<string>\"\n        },\n        {\n           
                \"dscp\": \"<integer>\",\n            \"cos\":
                \"<integer>\",\n            \"title\": \"<string>\"\n       
                }\n    ]\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                mappings:
                  - dscp: 1
                    cos: 1
                    title: Video
  /networks/{networkId}/switch/linkAggregations:
    post:
      tags:
        - PRODUCTS > Switch > Configure > Link Aggregations
      summary: Create A Link Aggregation Group
      description: >+
        Create a link aggregation group
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        switchPorts| array| Array of switch or stack ports for creating
        aggregation group. Minimum 2 and maximum 8 ports are supported.

        switchProfilePorts| array| Array of switch profile ports for creating
        aggregation group. Minimum 2 and maximum 8 ports are supported.


        #### Supports Action Batches


        **Resource**|**Operation**

        :-------------: |:-------------:

        `/networks/{networkId}/switch/linkAggregations` | create

      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"switchPorts\": [\n        {\n            \"serial\":
                \"<string>\",\n            \"portId\": \"<string>\"\n       
                },\n        {\n            \"serial\":
                \"<string>\",\n            \"portId\": \"<string>\"\n       
                }\n    ],\n    \"switchProfilePorts\": [\n        {\n           
                \"profile\": \"<string>\",\n            \"portId\":
                \"<string>\"\n        },\n        {\n            \"profile\":
                \"<string>\",\n            \"portId\": \"<string>\"\n       
                }\n    ]\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: NDU2N18yXzM=
                switchPorts:
                  - serial: Q234-ABCD-0001
                    portId: '1'
                  - serial: Q234-ABCD-0002
                    portId: '2'
                  - serial: Q234-ABCD-0003
                    portId: '3'
                  - serial: Q234-ABCD-0004
                    portId: '4'
                  - serial: Q234-ABCD-0005
                    portId: '5'
                  - serial: Q234-ABCD-0006
                    portId: '6'
                  - serial: Q234-ABCD-0007
                    portId: '7'
                  - serial: Q234-ABCD-0008
                    portId: '8'
    get:
      tags:
        - PRODUCTS > Switch > Configure > Link Aggregations
      summary: List Link Aggregation Groups
      description: List link aggregation groups
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: NDU2N18yXzM=
                  switchPorts:
                    - serial: Q234-ABCD-0001
                      portId: '1'
                    - serial: Q234-ABCD-0002
                      portId: '2'
                    - serial: Q234-ABCD-0003
                      portId: '3'
                    - serial: Q234-ABCD-0004
                      portId: '4'
                    - serial: Q234-ABCD-0005
                      portId: '5'
                    - serial: Q234-ABCD-0006
                      portId: '6'
                    - serial: Q234-ABCD-0007
                      portId: '7'
                    - serial: Q234-ABCD-0008
                      portId: '8'
  /networks/{networkId}/switch/linkAggregations/{linkAggregationId}:
    delete:
      tags:
        - PRODUCTS > Switch > Configure > Link Aggregations
      summary: Split A Link Aggregation Group Into Separate Ports
      description: >+
        Split a link aggregation group into separate ports

        #### Supports Action Batches


        **Resource**|**Operation**

        :-------------: |:-------------:

        `/networks/{networkId}/switch/linkAggregations/{linkAggregationId}` |
        destroy

      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: linkAggregationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{linkAggregationId}}'
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    put:
      tags:
        - PRODUCTS > Switch > Configure > Link Aggregations
      summary: Update A Link Aggregation Group
      description: >+
        Update a link aggregation group
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        switchPorts| array| Array of switch or stack ports for updating
        aggregation group. Minimum 2 and maximum 8 ports are supported.

        switchProfilePorts| array| Array of switch profile ports for updating
        aggregation group. Minimum 2 and maximum 8 ports are supported.


        #### Supports Action Batches


        **Resource**|**Operation**

        :-------------: |:-------------:

        `/networks/{networkId}/switch/linkAggregations/{linkAggregationId}` |
        update

      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"switchPorts\": [\n        {\n            \"serial\":
                \"<string>\",\n            \"portId\": \"<string>\"\n       
                },\n        {\n            \"serial\":
                \"<string>\",\n            \"portId\": \"<string>\"\n       
                }\n    ],\n    \"switchProfilePorts\": [\n        {\n           
                \"profile\": \"<string>\",\n            \"portId\":
                \"<string>\"\n        },\n        {\n            \"profile\":
                \"<string>\",\n            \"portId\": \"<string>\"\n       
                }\n    ]\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: linkAggregationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{linkAggregationId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: NDU2N18yXzM=
                switchPorts:
                  - serial: Q234-ABCD-0001
                    portId: '1'
                  - serial: Q234-ABCD-0002
                    portId: '2'
                  - serial: Q234-ABCD-0003
                    portId: '3'
                  - serial: Q234-ABCD-0004
                    portId: '4'
                  - serial: Q234-ABCD-0005
                    portId: '5'
                  - serial: Q234-ABCD-0006
                    portId: '6'
                  - serial: Q234-ABCD-0007
                    portId: '7'
                  - serial: Q234-ABCD-0008
                    portId: '8'
  /networks/{networkId}/switch/mtu:
    get:
      tags:
        - PRODUCTS > Switch > Configure > Mtu
      summary: Return The MTU Configuration
      description: Return the MTU configuration
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                defaultMtuSize: 9578
                overrides:
                  - switches:
                      - Q234-ABCD-0001
                      - Q234-ABCD-0002
                      - Q234-ABCD-0003
                    mtuSize: 1500
                  - switchProfiles:
                      - '1284392014819'
                      - '2983092129865'
                    mtuSize: 1600
    put:
      tags:
        - PRODUCTS > Switch > Configure > Mtu
      summary: Update The MTU Configuration
      description: >+
        Update the MTU configuration
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        defaultMtuSize| integer| MTU size for the entire network. Default value
        is 9578.

        overrides| array| Override MTU size for individual switches or switch
        profiles. An empty array will clear overrides.


        #### Supports Action Batches


        **Resource**|**Operation**

        :-------------: |:-------------:

        `/networks/{networkId}/switch/mtu` | update

      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"defaultMtuSize\": \"<integer>\",\n    \"overrides\":
                [\n        {\n            \"mtuSize\":
                \"<integer>\",\n            \"switches\": [\n               
                \"<string>\",\n                \"<string>\"\n           
                ],\n            \"switchProfiles\": [\n               
                \"<string>\",\n                \"<string>\"\n           
                ]\n        },\n        {\n            \"mtuSize\":
                \"<integer>\",\n            \"switches\": [\n               
                \"<string>\",\n                \"<string>\"\n           
                ],\n            \"switchProfiles\": [\n               
                \"<string>\",\n                \"<string>\"\n           
                ]\n        }\n    ]\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                defaultMtuSize: 9578
                overrides:
                  - switches:
                      - Q234-ABCD-0001
                      - Q234-ABCD-0002
                      - Q234-ABCD-0003
                    mtuSize: 1500
                  - switchProfiles:
                      - '1284392014819'
                      - '2983092129865'
                    mtuSize: 1600
  /networks/{networkId}/switch/portSchedules:
    post:
      tags:
        - PRODUCTS > Switch > Configure > Port Schedules
      summary: Add A Switch Port Schedule
      description: >+
        Add a switch port schedule
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        name| string| The name for your port schedule. Required

        portSchedule| object|     The schedule for switch port scheduling.
        Schedules are applied to days of the week.
            When it's empty, default schedule with all days of a week are configured.
            Any unspecified day in the schedule is added as a default schedule configuration of the day.

      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"name\": \"<string>\",\n    \"portSchedule\":
                {\n        \"monday\": {\n            \"active\":
                \"<boolean>\",\n            \"from\": \"<string>\",\n           
                \"to\": \"<string>\"\n        },\n        \"tuesday\":
                {\n            \"active\": \"<boolean>\",\n            \"from\":
                \"<string>\",\n            \"to\": \"<string>\"\n       
                },\n        \"wednesday\": {\n            \"active\":
                \"<boolean>\",\n            \"from\": \"<string>\",\n           
                \"to\": \"<string>\"\n        },\n        \"thursday\":
                {\n            \"active\": \"<boolean>\",\n            \"from\":
                \"<string>\",\n            \"to\": \"<string>\"\n       
                },\n        \"friday\": {\n            \"active\":
                \"<boolean>\",\n            \"from\": \"<string>\",\n           
                \"to\": \"<string>\"\n        },\n        \"saturday\":
                {\n            \"active\": \"<boolean>\",\n            \"from\":
                \"<string>\",\n            \"to\": \"<string>\"\n       
                },\n        \"sunday\": {\n            \"active\":
                \"<boolean>\",\n            \"from\": \"<string>\",\n           
                \"to\": \"<string>\"\n        }\n    }\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: '1234'
                networkId: N_24329156
                name: Weekdays schedule
                portSchedule:
                  monday:
                    active: true
                    from: '9:00'
                    to: '17:00'
                  tuesday:
                    active: true
                    from: '9:00'
                    to: '17:00'
                  wednesday:
                    active: true
                    from: '9:00'
                    to: '17:00'
                  thursday:
                    active: true
                    from: '9:00'
                    to: '17:00'
                  friday:
                    active: true
                    from: '9:00'
                    to: '17:00'
                  saturday:
                    active: false
                    from: '0:00'
                    to: '24:00'
                  sunday:
                    active: false
                    from: '0:00'
                    to: '24:00'
    get:
      tags:
        - PRODUCTS > Switch > Configure > Port Schedules
      summary: List Switch Port Schedules
      description: List switch port schedules
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: '1234'
                  networkId: N_24329156
                  name: Weekdays schedule
                  portSchedule:
                    monday:
                      active: true
                      from: '9:00'
                      to: '17:00'
                    tuesday:
                      active: true
                      from: '9:00'
                      to: '17:00'
                    wednesday:
                      active: true
                      from: '9:00'
                      to: '17:00'
                    thursday:
                      active: true
                      from: '9:00'
                      to: '17:00'
                    friday:
                      active: true
                      from: '9:00'
                      to: '17:00'
                    saturday:
                      active: false
                      from: '0:00'
                      to: '24:00'
                    sunday:
                      active: false
                      from: '0:00'
                      to: '24:00'
  /networks/{networkId}/switch/portSchedules/{portScheduleId}:
    delete:
      tags:
        - PRODUCTS > Switch > Configure > Port Schedules
      summary: Delete A Switch Port Schedule
      description: Delete a switch port schedule
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: portScheduleId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{portScheduleId}}'
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    put:
      tags:
        - PRODUCTS > Switch > Configure > Port Schedules
      summary: Update A Switch Port Schedule
      description: >+
        Update a switch port schedule
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        name| string| The name for your port schedule.

        portSchedule| object|     The schedule for switch port scheduling.
        Schedules are applied to days of the week.
            When it's empty, default schedule with all days of a week are configured.
            Any unspecified day in the schedule is added as a default schedule configuration of the day.


        #### Supports Action Batches


        **Resource**|**Operation**

        :-------------: |:-------------:

        `/networks/{networkId}/switch/portSchedules/{portScheduleId}` | update

      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"name\": \"<string>\",\n    \"portSchedule\":
                {\n        \"monday\": {\n            \"active\":
                \"<boolean>\",\n            \"from\": \"<string>\",\n           
                \"to\": \"<string>\"\n        },\n        \"tuesday\":
                {\n            \"active\": \"<boolean>\",\n            \"from\":
                \"<string>\",\n            \"to\": \"<string>\"\n       
                },\n        \"wednesday\": {\n            \"active\":
                \"<boolean>\",\n            \"from\": \"<string>\",\n           
                \"to\": \"<string>\"\n        },\n        \"thursday\":
                {\n            \"active\": \"<boolean>\",\n            \"from\":
                \"<string>\",\n            \"to\": \"<string>\"\n       
                },\n        \"friday\": {\n            \"active\":
                \"<boolean>\",\n            \"from\": \"<string>\",\n           
                \"to\": \"<string>\"\n        },\n        \"saturday\":
                {\n            \"active\": \"<boolean>\",\n            \"from\":
                \"<string>\",\n            \"to\": \"<string>\"\n       
                },\n        \"sunday\": {\n            \"active\":
                \"<boolean>\",\n            \"from\": \"<string>\",\n           
                \"to\": \"<string>\"\n        }\n    }\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: portScheduleId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{portScheduleId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: '1234'
                networkId: N_24329156
                name: Weekdays schedule
                portSchedule:
                  monday:
                    active: true
                    from: '9:00'
                    to: '17:00'
                  tuesday:
                    active: true
                    from: '9:00'
                    to: '17:00'
                  wednesday:
                    active: true
                    from: '9:00'
                    to: '17:00'
                  thursday:
                    active: true
                    from: '9:00'
                    to: '17:00'
                  friday:
                    active: true
                    from: '9:00'
                    to: '17:00'
                  saturday:
                    active: false
                    from: '0:00'
                    to: '24:00'
                  sunday:
                    active: false
                    from: '0:00'
                    to: '24:00'
  /devices/{serial}/switch/ports:
    get:
      tags:
        - PRODUCTS > Switch > Configure > Ports
      summary: List The Switch Ports For A Switch
      description: List the switch ports for a switch
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: serial
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{serial}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - portId: '1'
                  name: My switch port
                  tags:
                    - tag1
                    - tag2
                  enabled: true
                  poeEnabled: true
                  type: access
                  vlan: 10
                  voiceVlan: 20
                  isolationEnabled: false
                  rstpEnabled: true
                  stpGuard: disabled
                  linkNegotiation: Auto negotiate
                  portScheduleId: '1234'
                  udld: Alert only
                  accessPolicyType: Sticky MAC allow list
                  stickyMacAllowList:
                    - 34:56:fe:ce:8e:b0
                    - 34:56:fe:ce:8e:b1
                  stickyMacAllowListLimit: 5
                  stormControlEnabled: true
  /devices/{serial}/switch/ports/{portId}:
    get:
      tags:
        - PRODUCTS > Switch > Configure > Ports
      summary: Return A Switch Port
      description: Return a switch port
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: serial
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{serial}}'
        - name: portId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{portId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                portId: '1'
                name: My switch port
                tags:
                  - tag1
                  - tag2
                enabled: true
                poeEnabled: true
                type: access
                vlan: 10
                voiceVlan: 20
                isolationEnabled: false
                rstpEnabled: true
                stpGuard: disabled
                linkNegotiation: Auto negotiate
                portScheduleId: '1234'
                udld: Alert only
                accessPolicyType: Sticky MAC allow list
                stickyMacAllowList:
                  - 34:56:fe:ce:8e:b0
                  - 34:56:fe:ce:8e:b1
                stickyMacAllowListLimit: 5
                stormControlEnabled: true
    put:
      tags:
        - PRODUCTS > Switch > Configure > Ports
      summary: Update A Switch Port
      description: >+
        Update a switch port
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        name| string| The name of the switch port

        tags| array| The list of tags of the switch port

        enabled| boolean| The status of the switch port

        type| string| The type of the switch port ('trunk' or 'access')

        vlan| integer| The VLAN of the switch port. A null value will clear the
        value set for trunk ports.

        voiceVlan| integer| The voice VLAN of the switch port. Only applicable
        to access ports.

        allowedVlans| string| The VLANs allowed on the switch port. Only
        applicable to trunk ports.

        poeEnabled| boolean| The PoE status of the switch port

        isolationEnabled| boolean| The isolation status of the switch port

        rstpEnabled| boolean| The rapid spanning tree protocol status

        stpGuard| string| The state of the STP guard ('disabled', 'root guard',
        'bpdu guard' or 'loop guard')

        linkNegotiation| string| The link speed for the switch port

        portScheduleId| string| The ID of the port schedule. A value of null
        will clear the port schedule.

        udld| string| The action to take when Unidirectional Link is detected
        (Alert only, Enforce). Default configuration is Alert only.

        accessPolicyType| string| The type of the access policy of the switch
        port. Only applicable to access ports. Can be one of 'Open', 'Custom
        access policy', 'MAC allow list' or 'Sticky MAC allow list'

        accessPolicyNumber| integer| The number of a custom access policy to
        configure on the switch port. Only applicable when 'accessPolicyType' is
        'Custom access policy'

        macAllowList| array| Only devices with MAC addresses specified in this
        list will have access to this port. Up to 20 MAC addresses can be
        defined. Only applicable when 'accessPolicyType' is 'MAC allow list'

        stickyMacAllowList| array| The initial list of MAC addresses for sticky
        Mac allow list. Only applicable when 'accessPolicyType' is 'Sticky MAC
        allow list'

        stickyMacAllowListLimit| integer| The maximum number of MAC addresses
        for sticky MAC allow list. Only applicable when 'accessPolicyType' is
        'Sticky MAC allow list'

        stormControlEnabled| boolean| The storm control status of the switch
        port

        flexibleStackingEnabled| boolean| For supported switches (e.g.
        MS420/MS425), whether or not the port has flexible stacking enabled.


        #### Supports Action Batches


        **Resource**|**Operation**

        :-------------: |:-------------:

        `/devices/{serial}/switch/ports/{portId}` | update

      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"name\": \"<string>\",\n    \"tags\": [\n       
                \"<string>\",\n        \"<string>\"\n    ],\n    \"enabled\":
                \"<boolean>\",\n    \"type\": \"<string>\",\n    \"vlan\":
                \"<integer>\",\n    \"voiceVlan\": \"<integer>\",\n   
                \"allowedVlans\": \"<string>\",\n    \"poeEnabled\":
                \"<boolean>\",\n    \"isolationEnabled\": \"<boolean>\",\n   
                \"rstpEnabled\": \"<boolean>\",\n    \"stpGuard\":
                \"<string>\",\n    \"linkNegotiation\": \"<string>\",\n   
                \"portScheduleId\": \"<string>\",\n    \"udld\":
                \"<string>\",\n    \"accessPolicyType\": \"<string>\",\n   
                \"accessPolicyNumber\": \"<integer>\",\n    \"macAllowList\":
                [\n        \"<string>\",\n        \"<string>\"\n    ],\n   
                \"stickyMacAllowList\": [\n        \"<string>\",\n       
                \"<string>\"\n    ],\n    \"stickyMacAllowListLimit\":
                \"<integer>\",\n    \"stormControlEnabled\": \"<boolean>\",\n   
                \"flexibleStackingEnabled\": \"<boolean>\"\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: serial
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{serial}}'
        - name: portId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{portId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                portId: '1'
                name: My switch port
                tags:
                  - tag1
                  - tag2
                enabled: true
                poeEnabled: true
                type: access
                vlan: 10
                voiceVlan: 20
                isolationEnabled: false
                rstpEnabled: true
                stpGuard: disabled
                linkNegotiation: Auto negotiate
                portScheduleId: '1234'
                udld: Alert only
                accessPolicyType: Sticky MAC allow list
                stickyMacAllowList:
                  - 34:56:fe:ce:8e:b0
                  - 34:56:fe:ce:8e:b1
                stickyMacAllowListLimit: 5
                stormControlEnabled: true
  /networks/{networkId}/switch/qosRules/order:
    get:
      tags:
        - PRODUCTS > Switch > Configure > Qos Rules > Order
      summary: >-
        Return The Quality Of Service Rule I Ds By Order In Which They Will Be
        Processed By The Switch
      description: >-
        Return the quality of service rule IDs by order in which they will be
        processed by the switch
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ruleIds:
                  - '1284392014819'
                  - '2983092129865'
    put:
      tags:
        - PRODUCTS > Switch > Configure > Qos Rules > Order
      summary: Update The Order In Which The Rules Should Be Processed By The Switch
      description: >+
        Update the order in which the rules should be processed by the switch
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        ruleIds| array| A list of quality of service rule IDs arranged in order
        in which they should be processed by the switch.


        #### Supports Action Batches


        **Resource**|**Operation**

        :-------------: |:-------------:

        `/networks/{networkId}/switch/qosRules/order` | update_order

      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"ruleIds\": [\n        \"<string>\",\n       
                \"<string>\"\n    ]\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ruleIds:
                  - '1284392014819'
                  - '2983092129865'
  /networks/{networkId}/switch/qosRules:
    post:
      tags:
        - PRODUCTS > Switch > Configure > Qos Rules
      summary: Add A Quality Of Service Rule
      description: >+
        Add a quality of service rule
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        vlan| integer| The VLAN of the incoming packet. A null value will match
        any VLAN.

        protocol| string| The protocol of the incoming packet. Can be one of
        "ANY", "TCP" or "UDP". Default value is "ANY"

        srcPort| integer| The source port of the incoming packet. Applicable
        only if protocol is TCP or UDP.

        srcPortRange| string| The source port range of the incoming packet.
        Applicable only if protocol is set to TCP or UDP. Example: 70-80

        dstPort| integer| The destination port of the incoming packet.
        Applicable only if protocol is TCP or UDP.

        dstPortRange| string| The destination port range of the incoming packet.
        Applicable only if protocol is set to TCP or UDP. Example: 70-80

        dscp| integer| DSCP tag. Set this to -1 to trust incoming DSCP. Default
        value is 0


        #### Supports Action Batches


        **Resource**|**Operation**

        :-------------: |:-------------:

        `/networks/{networkId}/switch/qosRules` | create

      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"vlan\": \"<integer>\",\n    \"protocol\":
                \"<string>\",\n    \"srcPort\": \"<integer>\",\n   
                \"srcPortRange\": \"<string>\",\n    \"dstPort\":
                \"<integer>\",\n    \"dstPortRange\": \"<string>\",\n   
                \"dscp\": \"<integer>\"\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: '1284392014819'
                vlan: 100
                protocol: TCP
                srcPort: 2000
                srcPortRange: null
                dstPort: null
                dstPortRange: 3000-3100
                dscp: 0
    get:
      tags:
        - PRODUCTS > Switch > Configure > Qos Rules
      summary: List Quality Of Service Rules
      description: List quality of service rules
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: '1284392014819'
                  vlan: 100
                  protocol: TCP
                  srcPort: 2000
                  srcPortRange: null
                  dstPort: null
                  dstPortRange: 3000-3100
                  dscp: 0
  /networks/{networkId}/switch/qosRules/{qosRuleId}:
    delete:
      tags:
        - PRODUCTS > Switch > Configure > Qos Rules
      summary: Delete A Quality Of Service Rule
      description: |+
        Delete a quality of service rule
        #### Supports Action Batches

        **Resource**|**Operation**
        :-------------: |:-------------:
        `/networks/{networkId}/switch/qosRules/{qosRuleId}` | destroy

      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: qosRuleId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{qosRuleId}}'
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    get:
      tags:
        - PRODUCTS > Switch > Configure > Qos Rules
      summary: Return A Quality Of Service Rule
      description: Return a quality of service rule
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: qosRuleId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{qosRuleId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: '1284392014819'
                vlan: 100
                protocol: TCP
                srcPort: 2000
                srcPortRange: null
                dstPort: null
                dstPortRange: 3000-3100
                dscp: 0
    put:
      tags:
        - PRODUCTS > Switch > Configure > Qos Rules
      summary: Update A Quality Of Service Rule
      description: >+
        Update a quality of service rule
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        vlan| integer| The VLAN of the incoming packet. A null value will match
        any VLAN.

        protocol| string| The protocol of the incoming packet. Can be one of
        "ANY", "TCP" or "UDP". Default value is "ANY".

        srcPort| integer| The source port of the incoming packet. Applicable
        only if protocol is TCP or UDP.

        srcPortRange| string| The source port range of the incoming packet.
        Applicable only if protocol is set to TCP or UDP. Example: 70-80

        dstPort| integer| The destination port of the incoming packet.
        Applicable only if protocol is TCP or UDP.

        dstPortRange| string| The destination port range of the incoming packet.
        Applicable only if protocol is set to TCP or UDP. Example: 70-80

        dscp| integer| DSCP tag that should be assigned to incoming packet. Set
        this to -1 to trust incoming DSCP. Default value is 0.


        #### Supports Action Batches


        **Resource**|**Operation**

        :-------------: |:-------------:

        `/networks/{networkId}/switch/qosRules/{qosRuleId}` | update

      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"vlan\": \"<integer>\",\n    \"protocol\":
                \"<string>\",\n    \"srcPort\": \"<integer>\",\n   
                \"srcPortRange\": \"<string>\",\n    \"dstPort\":
                \"<integer>\",\n    \"dstPortRange\": \"<string>\",\n   
                \"dscp\": \"<integer>\"\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: qosRuleId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{qosRuleId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: '1284392014819'
                vlan: 100
                protocol: TCP
                srcPort: 2000
                srcPortRange: null
                dstPort: null
                dstPortRange: 3000-3100
                dscp: 0
  /devices/{serial}/switch/routing/interfaces/{interfaceId}/dhcp:
    get:
      tags:
        - PRODUCTS > Switch > Configure > Routing > Interfaces > Dhcp
      summary: Return A Layer 3 Interface DHCP Configuration For A Switch
      description: Return a layer 3 interface DHCP configuration for a switch
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: serial
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{serial}}'
        - name: interfaceId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{interfaceId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                dhcpMode: dhcpServer
                dhcpLeaseTime: 1 day
                dnsNameserversOption: custom
                dnsCustomNameservers:
                  - 8.8.8.8, 8.8.4.4
                bootOptionsEnabled: true
                bootNextServer: 1.2.3.4
                bootFileName: home_boot_file
                dhcpOptions:
                  - code: '5'
                    type: text
                    value: five
                reservedIpRanges:
                  - start: 192.168.1.1
                    end: 192.168.1.10
                    comment: A reserved IP range
                fixedIpAssignments:
                  - mac: '22:33:44:55:66:77'
                    name: Cisco Meraki valued client
                    ip: 192.168.1.12
    put:
      tags:
        - PRODUCTS > Switch > Configure > Routing > Interfaces > Dhcp
      summary: Update A Layer 3 Interface DHCP Configuration For A Switch
      description: >+
        Update a layer 3 interface DHCP configuration for a switch
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        dhcpMode| string| The DHCP mode options for the switch interface
        ('dhcpDisabled', 'dhcpRelay' or 'dhcpServer')

        dhcpRelayServerIps| array| The DHCP relay server IPs to which DHCP
        packets would get relayed for the switch interface

        dhcpLeaseTime| string| The DHCP lease time config for the dhcp server
        running on switch interface ('30 minutes', '1 hour', '4 hours', '12
        hours', '1 day' or '1 week')

        dnsNameserversOption| string| The DHCP name server option for the dhcp
        server running on the switch interface ('googlePublicDns', 'openDns' or
        'custom')

        dnsCustomNameservers| array| The DHCP name server IPs when DHCP name
        server option is 'custom'

        bootOptionsEnabled| boolean| Enable DHCP boot options to provide PXE
        boot options configs for the dhcp server running on the switch interface

        bootNextServer| string| The PXE boot server IP for the DHCP server
        running on the switch interface

        bootFileName| string| The PXE boot server filename for the DHCP server
        running on the switch interface

        dhcpOptions| array| Array of DHCP options consisting of code, type and
        value for the DHCP server running on the switch interface

        reservedIpRanges| array| Array of DHCP reserved IP assignments for the
        DHCP server running on the switch interface

        fixedIpAssignments| array| Array of DHCP fixed IP assignments for the
        DHCP server running on the switch interface


        #### Supports Action Batches


        **Resource**|**Operation**

        :-------------: |:-------------:

        `/devices/{serial}/switch/routing/interfaces/{interfaceId}/dhcp` |
        update

      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"dhcpMode\": \"<string>\",\n    \"dhcpRelayServerIps\":
                [\n        \"<string>\",\n        \"<string>\"\n    ],\n   
                \"dhcpLeaseTime\": \"<string>\",\n    \"dnsNameserversOption\":
                \"<string>\",\n    \"dnsCustomNameservers\": [\n       
                \"<string>\",\n        \"<string>\"\n    ],\n   
                \"bootOptionsEnabled\": \"<boolean>\",\n    \"bootNextServer\":
                \"<string>\",\n    \"bootFileName\": \"<string>\",\n   
                \"dhcpOptions\": [\n        {\n            \"code\":
                \"<string>\",\n            \"type\": \"<string>\",\n           
                \"value\": \"<string>\"\n        },\n        {\n           
                \"code\": \"<string>\",\n            \"type\":
                \"<string>\",\n            \"value\": \"<string>\"\n       
                }\n    ],\n    \"reservedIpRanges\": [\n        {\n           
                \"start\": \"<string>\",\n            \"end\":
                \"<string>\",\n            \"comment\": \"<string>\"\n       
                },\n        {\n            \"start\": \"<string>\",\n           
                \"end\": \"<string>\",\n            \"comment\":
                \"<string>\"\n        }\n    ],\n    \"fixedIpAssignments\":
                [\n        {\n            \"name\": \"<string>\",\n           
                \"mac\": \"<string>\",\n            \"ip\":
                \"<string>\"\n        },\n        {\n            \"name\":
                \"<string>\",\n            \"mac\": \"<string>\",\n           
                \"ip\": \"<string>\"\n        }\n    ]\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: serial
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{serial}}'
        - name: interfaceId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{interfaceId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                dhcpMode: dhcpServer
                dhcpLeaseTime: 1 day
                dnsNameserversOption: custom
                dnsCustomNameservers:
                  - 8.8.8.8, 8.8.4.4
                bootOptionsEnabled: true
                bootNextServer: 1.2.3.4
                bootFileName: home_boot_file
                dhcpOptions:
                  - code: '5'
                    type: text
                    value: five
                reservedIpRanges:
                  - start: 192.168.1.1
                    end: 192.168.1.10
                    comment: A reserved IP range
                fixedIpAssignments:
                  - mac: '22:33:44:55:66:77'
                    name: Cisco Meraki valued client
                    ip: 192.168.1.12
  /devices/{serial}/switch/routing/interfaces:
    post:
      tags:
        - PRODUCTS > Switch > Configure > Routing > Interfaces
      summary: Create A Layer 3 Interface For A Switch
      description: >+
        Create a layer 3 interface for a switch
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        name| string| A friendly name or description for the interface or VLAN.

        subnet| string| The network that this routed interface is on, in CIDR
        notation (ex. 10.1.1.0/24).

        interfaceIp| string| The IP address this switch will use for layer 3
        routing on this VLAN or subnet. This cannot be the same as the switch's
        management IP.

        multicastRouting| string| Enable multicast support if, multicast routing
        between VLANs is required. Options are, 'disabled', 'enabled' or 'IGMP
        snooping querier'. Default is 'disabled'.

        vlanId| integer| The VLAN this routed interface is on. VLAN must be
        between 1 and 4094.

        defaultGateway| string| The next hop for any traffic that isn't going to
        a directly connected subnet or over a static route. This IP address must
        exist in a subnet with a routed interface.

        ospfSettings| object| The OSPF routing settings of the interface.


        #### Supports Action Batches


        **Resource**|**Operation**

        :-------------: |:-------------:

        `/devices/{serial}/switch/routing/interfaces` | create

      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"name\": \"<string>\",\n    \"interfaceIp\":
                \"<string>\",\n    \"vlanId\": \"<integer>\",\n    \"subnet\":
                \"<string>\",\n    \"multicastRouting\": \"<string>\",\n   
                \"defaultGateway\": \"<string>\",\n    \"ospfSettings\":
                {\n        \"area\": \"<string>\",\n        \"cost\":
                \"<integer>\",\n        \"isPassiveEnabled\": \"<boolean>\"\n   
                }\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: serial
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{serial}}'
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                interfaceId: '1234'
                name: L3 interface
                subnet: 192.168.1.0/24
                interfaceIp: 192.168.1.2
                multicastRouting: disabled
                vlanId: 100
                defaultGateway: 192.168.1.1
                ospfSettings:
                  area: '0'
                  cost: 1
                  isPassiveEnabled: true
    get:
      tags:
        - PRODUCTS > Switch > Configure > Routing > Interfaces
      summary: List Layer 3 Interfaces For A Switch
      description: List layer 3 interfaces for a switch
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: serial
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{serial}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - interfaceId: '1234'
                  name: L3 interface
                  subnet: 192.168.1.0/24
                  interfaceIp: 192.168.1.2
                  multicastRouting: disabled
                  vlanId: 100
                  defaultGateway: 192.168.1.1
                  ospfSettings:
                    area: '0'
                    cost: 1
                    isPassiveEnabled: true
  /devices/{serial}/switch/routing/interfaces/{interfaceId}:
    delete:
      tags:
        - PRODUCTS > Switch > Configure > Routing > Interfaces
      summary: Delete A Layer 3 Interface From The Switch
      description: |+
        Delete a layer 3 interface from the switch
        #### Supports Action Batches

        **Resource**|**Operation**
        :-------------: |:-------------:
        `/devices/{serial}/switch/routing/interfaces/{interfaceId}` | destroy

      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: serial
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{serial}}'
        - name: interfaceId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{interfaceId}}'
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    get:
      tags:
        - PRODUCTS > Switch > Configure > Routing > Interfaces
      summary: Return A Layer 3 Interface For A Switch
      description: Return a layer 3 interface for a switch
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: serial
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{serial}}'
        - name: interfaceId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{interfaceId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                interfaceId: '1234'
                name: L3 interface
                subnet: 192.168.1.0/24
                interfaceIp: 192.168.1.2
                multicastRouting: disabled
                vlanId: 100
                defaultGateway: 192.168.1.1
                ospfSettings:
                  area: '0'
                  cost: 1
                  isPassiveEnabled: true
    put:
      tags:
        - PRODUCTS > Switch > Configure > Routing > Interfaces
      summary: Update A Layer 3 Interface For A Switch
      description: >+
        Update a layer 3 interface for a switch
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        name| string| A friendly name or description for the interface or VLAN.

        subnet| string| The network that this routed interface is on, in CIDR
        notation (ex. 10.1.1.0/24).

        interfaceIp| string| The IP address this switch will use for layer 3
        routing on this VLAN or subnet. This cannot be the same as the switch's
        management IP.

        multicastRouting| string| Enable multicast support if, multicast routing
        between VLANs is required. Options are, 'disabled', 'enabled' or 'IGMP
        snooping querier'.

        vlanId| integer| The VLAN this routed interface is on. VLAN must be
        between 1 and 4094.

        ospfSettings| object| The OSPF routing settings of the interface.


        #### Supports Action Batches


        **Resource**|**Operation**

        :-------------: |:-------------:

        `/devices/{serial}/switch/routing/interfaces/{interfaceId}` | update

      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"name\": \"<string>\",\n    \"subnet\":
                \"<string>\",\n    \"interfaceIp\": \"<string>\",\n   
                \"multicastRouting\": \"<string>\",\n    \"vlanId\":
                \"<integer>\",\n    \"ospfSettings\": {\n        \"area\":
                \"<string>\",\n        \"cost\": \"<integer>\",\n       
                \"isPassiveEnabled\": \"<boolean>\"\n    }\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: serial
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{serial}}'
        - name: interfaceId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{interfaceId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                interfaceId: '1234'
                name: L3 interface
                subnet: 192.168.1.0/24
                interfaceIp: 192.168.1.2
                multicastRouting: disabled
                vlanId: 100
                ospfSettings:
                  area: '0'
                  cost: 1
                  isPassiveEnabled: true
  /networks/{networkId}/switch/routing/multicast/rendezvousPoints:
    post:
      tags:
        - >-
          PRODUCTS > Switch > Configure > Routing > Multicast > Rendezvous
          Points
      summary: Create A Multicast Rendezvous Point
      description: "Create a multicast rendezvous point\n #### Body Parameters \n**Parameter**|**Type**|**Description** \n :-------------: |:-------------: |:-------------: \ninterfaceIp| string| The\_IP address of the interface where the RP needs to be created.\nmulticastGroup| string| 'Any', or the IP address of a multicast group\n\n#### Supports Action Batches\n\n**Resource**|**Operation**\n:-------------: |:-------------:\n`/networks/{networkId}/switch/routing/multicast/rendezvousPoints` | create\n\n"
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"interfaceIp\": \"<string>\",\n    \"multicastGroup\":
                \"<string>\"\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                rendezvousPointId: '1234'
                interfaceIp: 192.168.1.2
                multicastGroup: 192.168.128.0/24
    get:
      tags:
        - >-
          PRODUCTS > Switch > Configure > Routing > Multicast > Rendezvous
          Points
      summary: List Multicast Rendezvous Points
      description: List multicast rendezvous points
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - - rendezvousPointId: '1234'
                    serial: Q234-ABCD-5678
                    interfaceName: l3_interface_0
                    interfaceIp: 192.168.1.2
                    multicastGroup: Any
                  - rendezvousPointId: '1234'
                    switchStackId: '789102'
                    interfaceName: l3_interface_1
                    interfaceIp: 192.0.0.10
                    multicastGroup: 239.0.0.0/24
                  - rendezvousPointId: '1234'
                    interfaceIp: 192.168.1.2
                    multicastGroup: 192.168.128.0/24
  /networks/{networkId}/switch/routing/multicast/rendezvousPoints/{rendezvousPointId}:
    delete:
      tags:
        - >-
          PRODUCTS > Switch > Configure > Routing > Multicast > Rendezvous
          Points
      summary: Delete A Multicast Rendezvous Point
      description: >+
        Delete a multicast rendezvous point

        #### Supports Action Batches


        **Resource**|**Operation**

        :-------------: |:-------------:

        `/networks/{networkId}/switch/routing/multicast/rendezvousPoints/{rendezvousPointId}`
        | destroy

      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: rendezvousPointId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{rendezvousPointId}}'
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    get:
      tags:
        - >-
          PRODUCTS > Switch > Configure > Routing > Multicast > Rendezvous
          Points
      summary: Return A Multicast Rendezvous Point
      description: Return a multicast rendezvous point
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: rendezvousPointId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{rendezvousPointId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                rendezvousPointId: '1234'
                serial: Q234-ABCD-5678
                interfaceName: l3_interface_0
                interfaceIp: 192.168.1.2
                multicastGroup: Any
    put:
      tags:
        - >-
          PRODUCTS > Switch > Configure > Routing > Multicast > Rendezvous
          Points
      summary: Update A Multicast Rendezvous Point
      description: >+
        Update a multicast rendezvous point
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        interfaceIp| string| The IP address of the interface to use

        multicastGroup| string| 'Any', or the IP address of a multicast group


        #### Supports Action Batches


        **Resource**|**Operation**

        :-------------: |:-------------:

        `/networks/{networkId}/switch/routing/multicast/rendezvousPoints/{rendezvousPointId}`
        | update

      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"interfaceIp\": \"<string>\",\n    \"multicastGroup\":
                \"<string>\"\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: rendezvousPointId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{rendezvousPointId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                rendezvousPointId: '1234'
                interfaceIp: 192.168.1.2
                multicastGroup: 192.168.128.0/24
  /networks/{networkId}/switch/routing/multicast:
    get:
      tags:
        - PRODUCTS > Switch > Configure > Routing > Multicast
      summary: Return Multicast Settings For A Network
      description: Return multicast settings for a network
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                defaultSettings:
                  igmpSnoopingEnabled: true
                  floodUnknownMulticastTrafficEnabled: true
                overrides:
                  - switches:
                      - Q234-ABCD-0001
                      - Q234-ABCD-0002
                      - Q234-ABCD-0003
                    igmpSnoopingEnabled: true
                    floodUnknownMulticastTrafficEnabled: true
                  - stacks:
                      - '789102'
                      - '123456'
                      - '129102'
                    igmpSnoopingEnabled: true
                    floodUnknownMulticastTrafficEnabled: true
    put:
      tags:
        - PRODUCTS > Switch > Configure > Routing > Multicast
      summary: Update Multicast Settings For A Network
      description: >+
        Update multicast settings for a network
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        defaultSettings| object| Default multicast setting for entire network.
        IGMP snooping and Flood unknown multicast traffic settings are enabled
        by default.

        overrides| array| Array of paired switches/stacks/profiles and
        corresponding multicast settings. An empty array will clear the
        multicast settings.


        #### Supports Action Batches


        **Resource**|**Operation**

        :-------------: |:-------------:

        `/networks/{networkId}/switch/routing/multicast` | update

      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"defaultSettings\": {\n        \"igmpSnoopingEnabled\":
                \"<boolean>\",\n        \"floodUnknownMulticastTrafficEnabled\":
                \"<boolean>\"\n    },\n    \"overrides\": [\n       
                {\n            \"igmpSnoopingEnabled\":
                \"<boolean>\",\n           
                \"floodUnknownMulticastTrafficEnabled\":
                \"<boolean>\",\n            \"switchProfiles\":
                [\n                \"<string>\",\n               
                \"<string>\"\n            ],\n            \"switches\":
                [\n                \"<string>\",\n               
                \"<string>\"\n            ],\n            \"stacks\":
                [\n                \"<string>\",\n               
                \"<string>\"\n            ]\n        },\n        {\n           
                \"igmpSnoopingEnabled\": \"<boolean>\",\n           
                \"floodUnknownMulticastTrafficEnabled\":
                \"<boolean>\",\n            \"switchProfiles\":
                [\n                \"<string>\",\n               
                \"<string>\"\n            ],\n            \"switches\":
                [\n                \"<string>\",\n               
                \"<string>\"\n            ],\n            \"stacks\":
                [\n                \"<string>\",\n               
                \"<string>\"\n            ]\n        }\n    ]\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                defaultSettings:
                  igmpSnoopingEnabled: true
                  floodUnknownMulticastTrafficEnabled: true
                overrides:
                  - switches:
                      - Q234-ABCD-0001
                      - Q234-ABCD-0002
                      - Q234-ABCD-0003
                    igmpSnoopingEnabled: true
                    floodUnknownMulticastTrafficEnabled: true
                  - stacks:
                      - '789102'
                      - '123456'
                      - '129102'
                    igmpSnoopingEnabled: true
                    floodUnknownMulticastTrafficEnabled: true
  /networks/{networkId}/switch/routing/ospf:
    get:
      tags:
        - PRODUCTS > Switch > Configure > Routing > Ospf
      summary: Return Layer 3 OSPF Routing Configuration
      description: Return layer 3 OSPF routing configuration
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                enabled: true
                helloTimerInSeconds: 10
                deadTimerInSeconds: 40
                areas:
                  - areaId: '1284392014819'
                    areaName: Backbone
                    areaType: normal
                md5AuthenticationEnabled: true
                md5AuthenticationKey:
                  id: '1234'
                  passphrase: abc1234
    put:
      tags:
        - PRODUCTS > Switch > Configure > Routing > Ospf
      summary: Update Layer 3 OSPF Routing Configuration
      description: >+
        Update layer 3 OSPF routing configuration
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        enabled| boolean| Boolean value to enable or disable OSPF routing. OSPF
        routing is disabled by default.

        helloTimerInSeconds| integer| Time interval in seconds at which hello
        packet will be sent to OSPF neighbors to maintain connectivity. Value
        must be between 1 and 255. Default is 10 seconds

        deadTimerInSeconds| integer| Time interval to determine when the peer
        will be declare inactive/dead. Value must be between 1 and 65535

        areas| array| OSPF areas

        md5AuthenticationEnabled| boolean| Boolean value to enable or disable
        MD5 authentication. MD5 authentication is disabled by default.

        md5AuthenticationKey| object| MD5 authentication credentials. This param
        is only relevant if md5AuthenticationEnabled is true


        #### Supports Action Batches


        **Resource**|**Operation**

        :-------------: |:-------------:

        `/networks/{networkId}/switch/routing/ospf` | update

      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"enabled\": \"<boolean>\",\n   
                \"helloTimerInSeconds\": \"<integer>\",\n   
                \"deadTimerInSeconds\": \"<integer>\",\n    \"areas\":
                [\n        {\n            \"areaId\":
                \"<integer>\",\n            \"areaName\":
                \"<string>\",\n            \"areaType\": \"<string>\"\n       
                },\n        {\n            \"areaId\":
                \"<integer>\",\n            \"areaName\":
                \"<string>\",\n            \"areaType\": \"<string>\"\n       
                }\n    ],\n    \"md5AuthenticationEnabled\": \"<boolean>\",\n   
                \"md5AuthenticationKey\": {\n        \"id\":
                \"<integer>\",\n        \"passphrase\": \"<string>\"\n    }\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                enabled: true
                helloTimerInSeconds: 10
                deadTimerInSeconds: 40
                areas:
                  - areaId: '1284392014819'
                    areaName: Backbone
                    areaType: normal
                md5AuthenticationEnabled: true
                md5AuthenticationKey:
                  id: '1234'
                  passphrase: abc1234
  /devices/{serial}/switch/routing/staticRoutes:
    post:
      tags:
        - PRODUCTS > Switch > Configure > Routing > Static Routes
      summary: Create A Layer 3 Static Route For A Switch
      description: >+
        Create a layer 3 static route for a switch
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        name| string| Name or description for layer 3 static route

        subnet| string| The subnet which is routed via this static route and
        should be specified in CIDR notation (ex. 1.2.3.0/24)

        nextHopIp| string| IP address of the next hop device to which the device
        sends its traffic for the subnet

        advertiseViaOspfEnabled| boolean| Option to advertise static route via
        OSPF

        preferOverOspfRoutesEnabled| boolean| Option to prefer static route over
        OSPF routes


        #### Supports Action Batches


        **Resource**|**Operation**

        :-------------: |:-------------:

        `/devices/{serial}/switch/routing/staticRoutes` | create

      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"subnet\": \"<string>\",\n    \"nextHopIp\":
                \"<string>\",\n    \"name\": \"<string>\",\n   
                \"advertiseViaOspfEnabled\": \"<boolean>\",\n   
                \"preferOverOspfRoutesEnabled\": \"<boolean>\"\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: serial
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{serial}}'
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                staticRouteId: '1234'
                name: My route
                subnet: 192.168.1.0/24
                nextHopIp: 1.2.3.4
                advertiseViaOspfEnabled: false
                preferOverOspfRoutesEnabled: false
    get:
      tags:
        - PRODUCTS > Switch > Configure > Routing > Static Routes
      summary: List Layer 3 Static Routes For A Switch
      description: List layer 3 static routes for a switch
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: serial
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{serial}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - staticRouteId: '1234'
                  name: My route
                  subnet: 192.168.1.0/24
                  nextHopIp: 1.2.3.4
                  advertiseViaOspfEnabled: false
                  preferOverOspfRoutesEnabled: false
  /devices/{serial}/switch/routing/staticRoutes/{staticRouteId}:
    delete:
      tags:
        - PRODUCTS > Switch > Configure > Routing > Static Routes
      summary: Delete A Layer 3 Static Route For A Switch
      description: >+
        Delete a layer 3 static route for a switch

        #### Supports Action Batches


        **Resource**|**Operation**

        :-------------: |:-------------:

        `/devices/{serial}/switch/routing/staticRoutes/{staticRouteId}` |
        destroy

      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: serial
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{serial}}'
        - name: staticRouteId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{staticRouteId}}'
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    get:
      tags:
        - PRODUCTS > Switch > Configure > Routing > Static Routes
      summary: Return A Layer 3 Static Route For A Switch
      description: Return a layer 3 static route for a switch
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: serial
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{serial}}'
        - name: staticRouteId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{staticRouteId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                staticRouteId: '1234'
                name: My route
                subnet: 192.168.1.0/24
                nextHopIp: 1.2.3.4
                advertiseViaOspfEnabled: false
                preferOverOspfRoutesEnabled: false
    put:
      tags:
        - PRODUCTS > Switch > Configure > Routing > Static Routes
      summary: Update A Layer 3 Static Route For A Switch
      description: >+
        Update a layer 3 static route for a switch
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        name| string| Name or description for layer 3 static route

        subnet| string| The subnet which is routed via this static route and
        should be specified in CIDR notation (ex. 1.2.3.0/24)

        nextHopIp| string| IP address of the next hop device to which the device
        sends its traffic for the subnet

        advertiseViaOspfEnabled| boolean| Option to advertise static route via
        OSPF

        preferOverOspfRoutesEnabled| boolean| Option to prefer static route over
        OSPF routes


        #### Supports Action Batches


        **Resource**|**Operation**

        :-------------: |:-------------:

        `/devices/{serial}/switch/routing/staticRoutes/{staticRouteId}` | update

      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"name\": \"<string>\",\n    \"subnet\":
                \"<string>\",\n    \"nextHopIp\": \"<string>\",\n   
                \"advertiseViaOspfEnabled\": \"<boolean>\",\n   
                \"preferOverOspfRoutesEnabled\": \"<boolean>\"\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: serial
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{serial}}'
        - name: staticRouteId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{staticRouteId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                staticRouteId: '1234'
                name: My route
                subnet: 192.168.1.0/24
                nextHopIp: 1.2.3.4
                advertiseViaOspfEnabled: false
                preferOverOspfRoutesEnabled: false
  /networks/{networkId}/switch/settings:
    get:
      tags:
        - PRODUCTS > Switch > Configure > Settings
      summary: Returns The Switch Network Settings
      description: Returns the switch network settings
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                vlan: 100
                useCombinedPower: false
                powerExceptions:
                  - serial: Q234-ABCD-0001
                    powerType: redundant
                  - serial: Q234-ABCD-0002
                    powerType: combined
                  - serial: Q234-ABCD-0003
                    powerType: redundant
                  - serial: Q234-ABCD-0004
                    powerType: useNetworkSetting
    put:
      tags:
        - PRODUCTS > Switch > Configure > Settings
      summary: Update Switch Network Settings
      description: >
        Update switch network settings
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        vlan| integer| Management VLAN

        useCombinedPower| boolean| The use Combined Power as the default
        behavior of secondary power supplies on supported devices.

        powerExceptions| array| Exceptions on a per switch basis to
        "useCombinedPower"
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"vlan\": \"<integer>\",\n    \"useCombinedPower\":
                \"<boolean>\",\n    \"powerExceptions\": [\n       
                {\n            \"serial\": \"<string>\",\n           
                \"powerType\": \"<string>\"\n        },\n        {\n           
                \"serial\": \"<string>\",\n            \"powerType\":
                \"<string>\"\n        }\n    ]\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                vlan: 100
                useCombinedPower: false
                powerExceptions:
                  - serial: Q234-ABCD-0001
                    powerType: redundant
                  - serial: Q234-ABCD-0002
                    powerType: combined
                  - serial: Q234-ABCD-0003
                    powerType: redundant
                  - serial: Q234-ABCD-0004
                    powerType: useNetworkSetting
  /networks/{networkId}/switch/stacks/{switchStackId}/routing/interfaces/{interfaceId}/dhcp:
    get:
      tags:
        - PRODUCTS > Switch > Configure > Stacks > Routing > Interfaces > Dhcp
      summary: Return A Layer 3 Interface DHCP Configuration For A Switch Stack
      description: Return a layer 3 interface DHCP configuration for a switch stack
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: switchStackId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{switchStackId}}'
        - name: interfaceId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{interfaceId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                dhcpMode: dhcpServer
                dhcpLeaseTime: 1 day
                dnsNameserversOption: custom
                dnsCustomNameservers:
                  - 8.8.8.8, 8.8.4.4
                bootOptionsEnabled: true
                bootNextServer: 1.2.3.4
                bootFileName: home_boot_file
                dhcpOptions:
                  - code: '5'
                    type: text
                    value: five
                reservedIpRanges:
                  - start: 192.168.1.1
                    end: 192.168.1.10
                    comment: A reserved IP range
                fixedIpAssignments:
                  - mac: '22:33:44:55:66:77'
                    name: Cisco Meraki valued client
                    ip: 192.168.1.12
    put:
      tags:
        - PRODUCTS > Switch > Configure > Stacks > Routing > Interfaces > Dhcp
      summary: Update A Layer 3 Interface DHCP Configuration For A Switch Stack
      description: >+
        Update a layer 3 interface DHCP configuration for a switch stack
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        dhcpMode| string| The DHCP mode options for the switch stack interface
        ('dhcpDisabled', 'dhcpRelay' or 'dhcpServer')

        dhcpRelayServerIps| array| The DHCP relay server IPs to which DHCP
        packets would get relayed for the switch stack interface

        dhcpLeaseTime| string| The DHCP lease time config for the dhcp server
        running on switch stack interface ('30 minutes', '1 hour', '4 hours',
        '12 hours', '1 day' or '1 week')

        dnsNameserversOption| string| The DHCP name server option for the dhcp
        server running on the switch stack interface ('googlePublicDns',
        'openDns' or 'custom')

        dnsCustomNameservers| array| The DHCP name server IPs when DHCP name
        server option is 'custom'

        bootOptionsEnabled| boolean| Enable DHCP boot options to provide PXE
        boot options configs for the dhcp server running on the switch stack
        interface

        bootNextServer| string| The PXE boot server IP for the DHCP server
        running on the switch stack interface

        bootFileName| string| The PXE boot server file name for the DHCP server
        running on the switch stack interface

        dhcpOptions| array| Array of DHCP options consisting of code, type and
        value for the DHCP server running on the switch stack interface

        reservedIpRanges| array| Array of DHCP reserved IP assignments for the
        DHCP server running on the switch stack interface

        fixedIpAssignments| array| Array of DHCP fixed IP assignments for the
        DHCP server running on the switch stack interface


        #### Supports Action Batches


        **Resource**|**Operation**

        :-------------: |:-------------:

        `/networks/{networkId}/switch/stacks/{switchStackId}/routing/interfaces/{interfaceId}/dhcp`
        | update

      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"dhcpMode\": \"<string>\",\n    \"dhcpRelayServerIps\":
                [\n        \"<string>\",\n        \"<string>\"\n    ],\n   
                \"dhcpLeaseTime\": \"<string>\",\n    \"dnsNameserversOption\":
                \"<string>\",\n    \"dnsCustomNameservers\": [\n       
                \"<string>\",\n        \"<string>\"\n    ],\n   
                \"bootOptionsEnabled\": \"<boolean>\",\n    \"bootNextServer\":
                \"<string>\",\n    \"bootFileName\": \"<string>\",\n   
                \"dhcpOptions\": [\n        {\n            \"code\":
                \"<string>\",\n            \"type\": \"<string>\",\n           
                \"value\": \"<string>\"\n        },\n        {\n           
                \"code\": \"<string>\",\n            \"type\":
                \"<string>\",\n            \"value\": \"<string>\"\n       
                }\n    ],\n    \"reservedIpRanges\": [\n        {\n           
                \"start\": \"<string>\",\n            \"end\":
                \"<string>\",\n            \"comment\": \"<string>\"\n       
                },\n        {\n            \"start\": \"<string>\",\n           
                \"end\": \"<string>\",\n            \"comment\":
                \"<string>\"\n        }\n    ],\n    \"fixedIpAssignments\":
                [\n        {\n            \"name\": \"<string>\",\n           
                \"mac\": \"<string>\",\n            \"ip\":
                \"<string>\"\n        },\n        {\n            \"name\":
                \"<string>\",\n            \"mac\": \"<string>\",\n           
                \"ip\": \"<string>\"\n        }\n    ]\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: switchStackId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{switchStackId}}'
        - name: interfaceId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{interfaceId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                dhcpMode: dhcpServer
                dhcpLeaseTime: 1 day
                dnsNameserversOption: custom
                dnsCustomNameservers:
                  - 8.8.8.8, 8.8.4.4
                bootOptionsEnabled: true
                bootNextServer: 1.2.3.4
                bootFileName: home_boot_file
                dhcpOptions:
                  - code: '5'
                    type: text
                    value: five
                reservedIpRanges:
                  - start: 192.168.1.1
                    end: 192.168.1.10
                    comment: A reserved IP range
                fixedIpAssignments:
                  - mac: '22:33:44:55:66:77'
                    name: Cisco Meraki valued client
                    ip: 192.168.1.12
  /networks/{networkId}/switch/stacks/{switchStackId}/routing/interfaces:
    post:
      tags:
        - PRODUCTS > Switch > Configure > Stacks > Routing > Interfaces
      summary: Create A Layer 3 Interface For A Switch Stack
      description: >+
        Create a layer 3 interface for a switch stack
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        name| string| A friendly name or description for the interface or VLAN.

        subnet| string| The network that this routed interface is on, in CIDR
        notation (ex. 10.1.1.0/24).

        interfaceIp| string| The IP address this switch stack will use for layer
        3 routing on this VLAN or subnet. This cannot be the same as the
        switch's management IP.

        multicastRouting| string| Enable multicast support if, multicast routing
        between VLANs is required. Options are, 'disabled', 'enabled' or 'IGMP
        snooping querier'. Default is 'disabled'.

        vlanId| integer| The VLAN this routed interface is on. VLAN must be
        between 1 and 4094.

        defaultGateway| string| The next hop for any traffic that isn't going to
        a directly connected subnet or over a static route. This IP address must
        exist in a subnet with a routed interface.

        ospfSettings| object| The OSPF routing settings of the interface.


        #### Supports Action Batches


        **Resource**|**Operation**

        :-------------: |:-------------:

        `/networks/{networkId}/switch/stacks/{switchStackId}/routing/interfaces`
        | create

      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"name\": \"<string>\",\n    \"subnet\":
                \"<string>\",\n    \"interfaceIp\": \"<string>\",\n   
                \"vlanId\": \"<integer>\",\n    \"multicastRouting\":
                \"<string>\",\n    \"defaultGateway\": \"<string>\",\n   
                \"ospfSettings\": {\n        \"area\": \"<string>\",\n       
                \"cost\": \"<integer>\",\n        \"isPassiveEnabled\":
                \"<boolean>\"\n    }\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: switchStackId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{switchStackId}}'
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                interfaceId: '1234'
                name: L3 interface
                subnet: 192.168.1.0/24
                interfaceIp: 192.168.1.2
                multicastRouting: disabled
                vlanId: 100
                defaultGateway: 192.168.1.1
                ospfSettings:
                  area: '0'
                  cost: 1
                  isPassiveEnabled: true
    get:
      tags:
        - PRODUCTS > Switch > Configure > Stacks > Routing > Interfaces
      summary: List Layer 3 Interfaces For A Switch Stack
      description: List layer 3 interfaces for a switch stack
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: switchStackId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{switchStackId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - interfaceId: '1234'
                  name: L3 interface
                  subnet: 192.168.1.0/24
                  interfaceIp: 192.168.1.2
                  multicastRouting: disabled
                  vlanId: 100
                  defaultGateway: 192.168.1.1
                  ospfSettings:
                    area: '0'
                    cost: 1
                    isPassiveEnabled: true
  /networks/{networkId}/switch/stacks/{switchStackId}/routing/interfaces/{interfaceId}:
    delete:
      tags:
        - PRODUCTS > Switch > Configure > Stacks > Routing > Interfaces
      summary: Delete A Layer 3 Interface From A Switch Stack
      description: >+
        Delete a layer 3 interface from a switch stack

        #### Supports Action Batches


        **Resource**|**Operation**

        :-------------: |:-------------:

        `/networks/{networkId}/switch/stacks/{switchStackId}/routing/interfaces/{interfaceId}`
        | destroy

      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: switchStackId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{switchStackId}}'
        - name: interfaceId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{interfaceId}}'
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    get:
      tags:
        - PRODUCTS > Switch > Configure > Stacks > Routing > Interfaces
      summary: Return A Layer 3 Interface From A Switch Stack
      description: Return a layer 3 interface from a switch stack
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: switchStackId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{switchStackId}}'
        - name: interfaceId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{interfaceId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                interfaceId: '1234'
                name: L3 interface
                subnet: 192.168.1.0/24
                interfaceIp: 192.168.1.2
                multicastRouting: disabled
                vlanId: 100
                defaultGateway: 192.168.1.1
                ospfSettings:
                  area: '0'
                  cost: 1
                  isPassiveEnabled: true
    put:
      tags:
        - PRODUCTS > Switch > Configure > Stacks > Routing > Interfaces
      summary: Update A Layer 3 Interface For A Switch Stack
      description: >+
        Update a layer 3 interface for a switch stack
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        name| string| A friendly name or description for the interface or VLAN.

        subnet| string| The network that this routed interface is on, in CIDR
        notation (ex. 10.1.1.0/24).

        interfaceIp| string| The IP address this switch stack will use for layer
        3 routing on this VLAN or subnet. This cannot be the same as the
        switch's management IP.

        multicastRouting| string| Enable multicast support if, multicast routing
        between VLANs is required. Options are, 'disabled', 'enabled' or 'IGMP
        snooping querier'.

        vlanId| integer| The VLAN this routed interface is on. VLAN must be
        between 1 and 4094.

        ospfSettings| object| The OSPF routing settings of the interface.


        #### Supports Action Batches


        **Resource**|**Operation**

        :-------------: |:-------------:

        `/networks/{networkId}/switch/stacks/{switchStackId}/routing/interfaces/{interfaceId}`
        | update

      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"name\": \"<string>\",\n    \"subnet\":
                \"<string>\",\n    \"interfaceIp\": \"<string>\",\n   
                \"multicastRouting\": \"<string>\",\n    \"vlanId\":
                \"<integer>\",\n    \"ospfSettings\": {\n        \"area\":
                \"<string>\",\n        \"cost\": \"<integer>\",\n       
                \"isPassiveEnabled\": \"<boolean>\"\n    }\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: switchStackId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{switchStackId}}'
        - name: interfaceId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{interfaceId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                interfaceId: '1234'
                name: L3 interface
                subnet: 192.168.1.0/24
                interfaceIp: 192.168.1.2
                multicastRouting: disabled
                vlanId: 100
                ospfSettings:
                  area: '0'
                  cost: 1
                  isPassiveEnabled: true
  /networks/{networkId}/switch/stacks/{switchStackId}/routing/staticRoutes:
    post:
      tags:
        - PRODUCTS > Switch > Configure > Stacks > Routing > Static Routes
      summary: Create A Layer 3 Static Route For A Switch Stack
      description: >+
        Create a layer 3 static route for a switch stack
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        name| string| Name or description for layer 3 static route

        subnet| string| The subnet which is routed via this static route and
        should be specified in CIDR notation (ex. 1.2.3.0/24)

        nextHopIp| string| IP address of the next hop device to which the device
        sends its traffic for the subnet

        advertiseViaOspfEnabled| boolean| Option to advertise static route via
        OSPF

        preferOverOspfRoutesEnabled| boolean| Option to prefer static route over
        OSPF routes


        #### Supports Action Batches


        **Resource**|**Operation**

        :-------------: |:-------------:

        `/networks/{networkId}/switch/stacks/{switchStackId}/routing/staticRoutes`
        | create

      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"subnet\": \"<string>\",\n    \"nextHopIp\":
                \"<string>\",\n    \"name\": \"<string>\",\n   
                \"advertiseViaOspfEnabled\": \"<boolean>\",\n   
                \"preferOverOspfRoutesEnabled\": \"<boolean>\"\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: switchStackId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{switchStackId}}'
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                staticRouteId: '1234'
                name: My route
                subnet: 192.168.1.0/24
                nextHopIp: 1.2.3.4
                advertiseViaOspfEnabled: false
                preferOverOspfRoutesEnabled: false
    get:
      tags:
        - PRODUCTS > Switch > Configure > Stacks > Routing > Static Routes
      summary: List Layer 3 Static Routes For A Switch Stack
      description: List layer 3 static routes for a switch stack
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: switchStackId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{switchStackId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - staticRouteId: '1234'
                  name: My route
                  subnet: 192.168.1.0/24
                  nextHopIp: 1.2.3.4
                  advertiseViaOspfEnabled: false
                  preferOverOspfRoutesEnabled: false
  /networks/{networkId}/switch/stacks/{switchStackId}/routing/staticRoutes/{staticRouteId}:
    delete:
      tags:
        - PRODUCTS > Switch > Configure > Stacks > Routing > Static Routes
      summary: Delete A Layer 3 Static Route For A Switch Stack
      description: >+
        Delete a layer 3 static route for a switch stack

        #### Supports Action Batches


        **Resource**|**Operation**

        :-------------: |:-------------:

        `/networks/{networkId}/switch/stacks/{switchStackId}/routing/staticRoutes/{staticRouteId}`
        | destroy

      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: switchStackId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{switchStackId}}'
        - name: staticRouteId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{staticRouteId}}'
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    get:
      tags:
        - PRODUCTS > Switch > Configure > Stacks > Routing > Static Routes
      summary: Return A Layer 3 Static Route For A Switch Stack
      description: Return a layer 3 static route for a switch stack
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: switchStackId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{switchStackId}}'
        - name: staticRouteId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{staticRouteId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                staticRouteId: '1234'
                name: My route
                subnet: 192.168.1.0/24
                nextHopIp: 1.2.3.4
                advertiseViaOspfEnabled: false
                preferOverOspfRoutesEnabled: false
    put:
      tags:
        - PRODUCTS > Switch > Configure > Stacks > Routing > Static Routes
      summary: Update A Layer 3 Static Route For A Switch Stack
      description: >+
        Update a layer 3 static route for a switch stack
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        name| string| Name or description for layer 3 static route

        subnet| string| The subnet which is routed via this static route and
        should be specified in CIDR notation (ex. 1.2.3.0/24)

        nextHopIp| string| IP address of the next hop device to which the device
        sends its traffic for the subnet

        advertiseViaOspfEnabled| boolean| Option to advertise static route via
        OSPF

        preferOverOspfRoutesEnabled| boolean| Option to prefer static route over
        OSPF routes


        #### Supports Action Batches


        **Resource**|**Operation**

        :-------------: |:-------------:

        `/networks/{networkId}/switch/stacks/{switchStackId}/routing/staticRoutes/{staticRouteId}`
        | update

      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"name\": \"<string>\",\n    \"subnet\":
                \"<string>\",\n    \"nextHopIp\": \"<string>\",\n   
                \"advertiseViaOspfEnabled\": \"<boolean>\",\n   
                \"preferOverOspfRoutesEnabled\": \"<boolean>\"\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: switchStackId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{switchStackId}}'
        - name: staticRouteId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{staticRouteId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                staticRouteId: '1234'
                name: My route
                subnet: 192.168.1.0/24
                nextHopIp: 1.2.3.4
                advertiseViaOspfEnabled: false
                preferOverOspfRoutesEnabled: false
  /networks/{networkId}/switch/stacks/{switchStackId}/add:
    post:
      tags:
        - PRODUCTS > Switch > Configure > Stacks
      summary: Add A Switch To A Stack
      description: |
        Add a switch to a stack
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        serial| string| The serial of the switch to be added
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n    \"serial\": \"<string>\"\n}"'
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: switchStackId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{switchStackId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: '8473'
                name: A cool stack
                serials:
                  - QBZY-XWVU-TSRQ
                  - QBAB-CDEF-GHIJ
  /networks/{networkId}/switch/stacks:
    post:
      tags:
        - PRODUCTS > Switch > Configure > Stacks
      summary: Create A Stack
      description: >
        Create a stack
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        name| string| The name of the new stack

        serials| array| An array of switch serials to be added into the new
        stack
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"name\": \"<string>\",\n    \"serials\": [\n       
                \"<string>\",\n        \"<string>\"\n    ]\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: '8473'
                name: A cool stack
                serials:
                  - QBZY-XWVU-TSRQ
                  - QBAB-CDEF-GHIJ
    get:
      tags:
        - PRODUCTS > Switch > Configure > Stacks
      summary: List The Switch Stacks In A Network
      description: List the switch stacks in a network
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: '8473'
                  name: A cool stack
                  serials:
                    - QBZY-XWVU-TSRQ
                    - QBAB-CDEF-GHIJ
  /networks/{networkId}/switch/stacks/{switchStackId}:
    delete:
      tags:
        - PRODUCTS > Switch > Configure > Stacks
      summary: Delete A Stack
      description: Delete a stack
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: switchStackId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{switchStackId}}'
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    get:
      tags:
        - PRODUCTS > Switch > Configure > Stacks
      summary: Show A Switch Stack
      description: Show a switch stack
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: switchStackId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{switchStackId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: '8473'
                name: A cool stack
                serials:
                  - QBZY-XWVU-TSRQ
                  - QBAB-CDEF-GHIJ
  /networks/{networkId}/switch/stacks/{switchStackId}/remove:
    post:
      tags:
        - PRODUCTS > Switch > Configure > Stacks
      summary: Remove A Switch From A Stack
      description: |
        Remove a switch from a stack
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        serial| string| The serial of the switch to be removed
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n    \"serial\": \"<string>\"\n}"'
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: switchStackId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{switchStackId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: '8473'
                name: A cool stack
                serials:
                  - QBAB-CDEF-GHIJ
  /networks/{networkId}/switch/stormControl:
    get:
      tags:
        - PRODUCTS > Switch > Configure > Storm Control
      summary: Return The Storm Control Configuration For A Switch Network
      description: Return the storm control configuration for a switch network
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                broadcastThreshold: 30
                multicastThreshold: 30
                unknownUnicastThreshold: 30
    put:
      tags:
        - PRODUCTS > Switch > Configure > Storm Control
      summary: Update The Storm Control Configuration For A Switch Network
      description: >+
        Update the storm control configuration for a switch network
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        broadcastThreshold| integer| Percentage (1 to 99) of total available
        port bandwidth for broadcast traffic type. Default value 100 percent
        rate is to clear the configuration.

        multicastThreshold| integer| Percentage (1 to 99) of total available
        port bandwidth for multicast traffic type. Default value 100 percent
        rate is to clear the configuration.

        unknownUnicastThreshold| integer| Percentage (1 to 99) of total
        available port bandwidth for unknown unicast (dlf-destination lookup
        failure) traffic type. Default value 100 percent rate is to clear the
        configuration.


        #### Supports Action Batches


        **Resource**|**Operation**

        :-------------: |:-------------:

        `/networks/{networkId}/switch/stormControl` | update

      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"broadcastThreshold\": \"<integer>\",\n   
                \"multicastThreshold\": \"<integer>\",\n   
                \"unknownUnicastThreshold\": \"<integer>\"\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                broadcastThreshold: 30
                multicastThreshold: 30
                unknownUnicastThreshold: 30
  /networks/{networkId}/switch/stp:
    get:
      tags:
        - PRODUCTS > Switch > Configure > Stp
      summary: Returns STP Settings
      description: Returns STP settings
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                rstpEnabled: true
                stpBridgePriority:
                  - switches:
                      - Q234-ABCD-0001
                      - Q234-ABCD-0002
                      - Q234-ABCD-0003
                    stpPriority: 4096
                  - stacks:
                      - '789102'
                      - '123456'
                      - '129102'
                    stpPriority: 28672
    put:
      tags:
        - PRODUCTS > Switch > Configure > Stp
      summary: Updates STP Settings
      description: >+
        Updates STP settings
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        rstpEnabled| boolean| The spanning tree protocol status in network

        stpBridgePriority| array| STP bridge priority for switches/stacks or
        switch profiles. An empty array will clear the STP bridge priority
        settings.


        #### Supports Action Batches


        **Resource**|**Operation**

        :-------------: |:-------------:

        `/networks/{networkId}/switch/stp` | update

      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"rstpEnabled\": \"<boolean>\",\n   
                \"stpBridgePriority\": [\n        {\n           
                \"stpPriority\": \"<integer>\",\n            \"switchProfiles\":
                [\n                \"<string>\",\n               
                \"<string>\"\n            ],\n            \"switches\":
                [\n                \"<string>\",\n               
                \"<string>\"\n            ],\n            \"stacks\":
                [\n                \"<string>\",\n               
                \"<string>\"\n            ]\n        },\n        {\n           
                \"stpPriority\": \"<integer>\",\n            \"switchProfiles\":
                [\n                \"<string>\",\n               
                \"<string>\"\n            ],\n            \"switches\":
                [\n                \"<string>\",\n               
                \"<string>\"\n            ],\n            \"stacks\":
                [\n                \"<string>\",\n               
                \"<string>\"\n            ]\n        }\n    ]\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                rstpEnabled: true
                stpBridgePriority:
                  - switches:
                      - Q234-ABCD-0001
                      - Q234-ABCD-0002
                      - Q234-ABCD-0003
                    stpPriority: 4096
                  - stacks:
                      - '789102'
                      - '123456'
                      - '129102'
                    stpPriority: 28672
  /devices/{serial}/switch/warmSpare:
    get:
      tags:
        - PRODUCTS > Switch > Configure > Warm Spare
      summary: Return Warm Spare Configuration For A Switch
      description: Return warm spare configuration for a switch
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: serial
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{serial}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                enabled: true
                primarySerial: Q234-ABCD-0001
                spareSerial: Q234-ABCD-0002
    put:
      tags:
        - PRODUCTS > Switch > Configure > Warm Spare
      summary: Update Warm Spare Configuration For A Switch
      description: >-
        Update warm spare configuration for a switch. The spare will use the
        same L3 configuration as the primary. Note that this will irreversibly
        destroy any existing L3 configuration on the spare.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"enabled\": \"<boolean>\",\n    \"spareSerial\":
                \"<string>\"\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: serial
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{serial}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                enabled: true
                primarySerial: Q234-ABCD-0001
                spareSerial: Q234-ABCD-0002
  /devices/{serial}/switch/ports/cycle:
    post:
      tags:
        - PRODUCTS > Switch > Live Tools > ports
      summary: Cycle a set of switch ports
      description: >+
        Cycle a set of switch ports
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        ports| array| List of switch ports. Example: [1, 2-5, 1_MA-MOD-8X10G_1,
        1_MA-MOD-8X10G_2-1_MA-MOD-8X10G_8]


        #### Supports Action Batches


        **Resource**|**Operation**

        :-------------: |:-------------:

        `/devices/{serial}/switch/ports` | cycle

      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"ports\": [\n        \"<string>\",\n       
                \"<string>\"\n    ]\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: serial
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{serial}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ports:
                  - '1'
                  - 2-5
                  - 1_MA-MOD-8X10G_1
                  - 1_MA-MOD-8X10G_2-1_MA-MOD-8X10G_8
  /devices/{serial}/switch/ports/statuses/packets:
    get:
      tags:
        - PRODUCTS > Switch > Monitor > ports > statuses > Packets
      summary: Return the packet counters for all the ports of a switch
      description: Return the packet counters for all the ports of a switch
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: serial
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{serial}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - portId: '1'
                  packets:
                    - desc: Total
                      total: 112081
                      sent: 104135
                      recv: 7946
                      ratePerSec:
                        total: 1
                        sent: 1
                        recv: 0
                    - desc: Broadcast
                      total: 30884
                      sent: 30370
                      recv: 514
                      ratePerSec:
                        total: 0
                        sent: 0
                        recv: 0
                    - desc: Multicast
                      total: 67620
                      sent: 66849
                      recv: 771
                      ratePerSec:
                        total: 0
                        sent: 0
                        recv: 0
                    - desc: CRC align errors
                      total: 0
                      sent: 0
                      recv: 0
                      ratePerSec:
                        total: 0
                        sent: 0
                        recv: 0
  /devices/{serial}/switch/ports/statuses:
    get:
      tags:
        - PRODUCTS > Switch > Monitor > ports > statuses
      summary: Return The Status For All The Ports Of A Switch
      description: Return the status for all the ports of a switch
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: serial
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{serial}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - portId: '1'
                  enabled: true
                  status: Connected
                  errors:
                    - PoE overload
                    - Very high proportion of CRC errors
                  warnings:
                    - SecureConnect authentication in progress
                    - PoE port was denied power
                    - High proportion of CRC errors
                  speed: 10 Gbps
                  duplex: full
                  usageInKb:
                    total: 40867
                    sent: 23008
                    recv: 17859
                  cdp:
                    systemName: ''
                    platform: MS350-24X
                    deviceId: 0c8ddbddee:ff
                    portId: Port 20
                    nativeVlan: 1
                    address: 10.0,0.1
                    managementAddress: 10.0.0.100
                    version: '1'
                    vtpManagementDomain: ''
                    capabilities: Switch
                  lldp:
                    systemName: MS350-24X - Test
                    systemDescription: MS350-24X Cloud Managed PoE Switch
                    portId: '20'
                    portDescription: Port 20
                    chassisId: 0c:8d:db:dd:ee:ff
                    managementVlan: 1
                    portVlan: 1
                    managementAddress: 10.0.0.100
                    systemCapabilities: switch
                  clientCount: 10
                  powerUsageInWh: 55.9
                  trafficInKbps:
                    total: 2.2
                    sent: 1.2
                    recv: 1
                  secureConnect:
                    enabled: true
                    active: true
                    authenticationStatus: Authentication in progress
                    configOverrides:
                      type: trunk
                      allowedVlans: all
                      vlan: 12
                      voiceVlan: null
  /networks/{networkId}/wireless/alternateManagementInterface:
    get:
      tags:
        - PRODUCTS > Wireless > Configure > Alternate Management Interface
      summary: Return Alternate Management Interface And Devices With IP Assigned
      description: Return alternate management interface and devices with IP assigned
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                enabled: true
                vlanId: 100
                protocols:
                  - radius
                  - snmp
                  - syslog
                  - ldap
                accessPoints:
                  - serial: Q234-ABCD-5678
                    alternateManagementIp: 1.2.3.4
                    subnetMask: 255.255.255.0
                    gateway: 1.2.3.5
                    dns1: 8.8.8.8
                    dns2: 8.8.4.4
    put:
      tags:
        - PRODUCTS > Wireless > Configure > Alternate Management Interface
      summary: Update Alternate Management Interface And Device Static IP
      description: >+
        Update alternate management interface and device static IP
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        enabled| boolean| Boolean value to enable or disable alternate
        management interface

        vlanId| integer| Alternate management interface VLAN, must be between 1
        and 4094

        protocols| array| Can be one or more of the following values: 'radius',
        'snmp', 'syslog' or 'ldap'

        accessPoints| array| Array of access point serial number and IP
        assignment. Note: accessPoints IP assignment is not applicable for
        template networks, in other words, do not put 'accessPoints' in the body
        when updating template networks. Also, an empty 'accessPoints' array
        will remove all previous static IP assignments


        #### Supports Action Batches


        **Resource**|**Operation**

        :-------------: |:-------------:

        `/networks/{networkId}/wireless/alternateManagementInterface` | update

      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"enabled\": \"<boolean>\",\n    \"vlanId\":
                \"<integer>\",\n    \"protocols\": [\n       
                \"<string>\",\n        \"<string>\"\n    ],\n   
                \"accessPoints\": [\n        {\n            \"serial\":
                \"<string>\",\n            \"alternateManagementIp\":
                \"<string>\",\n            \"subnetMask\":
                \"<string>\",\n            \"gateway\":
                \"<string>\",\n            \"dns1\": \"<string>\",\n           
                \"dns2\": \"<string>\"\n        },\n        {\n           
                \"serial\": \"<string>\",\n           
                \"alternateManagementIp\": \"<string>\",\n           
                \"subnetMask\": \"<string>\",\n            \"gateway\":
                \"<string>\",\n            \"dns1\": \"<string>\",\n           
                \"dns2\": \"<string>\"\n        }\n    ]\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                enabled: true
                vlanId: 100
                protocols:
                  - radius
                  - snmp
                  - syslog
                  - ldap
                accessPoints:
                  - serial: Q234-ABCD-5678
                    alternateManagementIp: 1.2.3.4
                    subnetMask: 255.255.255.0
                    gateway: 1.2.3.5
                    dns1: 8.8.8.8
                    dns2: 8.8.4.4
  /networks/{networkId}/wireless/billing:
    get:
      tags:
        - PRODUCTS > Wireless > Configure > Billing
      summary: Return The Billing Settings Of This Network
      description: Return the billing settings of this network
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                currency: USD
                plans:
                  - id: '1'
                    price: '5'
                    bandwidthLimits:
                      limitUp: 1000
                      limitDown: 1000
                    timeLimit: 1 hour
    put:
      tags:
        - PRODUCTS > Wireless > Configure > Billing
      summary: Update The Billing Settings
      description: >+
        Update the billing settings
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        currency| string| The currency code of this node group's billing plans

        plans| array| Array of billing plans in the node group. (Can configure a
        maximum of 5)


        #### Supports Action Batches


        **Resource**|**Operation**

        :-------------: |:-------------:

        `/networks/{networkId}/wireless/billing` | update

      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"currency\": \"<string>\",\n    \"plans\": [\n       
                {\n            \"price\": \"<float>\",\n           
                \"bandwidthLimits\": {\n                \"limitUp\":
                \"<integer>\",\n                \"limitDown\":
                \"<integer>\"\n            },\n            \"timeLimit\":
                \"<string>\",\n            \"id\": \"<string>\"\n       
                },\n        {\n            \"price\": \"<float>\",\n           
                \"bandwidthLimits\": {\n                \"limitUp\":
                \"<integer>\",\n                \"limitDown\":
                \"<integer>\"\n            },\n            \"timeLimit\":
                \"<string>\",\n            \"id\": \"<string>\"\n        }\n   
                ]\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                currency: USD
                plans:
                  - id: '1'
                    price: '5'
                    bandwidthLimits:
                      limitUp: 1000
                      limitDown: 1000
                    timeLimit: 1 hour
  /networks/{networkId}/wireless/bluetooth/settings:
    get:
      tags:
        - PRODUCTS > Wireless > Configure > Bluetooth > settings
      summary: >-
        Return The Bluetooth Settings For A Network A Href Https Documentation
        Meraki Com MR Bluetooth Bluetooth Low Energy BLE Bluetooth Settings A
        Must Be Enabled On The Network
      description: >-
        Return the Bluetooth settings for a network. <a
        href="https://documentation.meraki.com/MR/Bluetooth/Bluetooth_Low_Energy_(BLE)">Bluetooth
        settings</a> must be enabled on the network.
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                scanningEnabled: true
                advertisingEnabled: true
                uuid: 00000000-0000-0000-000-000000000000
                majorMinorAssignmentMode: Non-unique
                major: 1
    put:
      tags:
        - PRODUCTS > Wireless > Configure > Bluetooth > settings
      summary: Update The Bluetooth Settings For A Network
      description: >-
        Update the Bluetooth settings for a network. See the docs page for <a
        href="https://documentation.meraki.com/MR/Bluetooth/Bluetooth_Low_Energy_(BLE)">Bluetooth
        settings</a>.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"scanningEnabled\": \"<boolean>\",\n   
                \"advertisingEnabled\": \"<boolean>\",\n    \"uuid\":
                \"<string>\",\n    \"majorMinorAssignmentMode\":
                \"<string>\",\n    \"major\": \"<integer>\",\n    \"minor\":
                \"<integer>\"\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                scanningEnabled: true
                advertisingEnabled: true
                uuid: 00000000-0000-0000-000-000000000000
                majorMinorAssignmentMode: Non-unique
                major: 1
  /devices/{serial}/wireless/bluetooth/settings:
    get:
      tags:
        - PRODUCTS > Wireless > Configure > Bluetooth > settings
      summary: Return The Bluetooth Settings For A Wireless Device
      description: Return the bluetooth settings for a wireless device
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: serial
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{serial}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                uuid: 00000000-0000-0000-000-000000000000
                major: 13
                minor: 125
    put:
      tags:
        - PRODUCTS > Wireless > Configure > Bluetooth > settings
      summary: Update The Bluetooth Settings For A Wireless Device
      description: >+
        Update the bluetooth settings for a wireless device
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        uuid| string| Desired UUID of the beacon. If the value is set to null it
        will reset to Dashboard's automatically generated value.

        major| integer| Desired major value of the beacon. If the value is set
        to null it will reset to Dashboard's automatically generated value.

        minor| integer| Desired minor value of the beacon. If the value is set
        to null it will reset to Dashboard's automatically generated value.


        #### Supports Action Batches


        **Resource**|**Operation**

        :-------------: |:-------------:

        `/devices/{serial}/wireless/bluetooth/settings` | update

      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"uuid\": \"<string>\",\n    \"major\":
                \"<integer>\",\n    \"minor\": \"<integer>\"\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: serial
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{serial}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                uuid: 00000000-0000-0000-000-000000000000
                major: 13
                minor: 125
  /devices/{serial}/wireless/radio/settings:
    get:
      tags:
        - PRODUCTS > Wireless > Configure > Radio > settings
      summary: Return The Radio Settings Of A Device
      description: Return the radio settings of a device
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: serial
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{serial}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                serial: Q234-ABCD-5678
                rfProfileId: '1234'
                twoFourGhzSettings:
                  channel: 11
                  targetPower: 21
                fiveGhzSettings:
                  channel: 149
                  channelWidth: 20
                  targetPower: 15
    put:
      tags:
        - PRODUCTS > Wireless > Configure > Radio > settings
      summary: Update The Radio Settings Of A Device
      description: >+
        Update the radio settings of a device
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        rfProfileId| integer| The ID of an RF profile to assign to the device.
        If the value of this parameter is null, the appropriate basic RF profile
        (indoor or outdoor) will be assigned to the device. Assigning an RF
        profile will clear ALL manually configured overrides on the device
        (channel width, channel, power).

        twoFourGhzSettings| object| Manual radio settings for 2.4 GHz.

        fiveGhzSettings| object| Manual radio settings for 5 GHz.


        #### Supports Action Batches


        **Resource**|**Operation**

        :-------------: |:-------------:

        `/devices/{serial}/wireless/radio/settings` | update

      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"rfProfileId\": \"<integer>\",\n   
                \"twoFourGhzSettings\": {\n        \"channel\":
                \"<integer>\",\n        \"targetPower\": \"<integer>\"\n   
                },\n    \"fiveGhzSettings\": {\n        \"channel\":
                \"<integer>\",\n        \"channelWidth\":
                \"<integer>\",\n        \"targetPower\": \"<integer>\"\n   
                }\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: serial
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{serial}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                serial: Q234-ABCD-5678
                rfProfileId: '1234'
                twoFourGhzSettings:
                  channel: 11
                  targetPower: 21
                fiveGhzSettings:
                  channel: 149
                  channelWidth: 20
                  targetPower: 15
  /networks/{networkId}/wireless/rfProfiles:
    post:
      tags:
        - PRODUCTS > Wireless > Configure > Rf Profiles
      summary: Creates New RF Profile For This Network
      description: >+
        Creates new RF profile for this network
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        name| string| The name of the new profile. Must be unique. This param is
        required on creation.

        clientBalancingEnabled| boolean| Steers client to best available access
        point. Can be either true or false. Defaults to true.

        minBitrateType| string| Minimum bitrate can be set to either 'band' or
        'ssid'. Defaults to band.

        bandSelectionType| string| Band selection can be set to either 'ssid' or
        'ap'. This param is required on creation.

        apBandSettings| object| Settings that will be enabled if selectionType
        is set to 'ap'.

        twoFourGhzSettings| object| Settings related to 2.4Ghz band

        fiveGhzSettings| object| Settings related to 5Ghz band


        #### Supports Action Batches


        **Resource**|**Operation**

        :-------------: |:-------------:

        `/networks/{networkId}/wireless/rfProfiles` | create

      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"name\": \"<string>\",\n    \"bandSelectionType\":
                \"<string>\",\n    \"clientBalancingEnabled\":
                \"<boolean>\",\n    \"minBitrateType\": \"<string>\",\n   
                \"apBandSettings\": {\n        \"bandOperationMode\":
                \"<string>\",\n        \"bandSteeringEnabled\":
                \"<boolean>\"\n    },\n    \"twoFourGhzSettings\": {\n       
                \"maxPower\": \"<integer>\",\n        \"minPower\":
                \"<integer>\",\n        \"minBitrate\": \"<float>\",\n       
                \"validAutoChannels\": [\n           
                \"<integer>\",\n            \"<integer>\"\n        ],\n       
                \"axEnabled\": \"<boolean>\",\n        \"rxsop\":
                \"<integer>\"\n    },\n    \"fiveGhzSettings\": {\n       
                \"maxPower\": \"<integer>\",\n        \"minPower\":
                \"<integer>\",\n        \"minBitrate\": \"<integer>\",\n       
                \"validAutoChannels\": [\n           
                \"<integer>\",\n            \"<integer>\"\n        ],\n       
                \"channelWidth\": \"<string>\",\n        \"rxsop\":
                \"<integer>\"\n    }\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: '1234'
                networkId: N_24329156
                name: Some Custom RF Profile
                clientBalancingEnabled: true
                minBitrateType: band
                bandSelectionType: ap
                apSelectionSettings:
                  bandOperationMode: dual
                  bandSteeringEnabled: true
                twoFourGhzSettings:
                  maxPower: 30
                  minPower: 5
                  minBitrate: 11
                  rxsop: null
                  validAutoChannels:
                    - 1
                    - 6
                    - 11
                  axEnabled: true
                fiveGhzSettings:
                  maxPower: 30
                  minPower: 8
                  minBitrate: 12
                  rxsop: null
                  validAutoChannels:
                    - 36
                    - 40
                    - 44
                    - 48
                    - 52
                    - 56
                    - 60
                    - 64
                    - 100
                    - 104
                    - 108
                    - 112
                    - 116
                    - 120
                    - 124
                    - 128
                    - 132
                    - 136
                    - 140
                    - 144
                    - 149
                    - 153
                    - 157
                    - 161
                    - 165
                  channelWidth: auto
    get:
      tags:
        - PRODUCTS > Wireless > Configure > Rf Profiles
      summary: List The Non Basic RF Profiles For This Network
      description: List the non-basic RF profiles for this network
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: '1234'
                  networkId: N_24329156
                  name: Some Custom RF Profile
                  clientBalancingEnabled: true
                  minBitrateType: band
                  bandSelectionType: ap
                  apSelectionSettings:
                    bandOperationMode: dual
                    bandSteeringEnabled: true
                  twoFourGhzSettings:
                    maxPower: 30
                    minPower: 5
                    minBitrate: 11
                    rxsop: null
                    validAutoChannels:
                      - 1
                      - 6
                      - 11
                    axEnabled: true
                  fiveGhzSettings:
                    maxPower: 30
                    minPower: 8
                    minBitrate: 12
                    rxsop: null
                    validAutoChannels:
                      - 36
                      - 40
                      - 44
                      - 48
                      - 52
                      - 56
                      - 60
                      - 64
                      - 100
                      - 104
                      - 108
                      - 112
                      - 116
                      - 120
                      - 124
                      - 128
                      - 132
                      - 136
                      - 140
                      - 144
                      - 149
                      - 153
                      - 157
                      - 161
                      - 165
                    channelWidth: auto
  /networks/{networkId}/wireless/rfProfiles/{rfProfileId}:
    delete:
      tags:
        - PRODUCTS > Wireless > Configure > Rf Profiles
      summary: Delete A RF Profile
      description: |+
        Delete a RF Profile
        #### Supports Action Batches

        **Resource**|**Operation**
        :-------------: |:-------------:
        `/networks/{networkId}/wireless/rfProfiles/{rfProfileId}` | destroy

      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: rfProfileId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{rfProfileId}}'
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    get:
      tags:
        - PRODUCTS > Wireless > Configure > Rf Profiles
      summary: Return A RF Profile
      description: Return a RF profile
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: rfProfileId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{rfProfileId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: '1234'
                networkId: N_24329156
                name: Some Custom RF Profile
                clientBalancingEnabled: true
                minBitrateType: band
                bandSelectionType: ap
                apSelectionSettings:
                  bandOperationMode: dual
                  bandSteeringEnabled: true
                twoFourGhzSettings:
                  maxPower: 30
                  minPower: 5
                  minBitrate: 11
                  rxsop: null
                  validAutoChannels:
                    - 1
                    - 6
                    - 11
                  axEnabled: true
                fiveGhzSettings:
                  maxPower: 30
                  minPower: 8
                  minBitrate: 12
                  rxsop: null
                  validAutoChannels:
                    - 36
                    - 40
                    - 44
                    - 48
                    - 52
                    - 56
                    - 60
                    - 64
                    - 100
                    - 104
                    - 108
                    - 112
                    - 116
                    - 120
                    - 124
                    - 128
                    - 132
                    - 136
                    - 140
                    - 144
                    - 149
                    - 153
                    - 157
                    - 161
                    - 165
                  channelWidth: auto
    put:
      tags:
        - PRODUCTS > Wireless > Configure > Rf Profiles
      summary: Updates Specified RF Profile For This Network
      description: >+
        Updates specified RF profile for this network
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        name| string| The name of the new profile. Must be unique.

        clientBalancingEnabled| boolean| Steers client to best available access
        point. Can be either true or false.

        minBitrateType| string| Minimum bitrate can be set to either 'band' or
        'ssid'.

        bandSelectionType| string| Band selection can be set to either 'ssid' or
        'ap'.

        apBandSettings| object| Settings that will be enabled if selectionType
        is set to 'ap'.

        twoFourGhzSettings| object| Settings related to 2.4Ghz band

        fiveGhzSettings| object| Settings related to 5Ghz band


        #### Supports Action Batches


        **Resource**|**Operation**

        :-------------: |:-------------:

        `/networks/{networkId}/wireless/rfProfiles/{rfProfileId}` | update

      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"name\": \"<string>\",\n    \"clientBalancingEnabled\":
                \"<boolean>\",\n    \"minBitrateType\": \"<string>\",\n   
                \"bandSelectionType\": \"<string>\",\n    \"apBandSettings\":
                {\n        \"bandOperationMode\": \"<string>\",\n       
                \"bandSteeringEnabled\": \"<boolean>\"\n    },\n   
                \"twoFourGhzSettings\": {\n        \"maxPower\":
                \"<integer>\",\n        \"minPower\": \"<integer>\",\n       
                \"minBitrate\": \"<float>\",\n        \"validAutoChannels\":
                [\n            \"<integer>\",\n           
                \"<integer>\"\n        ],\n        \"axEnabled\":
                \"<boolean>\",\n        \"rxsop\": \"<integer>\"\n    },\n   
                \"fiveGhzSettings\": {\n        \"maxPower\":
                \"<integer>\",\n        \"minPower\": \"<integer>\",\n       
                \"minBitrate\": \"<integer>\",\n        \"validAutoChannels\":
                [\n            \"<integer>\",\n           
                \"<integer>\"\n        ],\n        \"channelWidth\":
                \"<string>\",\n        \"rxsop\": \"<integer>\"\n    }\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: rfProfileId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{rfProfileId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: '1234'
                networkId: N_24329156
                name: Some Custom RF Profile
                clientBalancingEnabled: true
                minBitrateType: band
                bandSelectionType: ap
                apSelectionSettings:
                  bandOperationMode: dual
                  bandSteeringEnabled: true
                twoFourGhzSettings:
                  maxPower: 30
                  minPower: 5
                  minBitrate: 11
                  rxsop: null
                  validAutoChannels:
                    - 1
                    - 6
                    - 11
                  axEnabled: true
                fiveGhzSettings:
                  maxPower: 30
                  minPower: 8
                  minBitrate: 12
                  rxsop: null
                  validAutoChannels:
                    - 36
                    - 40
                    - 44
                    - 48
                    - 52
                    - 56
                    - 60
                    - 64
                    - 100
                    - 104
                    - 108
                    - 112
                    - 116
                    - 120
                    - 124
                    - 128
                    - 132
                    - 136
                    - 140
                    - 144
                    - 149
                    - 153
                    - 157
                    - 161
                    - 165
                  channelWidth: auto
  /networks/{networkId}/wireless/settings:
    get:
      tags:
        - PRODUCTS > Wireless > Configure > Settings
      summary: Return The Wireless Settings For A Network
      description: Return the wireless settings for a network
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                meshingEnabled: true
                ipv6BridgeEnabled: false
                locationAnalyticsEnabled: false
                upgradeStrategy: minimizeUpgradeTime
    put:
      tags:
        - PRODUCTS > Wireless > Configure > Settings
      summary: Update The Wireless Settings For A Network
      description: >+
        Update the wireless settings for a network
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        meshingEnabled| boolean| Toggle for enabling or disabling meshing in a
        network

        ipv6BridgeEnabled| boolean| Toggle for enabling or disabling IPv6
        bridging in a network (Note: if enabled, SSIDs must also be configured
        to use bridge mode)

        locationAnalyticsEnabled| boolean| Toggle for enabling or disabling
        location analytics for your network

        upgradeStrategy| string| The upgrade strategy to apply to the network.
        Must be one of 'minimizeUpgradeTime' or 'minimizeClientDowntime'.
        Requires firmware version MR 26.8 or higher'

        ledLightsOn| boolean| Toggle for enabling or disabling LED lights on all
        APs in the network (making them run dark)


        #### Supports Action Batches


        **Resource**|**Operation**

        :-------------: |:-------------:

        `/networks/{networkId}/wireless/settings` | update

      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"meshingEnabled\": \"<boolean>\",\n   
                \"ipv6BridgeEnabled\": \"<boolean>\",\n   
                \"locationAnalyticsEnabled\": \"<boolean>\",\n   
                \"upgradeStrategy\": \"<string>\",\n    \"ledLightsOn\":
                \"<boolean>\"\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                meshingEnabled: true
                ipv6BridgeEnabled: false
                locationAnalyticsEnabled: false
                upgradeStrategy: minimizeUpgradeTime
  /networks/{networkId}/wireless/ssids/{number}/bonjourForwarding:
    get:
      tags:
        - PRODUCTS > Wireless > Configure > Ssids > Bonjour Forwarding
      summary: List The Bonjour Forwarding Setting And Rules For The SSID
      description: List the Bonjour forwarding setting and rules for the SSID
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: number
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{number}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                enabled: true
                rules:
                  - description: A simple bonjour rule
                    vlanId: '1'
                    services:
                      - All Services
    put:
      tags:
        - PRODUCTS > Wireless > Configure > Ssids > Bonjour Forwarding
      summary: Update The Bonjour Forwarding Setting And Rules For The SSID
      description: >+
        Update the bonjour forwarding setting and rules for the SSID
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        enabled| boolean| If true, Bonjour forwarding is enabled on this SSID.

        rules| array| List of bonjour forwarding rules.


        #### Supports Action Batches


        **Resource**|**Operation**

        :-------------: |:-------------:

        `/networks/{networkId}/wireless/ssids/{number}/bonjourForwarding` |
        update

      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"enabled\": \"<boolean>\",\n    \"rules\": [\n       
                {\n            \"vlanId\": \"<string>\",\n           
                \"services\": [\n                \"<string>\",\n               
                \"<string>\"\n            ],\n            \"description\":
                \"<string>\"\n        },\n        {\n            \"vlanId\":
                \"<string>\",\n            \"services\": [\n               
                \"<string>\",\n                \"<string>\"\n           
                ],\n            \"description\": \"<string>\"\n        }\n   
                ]\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: number
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{number}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                enabled: true
                rules:
                  - description: A simple bonjour rule
                    vlanId: '1'
                    services:
                      - All Services
  /networks/{networkId}/wireless/ssids/{number}/deviceTypeGroupPolicies:
    get:
      tags:
        - PRODUCTS > Wireless > Configure > Ssids > Device Type Group Policies
      summary: List The Device Type Group Policies For The SSID
      description: List the device type group policies for the SSID
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: number
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{number}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                enabled: true
                deviceTypePolicies:
                  - deviceType: Android
                    devicePolicy: Allowed
                  - deviceType: iPhone
                    devicePolicy: Group policy
                    groupPolicyId: 101
    put:
      tags:
        - PRODUCTS > Wireless > Configure > Ssids > Device Type Group Policies
      summary: Update The Device Type Group Policies For The SSID
      description: >+
        Update the device type group policies for the SSID
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        enabled| boolean| If true, the SSID device type group policies are
        enabled.

        deviceTypePolicies| array| List of device type policies.


        #### Supports Action Batches


        **Resource**|**Operation**

        :-------------: |:-------------:

        `/networks/{networkId}/wireless/ssids/{number}/deviceTypeGroupPolicies`
        | update

      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"enabled\": \"<boolean>\",\n    \"deviceTypePolicies\":
                [\n        {\n            \"deviceType\":
                \"<string>\",\n            \"devicePolicy\":
                \"<string>\",\n            \"groupPolicyId\":
                \"<integer>\"\n        },\n        {\n           
                \"deviceType\": \"<string>\",\n            \"devicePolicy\":
                \"<string>\",\n            \"groupPolicyId\":
                \"<integer>\"\n        }\n    ]\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: number
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{number}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                enabled: true
                deviceTypePolicies:
                  - deviceType: Android
                    devicePolicy: Allowed
                  - deviceType: iPhone
                    devicePolicy: Group policy
                    groupPolicyId: 101
  /networks/{networkId}/wireless/ssids/{number}/firewall/l3FirewallRules:
    get:
      tags:
        - >-
          PRODUCTS > Wireless > Configure > Ssids > Firewall > L 3 Firewall
          Rules
      summary: Return The L 3 Firewall Rules For An SSID On An MR Network
      description: Return the L3 firewall rules for an SSID on an MR network
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: number
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{number}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                rules:
                  - comment: Allow TCP traffic to subnet with HTTP servers.
                    policy: allow
                    protocol: tcp
                    destPort: 443
                    destCidr: 192.168.1.0/24
    put:
      tags:
        - >-
          PRODUCTS > Wireless > Configure > Ssids > Firewall > L 3 Firewall
          Rules
      summary: Update The L 3 Firewall Rules Of An SSID On An MR Network
      description: >
        Update the L3 firewall rules of an SSID on an MR network
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        rules| array| An ordered array of the firewall rules for this SSID (not
        including the local LAN access rule or the default rule)

        allowLanAccess| boolean| Allow wireless client access to local LAN
        (boolean value - true allows access and false denies access) (optional)
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"rules\": [\n        {\n            \"policy\":
                \"<string>\",\n            \"protocol\":
                \"<string>\",\n            \"destCidr\":
                \"<string>\",\n            \"comment\":
                \"<string>\",\n            \"destPort\": \"<string>\"\n       
                },\n        {\n            \"policy\":
                \"<string>\",\n            \"protocol\":
                \"<string>\",\n            \"destCidr\":
                \"<string>\",\n            \"comment\":
                \"<string>\",\n            \"destPort\": \"<string>\"\n       
                }\n    ],\n    \"allowLanAccess\": \"<boolean>\"\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: number
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{number}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                rules:
                  - comment: Allow TCP traffic to subnet with HTTP servers.
                    policy: allow
                    protocol: tcp
                    destPort: 443
                    destCidr: 192.168.1.0/24
  /networks/{networkId}/wireless/ssids/{number}/firewall/l7FirewallRules:
    get:
      tags:
        - >-
          PRODUCTS > Wireless > Configure > Ssids > Firewall > L 7 Firewall
          Rules
      summary: Return The L 7 Firewall Rules For An SSID On An MR Network
      description: Return the L7 firewall rules for an SSID on an MR network
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: number
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{number}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                rules:
                  - policy: deny
                    type: application
                    value:
                      id: meraki:layer7/application/67
                      name: Xbox LIVE
                  - policy: deny
                    type: applicationCategory
                    value:
                      id: meraki:layer7/category/2
                      name: Blogging
                  - policy: deny
                    type: host
                    value: google.com
                  - policy: deny
                    type: port
                    value: '23'
                  - policy: deny
                    type: ipRange
                    value: 10.11.12.00/24
                  - policy: deny
                    type: ipRange
                    value: 10.11.12.00/24:5555
    put:
      tags:
        - >-
          PRODUCTS > Wireless > Configure > Ssids > Firewall > L 7 Firewall
          Rules
      summary: Update The L 7 Firewall Rules Of An SSID On An MR Network
      description: >+
        Update the L7 firewall rules of an SSID on an MR network
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        rules| array| An array of L7 firewall rules for this SSID. Rules will
        get applied in the same order user has specified in request. Empty array
        will clear the L7 firewall rule configuration.


        #### Supports Action Batches


        **Resource**|**Operation**

        :-------------: |:-------------:

        `/networks/{networkId}/wireless/ssids/{number}/firewall/l7FirewallRules`
        | update

      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"rules\": [\n        {\n            \"policy\":
                \"<string>\",\n            \"type\": \"<string>\",\n           
                \"value\": \"<string>\"\n        },\n        {\n           
                \"policy\": \"<string>\",\n            \"type\":
                \"<string>\",\n            \"value\": \"<string>\"\n       
                }\n    ]\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: number
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{number}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                rules:
                  - policy: deny
                    type: application
                    value:
                      id: meraki:layer7/application/67
                      name: Xbox LIVE
                  - policy: deny
                    type: applicationCategory
                    value:
                      id: meraki:layer7/category/2
                      name: Blogging
                  - policy: deny
                    type: host
                    value: google.com
                  - policy: deny
                    type: port
                    value: '23'
                  - policy: deny
                    type: ipRange
                    value: 10.11.12.00/24
                  - policy: deny
                    type: ipRange
                    value: 10.11.12.00/24:5555
  /networks/{networkId}/wireless/ssids/{number}/identityPsks:
    post:
      tags:
        - PRODUCTS > Wireless > Configure > Ssids > Identity Psks
      summary: Create An Identity PSK
      description: >+
        Create an Identity PSK
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        name| string| The name of the Identity PSK

        passphrase| string| The passphrase for client authentication. If left
        blank, one will be auto-generated.

        groupPolicyId| string| The group policy to be applied to clients


        #### Supports Action Batches


        **Resource**|**Operation**

        :-------------: |:-------------:

        `/networks/{networkId}/wireless/ssids/{number}/identityPsks` | create

      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"name\": \"<string>\",\n    \"groupPolicyId\":
                \"<string>\",\n    \"passphrase\": \"<string>\"\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: number
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{number}}'
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                identityPskId: '1284392014819'
                name: Sample Identity PSK
                passphrase: NIalareK
                groupPolicyId: '101'
    get:
      tags:
        - PRODUCTS > Wireless > Configure > Ssids > Identity Psks
      summary: List All Identity PS Ks In A Wireless Network
      description: List all Identity PSKs in a wireless network
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: number
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{number}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - identityPskId: '1284392014819'
                  name: Sample Identity PSK
                  passphrase: NIalareK
                  groupPolicyId: '101'
  /networks/{networkId}/wireless/ssids/{number}/identityPsks/{identityPskId}:
    delete:
      tags:
        - PRODUCTS > Wireless > Configure > Ssids > Identity Psks
      summary: Delete An Identity PSK
      description: >+
        Delete an Identity PSK

        #### Supports Action Batches


        **Resource**|**Operation**

        :-------------: |:-------------:

        `/networks/{networkId}/wireless/ssids/{number}/identityPsks/{identityPskId}`
        | destroy

      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: number
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{number}}'
        - name: identityPskId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{identityPskId}}'
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    get:
      tags:
        - PRODUCTS > Wireless > Configure > Ssids > Identity Psks
      summary: Return An Identity PSK
      description: Return an Identity PSK
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: number
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{number}}'
        - name: identityPskId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{identityPskId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                identityPskId: '1284392014819'
                name: Sample Identity PSK
                passphrase: NIalareK
                groupPolicyId: '101'
    put:
      tags:
        - PRODUCTS > Wireless > Configure > Ssids > Identity Psks
      summary: Update An Identity PSK
      description: >+
        Update an Identity PSK
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        name| string| The name of the Identity PSK

        passphrase| string| The passphrase for client authentication

        groupPolicyId| string| The group policy to be applied to clients


        #### Supports Action Batches


        **Resource**|**Operation**

        :-------------: |:-------------:

        `/networks/{networkId}/wireless/ssids/{number}/identityPsks/{identityPskId}`
        | update

      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"name\": \"<string>\",\n    \"passphrase\":
                \"<string>\",\n    \"groupPolicyId\": \"<string>\"\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: number
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{number}}'
        - name: identityPskId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{identityPskId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                identityPskId: '1284392014819'
                name: Sample Identity PSK
                passphrase: NIalareK
                groupPolicyId: '101'
  /networks/{networkId}/wireless/ssids/{number}/schedules:
    get:
      tags:
        - PRODUCTS > Wireless > Configure > Ssids > Schedules
      summary: List The Outage Schedule For The SSID
      description: List the outage schedule for the SSID
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: number
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{number}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                enabled: true
                ranges:
                  - startDay: Tuesday
                    startTime: '01:00'
                    endDay: Tuesday
                    endTime: '05:00'
                  - startDay: Fri
                    startTime: '19:00'
                    endDay: monday
                    endTime: '05:00'
    put:
      tags:
        - PRODUCTS > Wireless > Configure > Ssids > Schedules
      summary: Update The Outage Schedule For The SSID
      description: >+
        Update the outage schedule for the SSID
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        enabled| boolean| If true, the SSID outage schedule is enabled.

        ranges| array| List of outage ranges. Has a start date and time, and end
        date and time. If this parameter is passed in along with rangesInSeconds
        parameter, this will take precedence.

        rangesInSeconds| array| List of outage ranges in seconds since Sunday at
        Midnight. Has a start and end. If this parameter is passed in along with
        the ranges parameter, ranges will take precedence.


        #### Supports Action Batches


        **Resource**|**Operation**

        :-------------: |:-------------:

        `/networks/{networkId}/wireless/ssids/{number}/schedules` | update

      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"enabled\": \"<boolean>\",\n    \"ranges\": [\n       
                {\n            \"startDay\": \"<string>\",\n           
                \"startTime\": \"<string>\",\n            \"endDay\":
                \"<string>\",\n            \"endTime\": \"<string>\"\n       
                },\n        {\n            \"startDay\":
                \"<string>\",\n            \"startTime\":
                \"<string>\",\n            \"endDay\":
                \"<string>\",\n            \"endTime\": \"<string>\"\n       
                }\n    ],\n    \"rangesInSeconds\": [\n        {\n           
                \"start\": \"<integer>\",\n            \"end\":
                \"<integer>\"\n        },\n        {\n            \"start\":
                \"<integer>\",\n            \"end\": \"<integer>\"\n       
                }\n    ]\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: number
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{number}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                enabled: true
                ranges:
                  - startDay: Tuesday
                    startTime: '01:00'
                    endDay: Tuesday
                    endTime: '05:00'
                  - startDay: Fri
                    startTime: '19:00'
                    endDay: monday
                    endTime: '05:00'
  /networks/{networkId}/wireless/ssids/{number}/splash/settings:
    get:
      tags:
        - PRODUCTS > Wireless > Configure > Ssids > Splash > settings
      summary: Display The Splash Page Settings For The Given SSID
      description: Display the splash page settings for the given SSID
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: number
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{number}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ssidNumber: 0
                splashPage: Click-through splash page
                splashUrl: https://www.custom_splash_url.com
                useSplashUrl: true
                redirectUrl: https://example.com
                useRedirectUrl: true
                welcomeMessage: Welcome!
                splashLogo:
                  md5: abcd1234
                  extension: jpg
                splashImage:
                  md5: null
                splashPrepaidFront:
                  md5: null
    put:
      tags:
        - PRODUCTS > Wireless > Configure > Ssids > Splash > settings
      summary: Modify The Splash Page Settings For The Given SSID
      description: >+
        Modify the splash page settings for the given SSID
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        splashUrl| string| [optional] The custom splash URL of the click-through
        splash page. Note that the URL can be configured without necessarily
        being used. In order to enable the custom URL, see 'useSplashUrl'

        useSplashUrl| boolean| [optional] Boolean indicating whether the users
        will be redirected to the custom splash url. A custom splash URL must be
        set if this is true. Note that depending on your SSID's access control
        settings, it may not be possible to use the custom splash URL.

        splashTimeout| integer| Splash timeout in minutes. This will determine
        how often users will see the splash page.

        redirectUrl| string| The custom redirect URL where the users will go
        after the splash page.

        useRedirectUrl| boolean| The Boolean indicating whether the the user
        will be redirected to the custom redirect URL after the splash page. A
        custom redirect URL must be set if this is true.

        welcomeMessage| string| The welcome message for the users on the splash
        page.

        splashLogo| object| The logo used in the splash page.

        splashImage| object| The image used in the splash page.

        splashPrepaidFront| object| The prepaid front image used in the splash
        page.

        blockAllTrafficBeforeSignOn| boolean| How restricted allowing traffic
        should be. If true, all traffic types are blocked until the splash page
        is acknowledged. If false, all non-HTTP traffic is allowed before the
        splash page is acknowledged.

        controllerDisconnectionBehavior| string| How login attempts should be
        handled when the controller is unreachable. Can be either 'open',
        'restricted', or 'default'.

        allowSimultaneousLogins| boolean| Whether or not to allow simultaneous
        logins from different devices.

        guestSponsorship| object| Details associated with guest sponsored
        splash.

        billing| object| Details associated with billing splash.


        #### Supports Action Batches


        **Resource**|**Operation**

        :-------------: |:-------------:

        `/networks/{networkId}/wireless/ssids/{number}/splash/settings` | update

      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"splashUrl\": \"<string>\",\n    \"useSplashUrl\":
                \"<boolean>\",\n    \"splashTimeout\": \"<integer>\",\n   
                \"redirectUrl\": \"<string>\",\n    \"useRedirectUrl\":
                \"<boolean>\",\n    \"welcomeMessage\": \"<string>\",\n   
                \"splashLogo\": {\n        \"md5\": \"<string>\",\n       
                \"extension\": \"<string>\"\n    },\n    \"splashImage\":
                {\n        \"md5\": \"<string>\",\n        \"extension\":
                \"<string>\"\n    },\n    \"splashPrepaidFront\": {\n       
                \"md5\": \"<string>\",\n        \"extension\": \"<string>\"\n   
                },\n    \"blockAllTrafficBeforeSignOn\": \"<boolean>\",\n   
                \"controllerDisconnectionBehavior\": \"<string>\",\n   
                \"allowSimultaneousLogins\": \"<boolean>\",\n   
                \"guestSponsorship\": {\n        \"durationInMinutes\":
                \"<integer>\",\n        \"guestCanRequestTimeframe\":
                \"<boolean>\"\n    },\n    \"billing\": {\n       
                \"freeAccess\": {\n            \"enabled\":
                \"<boolean>\",\n            \"durationInMinutes\":
                \"<integer>\"\n        },\n       
                \"prepaidAccessFastLoginEnabled\": \"<boolean>\",\n       
                \"replyToEmailAddress\": \"<string>\"\n    }\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: number
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{number}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ssidNumber: 0
                splashPage: Click-through splash page
                splashUrl: https://www.custom_splash_url.com
                useSplashUrl: true
                redirectUrl: https://example.com
                useRedirectUrl: true
                welcomeMessage: Welcome!
                splashLogo:
                  md5: abcd1234
                  extension: jpg
                splashImage:
                  md5: null
                splashPrepaidFront:
                  md5: null
  /networks/{networkId}/wireless/ssids/{number}/trafficShaping/rules:
    get:
      tags:
        - PRODUCTS > Wireless > Configure > Ssids > Traffic Shaping > rules
      summary: Display The Traffic Shaping Settings For A SSID On An MR Network
      description: Display the traffic shaping settings for a SSID on an MR network
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: number
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{number}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                trafficShapingEnabled: true
                defaultRulesEnabled: true
                rules:
                  - definitions:
                      - type: host
                        value: google.com
                      - type: port
                        value: '9090'
                      - type: ipRange
                        value: 192.1.0.0
                      - type: ipRange
                        value: 192.1.0.0/16
                      - type: ipRange
                        value: 10.1.0.0/16:80
                      - type: localNet
                        value: 192.168.0.0/16
                      - type: applicationCategory
                        value:
                          id: meraki:layer7/category/2
                          name: Blogging
                      - type: application
                        value:
                          id: meraki:layer7/application/133
                          name: Battle.net
                    perClientBandwidthLimits:
                      settings: custom
                      bandwidthLimits:
                        limitUp: 1000000
                        limitDown: 1000000
                    dscpTagValue: null
                    pcpTagValue: null
    put:
      tags:
        - PRODUCTS > Wireless > Configure > Ssids > Traffic Shaping > rules
      summary: Update The Traffic Shaping Settings For An SSID On An MR Network
      description: >+
        Update the traffic shaping settings for an SSID on an MR network
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        trafficShapingEnabled| boolean| Whether traffic shaping rules are
        applied to clients on your SSID.

        defaultRulesEnabled| boolean| Whether default traffic shaping rules are
        enabled (true) or disabled (false). There are 4 default rules, which can
        be seen on your network's traffic shaping page. Note that default rules
        count against the rule limit of 8.

        rules| array|     An array of traffic shaping rules. Rules are applied
        in the order that
            they are specified in. An empty list (or null) means no rules. Note that
            you are allowed a maximum of 8 rules.


        #### Supports Action Batches


        **Resource**|**Operation**

        :-------------: |:-------------:

        `/networks/{networkId}/wireless/ssids/{number}/trafficShaping/rules` |
        update

      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"trafficShapingEnabled\": \"<boolean>\",\n   
                \"defaultRulesEnabled\": \"<boolean>\",\n    \"rules\":
                [\n        {\n            \"definitions\": {\n               
                \"type\": \"array\",\n                \"description\": \"    A
                list of objects describing the definitions of your traffic
                shaping rule. At least one definition is
                required.\\n\",\n                \"maxItems\":
                2,\n                \"minItems\": 2,\n                \"items\":
                {\n                    \"type\":
                \"object\",\n                    \"required\":
                [\n                        \"type\",\n                       
                \"value\"\n                    ],\n                   
                \"properties\": {\n                        \"type\":
                {\n                            \"type\":
                \"string\",\n                            \"enum\":
                [\n                               
                \"application\",\n                               
                \"applicationCategory\",\n                               
                \"host\",\n                               
                \"port\",\n                               
                \"ipRange\",\n                               
                \"localNet\"\n                           
                ],\n                            \"description\": \"The type of
                definition. Can be one of 'application', 'applicationCategory',
                'host', 'port', 'ipRange' or
                'localNet'.\",\n                            \"default\":
                \"<string>\"\n                       
                },\n                        \"value\":
                {\n                            \"type\":
                \"string\",\n                            \"description\": \"   
                If \\\"type\\\" is 'host', 'port', 'ipRange' or 'localNet', then
                \\\"value\\\" must be a string, matching either\\n    a hostname
                (e.g. \\\"somesite.com\\\"), a port (e.g. 8080), or an IP range
                (\\\"192.1.0.0\\\",\\n    \\\"192.1.0.0/16\\\", or
                \\\"10.1.0.0/16:80\\\"). 'localNet' also supports CIDR notation,
                excluding\\n    custom ports.\\n     If \\\"type\\\" is
                'application' or 'applicationCategory', then \\\"value\\\" must
                be an object\\n    with the structure { \\\"id\\\":
                \\\"meraki:layer7/...\\\" }, where \\\"id\\\" is the application
                category or\\n    application ID (for a list of IDs for your
                network, use the trafficShaping/applicationCategories\\n   
                endpoint).\\n\",\n                            \"default\":
                \"<string>\"\n                        }\n                   
                }\n                }\n            },\n           
                \"perClientBandwidthLimits\": {\n                \"settings\":
                \"<string>\",\n                \"bandwidthLimits\":
                {\n                    \"limitUp\":
                \"<integer>\",\n                    \"limitDown\":
                \"<integer>\"\n                }\n            },\n           
                \"dscpTagValue\": \"<integer>\",\n            \"pcpTagValue\":
                \"<integer>\"\n        },\n        {\n           
                \"definitions\": {\n                \"type\":
                \"array\",\n                \"description\": \"    A list of
                objects describing the definitions of your traffic shaping rule.
                At least one definition is required.\\n\",\n               
                \"maxItems\": 2,\n                \"minItems\":
                2,\n                \"items\": {\n                    \"type\":
                \"object\",\n                    \"required\":
                [\n                        \"type\",\n                       
                \"value\"\n                    ],\n                   
                \"properties\": {\n                        \"type\":
                {\n                            \"type\":
                \"string\",\n                            \"enum\":
                [\n                               
                \"application\",\n                               
                \"applicationCategory\",\n                               
                \"host\",\n                               
                \"port\",\n                               
                \"ipRange\",\n                               
                \"localNet\"\n                           
                ],\n                            \"description\": \"The type of
                definition. Can be one of 'application', 'applicationCategory',
                'host', 'port', 'ipRange' or
                'localNet'.\",\n                            \"default\":
                \"<string>\"\n                       
                },\n                        \"value\":
                {\n                            \"type\":
                \"string\",\n                            \"description\": \"   
                If \\\"type\\\" is 'host', 'port', 'ipRange' or 'localNet', then
                \\\"value\\\" must be a string, matching either\\n    a hostname
                (e.g. \\\"somesite.com\\\"), a port (e.g. 8080), or an IP range
                (\\\"192.1.0.0\\\",\\n    \\\"192.1.0.0/16\\\", or
                \\\"10.1.0.0/16:80\\\"). 'localNet' also supports CIDR notation,
                excluding\\n    custom ports.\\n     If \\\"type\\\" is
                'application' or 'applicationCategory', then \\\"value\\\" must
                be an object\\n    with the structure { \\\"id\\\":
                \\\"meraki:layer7/...\\\" }, where \\\"id\\\" is the application
                category or\\n    application ID (for a list of IDs for your
                network, use the trafficShaping/applicationCategories\\n   
                endpoint).\\n\",\n                            \"default\":
                \"<string>\"\n                        }\n                   
                }\n                }\n            },\n           
                \"perClientBandwidthLimits\": {\n                \"settings\":
                \"<string>\",\n                \"bandwidthLimits\":
                {\n                    \"limitUp\":
                \"<integer>\",\n                    \"limitDown\":
                \"<integer>\"\n                }\n            },\n           
                \"dscpTagValue\": \"<integer>\",\n            \"pcpTagValue\":
                \"<integer>\"\n        }\n    ]\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: number
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{number}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                trafficShapingEnabled: true
                defaultRulesEnabled: true
                rules:
                  - definitions:
                      - type: host
                        value: google.com
                      - type: port
                        value: '9090'
                      - type: ipRange
                        value: 192.1.0.0
                      - type: ipRange
                        value: 192.1.0.0/16
                      - type: ipRange
                        value: 10.1.0.0/16:80
                      - type: localNet
                        value: 192.168.0.0/16
                      - type: applicationCategory
                        value:
                          id: meraki:layer7/category/2
                          name: Blogging
                      - type: application
                        value:
                          id: meraki:layer7/application/133
                          name: Battle.net
                    perClientBandwidthLimits:
                      settings: custom
                      bandwidthLimits:
                        limitUp: 1000000
                        limitDown: 1000000
                    dscpTagValue: null
                    pcpTagValue: null
  /networks/{networkId}/wireless/ssids/{number}/vpn:
    get:
      tags:
        - PRODUCTS > Wireless > Configure > Ssids > Vpn
      summary: List The VPN Settings For The SSID
      description: List the VPN settings for the SSID.
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: number
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{number}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                splitTunnel:
                  enabled: true
                  rules:
                    - protocol: any
                      destCidr: 1.1.1.1/32
                      destPort: any
                      policy: allow
                      comment: split tunnel rule 1
                    - destCidr: foo.com
                      destPort: any
                      policy: deny
                      comment: split tunnel rule 2
    put:
      tags:
        - PRODUCTS > Wireless > Configure > Ssids > Vpn
      summary: Update The VPN Settings For The SSID
      description: |+
        Update the VPN settings for the SSID
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        splitTunnel| object| The VPN split tunnel settings for this SSID.

        #### Supports Action Batches

        **Resource**|**Operation**
        :-------------: |:-------------:
        `/networks/{networkId}/wireless/ssids/{number}/vpn` | update

      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"splitTunnel\": {\n        \"enabled\":
                \"<boolean>\",\n        \"rules\": [\n           
                {\n                \"destCidr\": \"<string>\",\n               
                \"policy\": \"<string>\",\n                \"protocol\":
                \"<string>\",\n                \"destPort\":
                \"<string>\",\n                \"comment\":
                \"<string>\"\n            },\n            {\n               
                \"destCidr\": \"<string>\",\n                \"policy\":
                \"<string>\",\n                \"protocol\":
                \"<string>\",\n                \"destPort\":
                \"<string>\",\n                \"comment\":
                \"<string>\"\n            }\n        ]\n    }\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: number
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{number}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                splitTunnel:
                  enabled: true
                  rules:
                    - protocol: any
                      destCidr: 1.1.1.1/32
                      destPort: any
                      policy: allow
                      comment: split tunnel rule 1
                    - destCidr: foo.com
                      destPort: any
                      policy: deny
                      comment: split tunnel rule 2
  /networks/{networkId}/wireless/ssids:
    get:
      tags:
        - PRODUCTS > Wireless > Configure > Ssids
      summary: List The MR SSI Ds In A Network
      description: List the MR SSIDs in a network
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - number: 0
                  name: My SSID
                  enabled: true
                  splashPage: Click-through splash page
                  ssidAdminAccessible: false
                  authMode: 8021x-radius
                  encryptionMode: wpa-eap
                  wpaEncryptionMode: WPA2 only
                  radiusServers:
                    - host: 0.0.0.0
                      port: 3000
                  radiusAccountingEnabled: false
                  radiusEnabled: true
                  radiusAttributeForGroupPolicies: Filter-Id
                  radiusFailoverPolicy: 'null'
                  radiusLoadBalancingPolicy: 'null'
                  ipAssignmentMode: NAT mode
                  adminSplashUrl: http://example.com
                  splashTimeout: 30 minutes
                  walledGardenEnabled: true
                  walledGardenRanges:
                    - example.com
                    - "1.1.1.1\x1A"
                  minBitrate: 11
                  bandSelection: 5 GHz band only
                  perClientBandwidthLimitUp: 0
                  perClientBandwidthLimitDown: 0
                  visible: true
                  availableOnAllAps: false
                  availabilityTags:
                    - test-tag
                  perSsidBandwidthLimitUp: 0
                  perSsidBandwidthLimitDown: 0
                  mandatoryDhcpEnabled: false
  /networks/{networkId}/wireless/ssids/{number}:
    get:
      tags:
        - PRODUCTS > Wireless > Configure > Ssids
      summary: Return A Single MR SSID
      description: Return a single MR SSID
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: number
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{number}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                number: 0
                name: My SSID
                enabled: true
                splashPage: Click-through splash page
                ssidAdminAccessible: false
                authMode: 8021x-radius
                encryptionMode: wpa-eap
                wpaEncryptionMode: WPA2 only
                radiusServers:
                  - host: 0.0.0.0
                    port: 3000
                radiusAccountingEnabled: false
                radiusEnabled: true
                radiusAttributeForGroupPolicies: Filter-Id
                radiusFailoverPolicy: 'null'
                radiusLoadBalancingPolicy: 'null'
                ipAssignmentMode: NAT mode
                adminSplashUrl: http://example.com
                splashTimeout: 30 minutes
                walledGardenEnabled: true
                walledGardenRanges:
                  - example.com
                  - "1.1.1.1\x1A"
                minBitrate: 11
                bandSelection: 5 GHz band only
                perClientBandwidthLimitUp: 0
                perClientBandwidthLimitDown: 0
                visible: true
                availableOnAllAps: false
                availabilityTags:
                  - test-tag
                perSsidBandwidthLimitUp: 0
                perSsidBandwidthLimitDown: 0
                mandatoryDhcpEnabled: false
    put:
      tags:
        - PRODUCTS > Wireless > Configure > Ssids
      summary: Update The Attributes Of An MR SSID
      description: >+
        Update the attributes of an MR SSID
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        name| string| The name of the SSID

        enabled| boolean| Whether or not the SSID is enabled

        authMode| string| The association control method for the SSID ('open',
        'psk', 'open-with-radius', '8021x-meraki', '8021x-radius',
        '8021x-google', '8021x-localradius', 'ipsk-with-radius' or
        'ipsk-without-radius')

        enterpriseAdminAccess| string| Whether or not an SSID is accessible by
        'enterprise' administrators ('access disabled' or 'access enabled')

        encryptionMode| string| The psk encryption mode for the SSID ('wep' or
        'wpa'). This param is only valid if the authMode is 'psk'

        psk| string| The passkey for the SSID. This param is only valid if the
        authMode is 'psk'

        wpaEncryptionMode| string| The types of WPA encryption. ('WPA1 only',
        'WPA1 and WPA2', 'WPA2 only', 'WPA3 Transition Mode' or 'WPA3 only')

        dot11w| object| The current setting for Protected Management Frames
        (802.11w).

        dot11r| object| The current setting for 802.11r

        splashPage| string| The type of splash page for the SSID ('None',
        'Click-through splash page', 'Billing', 'Password-protected with Meraki
        RADIUS', 'Password-protected with custom RADIUS', 'Password-protected
        with Active Directory', 'Password-protected with LDAP', 'SMS
        authentication', 'Systems Manager Sentry', 'Facebook Wi-Fi', 'Google
        OAuth', 'Sponsored guest', 'Cisco ISE' or 'Google Apps domain'). This
        attribute is not supported for template children.

        splashGuestSponsorDomains| array| Array of valid sponsor email domains
        for sponsored guest splash type.

        oauth| object| The OAuth settings of this SSID. Only valid if splashPage
        is 'Google OAuth'.

        localRadius| object| The current setting for Local Authentication, a
        built-in RADIUS server on the access point. Only valid if authMode is
        '8021x-localradius'.

        ldap| object| The current setting for LDAP. Only valid if splashPage is
        'Password-protected with LDAP'.

        activeDirectory| object| The current setting for Active Directory. Only
        valid if splashPage is 'Password-protected with Active Directory'

        radiusServers| array| The RADIUS 802.1X servers to be used for
        authentication. This param is only valid if the authMode is
        'open-with-radius', '8021x-radius' or 'ipsk-with-radius'

        radiusProxyEnabled| boolean| If true, Meraki devices will proxy RADIUS
        messages through the Meraki cloud to the configured RADIUS auth and
        accounting servers.

        radiusTestingEnabled| boolean| If true, Meraki devices will periodically
        send Access-Request messages to configured RADIUS servers using identity
        'meraki_8021x_test' to ensure that the RADIUS servers are reachable.

        radiusCalledStationId| string| The template of the called station
        identifier to be used for RADIUS (ex. $NODE_MAC$:$VAP_NUM$).

        radiusAuthenticationNasId| string| The template of the NAS identifier to
        be used for RADIUS authentication (ex. $NODE_MAC$:$VAP_NUM$).

        radiusServerTimeout| integer| The amount of time for which a RADIUS
        client waits for a reply from the RADIUS server (must be between 1-10
        seconds).

        radiusServerAttemptsLimit| integer| The maximum number of transmit
        attempts after which a RADIUS server is failed over (must be between
        1-5).

        radiusFallbackEnabled| boolean| Whether or not higher priority RADIUS
        servers should be retried after 60 seconds.

        radiusCoaEnabled| boolean| If true, Meraki devices will act as a RADIUS
        Dynamic Authorization Server and will respond to RADIUS
        Change-of-Authorization and Disconnect messages sent by the RADIUS
        server.

        radiusFailoverPolicy| string| This policy determines how authentication
        requests should be handled in the event that all of the configured
        RADIUS servers are unreachable ('Deny access' or 'Allow access')

        radiusLoadBalancingPolicy| string| This policy determines which RADIUS
        server will be contacted first in an authentication attempt and the
        ordering of any necessary retry attempts ('Strict priority order' or
        'Round robin')

        radiusAccountingEnabled| boolean| Whether or not RADIUS accounting is
        enabled. This param is only valid if the authMode is 'open-with-radius',
        '8021x-radius' or 'ipsk-with-radius'

        radiusAccountingServers| array| The RADIUS accounting 802.1X servers to
        be used for authentication. This param is only valid if the authMode is
        'open-with-radius', '8021x-radius' or 'ipsk-with-radius' and
        radiusAccountingEnabled is 'true'

        radiusAccountingInterimInterval| integer| The interval (in seconds) in
        which accounting information is updated and sent to the RADIUS
        accounting server.

        radiusAttributeForGroupPolicies| string| Specify the RADIUS attribute
        used to look up group policies ('Filter-Id', 'Reply-Message',
        'Airespace-ACL-Name' or 'Aruba-User-Role'). Access points must receive
        this attribute in the RADIUS Access-Accept message

        ipAssignmentMode| string| The client IP assignment mode ('NAT mode',
        'Bridge mode', 'Layer 3 roaming', 'Layer 3 roaming with a concentrator'
        or 'VPN')

        useVlanTagging| boolean| Whether or not traffic should be directed to
        use specific VLANs. This param is only valid if the ipAssignmentMode is
        'Bridge mode' or 'Layer 3 roaming'

        concentratorNetworkId| string| The concentrator to use when the
        ipAssignmentMode is 'Layer 3 roaming with a concentrator' or 'VPN'.

        vlanId| integer| The VLAN ID used for VLAN tagging. This param is only
        valid when the ipAssignmentMode is 'Layer 3 roaming with a concentrator'
        or 'VPN'

        defaultVlanId| integer| The default VLAN ID used for 'all other APs'.
        This param is only valid when the ipAssignmentMode is 'Bridge mode' or
        'Layer 3 roaming'

        apTagsAndVlanIds| array| The list of tags and VLAN IDs used for VLAN
        tagging. This param is only valid when the ipAssignmentMode is 'Bridge
        mode' or 'Layer 3 roaming'

        walledGardenEnabled| boolean| Allow access to a configurable list of IP
        ranges, which users may access prior to sign-on.

        walledGardenRanges| array| Specify your walled garden by entering an
        array of addresses, ranges using CIDR notation, domain names, and domain
        wildcards (e.g. '192.168.1.1/24', '192.168.37.10/32', 'www.yahoo.com',
        '*.google.com']). Meraki's splash page is automatically included in your
        walled garden.

        radiusOverride| boolean| If true, the RADIUS response can override VLAN
        tag. This is not valid when ipAssignmentMode is 'NAT mode'.

        radiusGuestVlanEnabled| boolean| Whether or not RADIUS Guest VLAN is
        enabled. This param is only valid if the authMode is 'open-with-radius'
        and addressing mode is not set to 'isolated' or 'nat' mode

        radiusGuestVlanId| integer| VLAN ID of the RADIUS Guest VLAN. This param
        is only valid if the authMode is 'open-with-radius' and addressing mode
        is not set to 'isolated' or 'nat' mode

        minBitrate| number| The minimum bitrate in Mbps. ('1', '2', '5.5', '6',
        '9', '11', '12', '18', '24', '36', '48' or '54')

        bandSelection| string| The client-serving radio frequencies. ('Dual band
        operation', '5 GHz band only' or 'Dual band operation with Band
        Steering')

        perClientBandwidthLimitUp| integer| The upload bandwidth limit in Kbps.
        (0 represents no limit.)

        perClientBandwidthLimitDown| integer| The download bandwidth limit in
        Kbps. (0 represents no limit.)

        perSsidBandwidthLimitUp| integer| The total upload bandwidth limit in
        Kbps. (0 represents no limit.)

        perSsidBandwidthLimitDown| integer| The total download bandwidth limit
        in Kbps. (0 represents no limit.)

        lanIsolationEnabled| boolean| Boolean indicating whether Layer 2 LAN
        isolation should be enabled or disabled. Only configurable when
        ipAssignmentMode is 'Bridge mode'.

        visible| boolean| Boolean indicating whether APs should advertise or
        hide this SSID. APs will only broadcast this SSID if set to true

        availableOnAllAps| boolean| Boolean indicating whether all APs should
        broadcast the SSID or if it should be restricted to APs matching any
        availability tags. Can only be false if the SSID has availability tags.

        availabilityTags| array| Accepts a list of tags for this SSID. If
        availableOnAllAps is false, then the SSID will only be broadcast by APs
        with tags matching any of the tags in this list.

        mandatoryDhcpEnabled| boolean| If true, Mandatory DHCP will enforce that
        clients connecting to this SSID must use the IP address assigned by the
        DHCP server. Clients who use a static IP address won't be able to
        associate.

        adultContentFilteringEnabled| boolean| Boolean indicating whether or not
        adult content will be blocked

        dnsRewrite| object| DNS servers rewrite settings


        #### Supports Action Batches


        **Resource**|**Operation**

        :-------------: |:-------------:

        `/networks/{networkId}/wireless/ssids/{number}` | update

      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"name\": \"<string>\",\n    \"enabled\":
                \"<boolean>\",\n    \"authMode\": \"<string>\",\n   
                \"enterpriseAdminAccess\": \"<string>\",\n   
                \"encryptionMode\": \"<string>\",\n    \"psk\":
                \"<string>\",\n    \"wpaEncryptionMode\": \"<string>\",\n   
                \"dot11w\": {\n        \"enabled\": \"<boolean>\",\n       
                \"required\": \"<boolean>\"\n    },\n    \"dot11r\": {\n       
                \"enabled\": \"<boolean>\",\n        \"adaptive\":
                \"<boolean>\"\n    },\n    \"splashPage\": \"<string>\",\n   
                \"splashGuestSponsorDomains\": [\n        \"<string>\",\n       
                \"<string>\"\n    ],\n    \"oauth\": {\n       
                \"allowedDomains\": [\n            \"<string>\",\n           
                \"<string>\"\n        ]\n    },\n    \"localRadius\": {\n       
                \"cacheTimeout\": \"<integer>\",\n       
                \"passwordAuthentication\": {\n            \"enabled\":
                \"<boolean>\"\n        },\n       
                \"certificateAuthentication\": {\n            \"enabled\":
                \"<boolean>\",\n            \"useLdap\":
                \"<boolean>\",\n            \"useOcsp\":
                \"<boolean>\",\n            \"ocspResponderUrl\":
                \"<string>\",\n            \"clientRootCaCertificate\":
                {\n                \"contents\": \"<string>\"\n           
                }\n        }\n    },\n    \"ldap\": {\n        \"servers\":
                [\n            {\n                \"host\":
                \"<string>\",\n                \"port\":
                \"<integer>\"\n            },\n            {\n               
                \"host\": \"<string>\",\n                \"port\":
                \"<integer>\"\n            }\n        ],\n       
                \"credentials\": {\n            \"distinguishedName\":
                \"<string>\",\n            \"password\": \"<string>\"\n       
                },\n        \"baseDistinguishedName\": \"<string>\",\n       
                \"serverCaCertificate\": {\n            \"contents\":
                \"<string>\"\n        }\n    },\n    \"activeDirectory\":
                {\n        \"servers\": [\n            {\n               
                \"host\": \"<string>\",\n                \"port\":
                \"<integer>\"\n            },\n            {\n               
                \"host\": \"<string>\",\n                \"port\":
                \"<integer>\"\n            }\n        ],\n       
                \"credentials\": {\n            \"logonName\":
                \"<string>\",\n            \"password\": \"<string>\"\n       
                }\n    },\n    \"radiusServers\": [\n        {\n           
                \"host\": \"<string>\",\n            \"port\":
                \"<integer>\",\n            \"secret\": \"<string>\"\n       
                },\n        {\n            \"host\": \"<string>\",\n           
                \"port\": \"<integer>\",\n            \"secret\":
                \"<string>\"\n        }\n    ],\n    \"radiusProxyEnabled\":
                \"<boolean>\",\n    \"radiusTestingEnabled\":
                \"<boolean>\",\n    \"radiusCalledStationId\":
                \"<string>\",\n    \"radiusAuthenticationNasId\":
                \"<string>\",\n    \"radiusServerTimeout\": \"<integer>\",\n   
                \"radiusServerAttemptsLimit\": \"<integer>\",\n   
                \"radiusFallbackEnabled\": \"<boolean>\",\n   
                \"radiusCoaEnabled\": \"<boolean>\",\n   
                \"radiusFailoverPolicy\": \"<string>\",\n   
                \"radiusLoadBalancingPolicy\": \"<string>\",\n   
                \"radiusAccountingEnabled\": \"<boolean>\",\n   
                \"radiusAccountingServers\": [\n        {\n            \"host\":
                \"<string>\",\n            \"port\": \"<integer>\",\n           
                \"secret\": \"<string>\"\n        },\n        {\n           
                \"host\": \"<string>\",\n            \"port\":
                \"<integer>\",\n            \"secret\": \"<string>\"\n       
                }\n    ],\n    \"radiusAccountingInterimInterval\":
                \"<integer>\",\n    \"radiusAttributeForGroupPolicies\":
                \"<string>\",\n    \"ipAssignmentMode\": \"<string>\",\n   
                \"useVlanTagging\": \"<boolean>\",\n   
                \"concentratorNetworkId\": \"<string>\",\n    \"vlanId\":
                \"<integer>\",\n    \"defaultVlanId\": \"<integer>\",\n   
                \"apTagsAndVlanIds\": [\n        {\n            \"tags\":
                [\n                \"<string>\",\n               
                \"<string>\"\n            ],\n            \"vlanId\":
                \"<integer>\"\n        },\n        {\n            \"tags\":
                [\n                \"<string>\",\n               
                \"<string>\"\n            ],\n            \"vlanId\":
                \"<integer>\"\n        }\n    ],\n    \"walledGardenEnabled\":
                \"<boolean>\",\n    \"walledGardenRanges\": [\n       
                \"<string>\",\n        \"<string>\"\n    ],\n   
                \"radiusOverride\": \"<boolean>\",\n   
                \"radiusGuestVlanEnabled\": \"<boolean>\",\n   
                \"radiusGuestVlanId\": \"<integer>\",\n    \"minBitrate\":
                \"<float>\",\n    \"bandSelection\": \"<string>\",\n   
                \"perClientBandwidthLimitUp\": \"<integer>\",\n   
                \"perClientBandwidthLimitDown\": \"<integer>\",\n   
                \"perSsidBandwidthLimitUp\": \"<integer>\",\n   
                \"perSsidBandwidthLimitDown\": \"<integer>\",\n   
                \"lanIsolationEnabled\": \"<boolean>\",\n    \"visible\":
                \"<boolean>\",\n    \"availableOnAllAps\": \"<boolean>\",\n   
                \"availabilityTags\": [\n        \"<string>\",\n       
                \"<string>\"\n    ],\n    \"mandatoryDhcpEnabled\":
                \"<boolean>\",\n    \"adultContentFilteringEnabled\":
                \"<boolean>\",\n    \"dnsRewrite\": {\n        \"enabled\":
                \"<boolean>\",\n        \"dnsCustomNameservers\": [\n           
                \"<string>\",\n            \"<string>\"\n        ]\n    }\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: number
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{number}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                number: 0
                name: My SSID
                enabled: true
                splashPage: Click-through splash page
                ssidAdminAccessible: false
                authMode: 8021x-radius
                encryptionMode: wpa-eap
                wpaEncryptionMode: WPA2 only
                radiusServers:
                  - host: 0.0.0.0
                    port: 3000
                radiusAccountingEnabled: false
                radiusEnabled: true
                radiusAttributeForGroupPolicies: Filter-Id
                radiusFailoverPolicy: 'null'
                radiusLoadBalancingPolicy: 'null'
                ipAssignmentMode: NAT mode
                adminSplashUrl: http://example.com
                splashTimeout: 30 minutes
                walledGardenEnabled: true
                walledGardenRanges:
                  - example.com
                  - "1.1.1.1\x1A"
                minBitrate: 11
                bandSelection: 5 GHz band only
                perClientBandwidthLimitUp: 0
                perClientBandwidthLimitDown: 0
                visible: true
                availableOnAllAps: false
                availabilityTags:
                  - test-tag
                perSsidBandwidthLimitUp: 0
                perSsidBandwidthLimitDown: 0
                mandatoryDhcpEnabled: false
  /networks/{networkId}/wireless/airMarshal:
    get:
      tags:
        - PRODUCTS > Wireless > Monitor > Air Marshal
      summary: List Air Marshal scan results from a network
      description: List Air Marshal scan results from a network
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - ssid: linksys
                  bssids:
                    - bssid: '00:11:22:33:44:55'
                      contained: false
                      detectedBy:
                        - device: Q234-ABCD-5678
                          rssi: 17
                  channels:
                    - 36
                    - 40
                  firstSeen: 1518365681
                  lastSeen: 1526087474
                  wiredMacs:
                    - '00:11:22:33:44:55'
                  wiredVlans:
                    - 0
                    - 108
                  wiredLastSeen: 1526087474
  /networks/{networkId}/wireless/channelUtilizationHistory:
    get:
      tags:
        - PRODUCTS > Wireless > Monitor > Channel Utilization History
      summary: Return AP channel utilization over time for a device or network client
      description: Return AP channel utilization over time for a device or network client
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - startTs: '2020-01-01T00:00:00Z'
                  endTs: '2020-01-01T01:00:00Z'
                  utilizationTotal: 9.89
                  utilization80211: 7.22
                  utilizationNon80211: 2.67
                - startTs: '2020-01-01T01:00:00Z'
                  endTs: '2020-01-01T02:00:00Z'
                  utilizationTotal: 8.78
                  utilization80211: 6.38
                  utilizationNon80211: 2.41
  /networks/{networkId}/wireless/clientCountHistory:
    get:
      tags:
        - PRODUCTS > Wireless > Monitor > Client Count History
      summary: >-
        Return wireless client counts over time for a network, device, or
        network client
      description: >-
        Return wireless client counts over time for a network, device, or
        network client
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - startTs: '2020-01-01T00:00:00Z'
                  endTs: '2020-01-01T01:00:00Z'
                  clientCount: 14
                - startTs: '2020-01-01T01:00:00Z'
                  endTs: '2020-01-01T02:00:00Z'
                  clientCount: 29
  /networks/{networkId}/wireless/clients/{clientId}/connectionStats:
    get:
      tags:
        - PRODUCTS > Wireless > Monitor > Clients > Connection Stats
      summary: Aggregated Connectivity Info For A Given Client On This Network
      description: >-
        Aggregated connectivity info for a given client on this network. Clients
        are identified by their MAC.
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: clientId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{clientId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                mac: 00:61:71:c8:51:27
                connectionStats:
                  assoc: 0
                  auth: 4
                  dhcp: 0
                  dns: 0
                  success: 10
  /networks/{networkId}/wireless/clients/connectionStats:
    get:
      tags:
        - PRODUCTS > Wireless > Monitor > Clients > Connection Stats
      summary: Aggregated Connectivity Info For This Network Grouped By Clients
      description: Aggregated connectivity info for this network, grouped by clients
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - mac: 00:61:71:c8:51:27
                  connectionStats:
                    assoc: 0
                    auth: 4
                    dhcp: 0
                    dns: 0
                    success: 10
                - mac: 1c:4d:70:7f:5e:5e
                  connectionStats:
                    assoc: 0
                    auth: 1
                    dhcp: 0
                    dns: 0
                    success: 24
                - mac: 1c:4d:70:81:8d:0a
                  connectionStats:
                    assoc: 1
                    auth: 0
                    dhcp: 0
                    dns: 0
                    success: 16
  /networks/{networkId}/wireless/clients/{clientId}/connectivityEvents:
    get:
      tags:
        - PRODUCTS > Wireless > Monitor > Clients > Connectivity Events
      summary: >-
        List the wireless connectivity events for a client within a network in
        the timespan.
      description: >-
        List the wireless connectivity events for a client within a network in
        the timespan.
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: clientId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{clientId}}'
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - occurredAt: 1518365681
                  deviceSerial: Q234-ABCD-5678
                  band: 5
                  ssidNumber: 1
                  type: bad
                  subtype: radius
                  severity: bad
                  durationMs: 100.1
                  channel: 44
                  rssi: 80
                  eventData:
                    clientIp: 10.1.2.3
  /networks/{networkId}/wireless/clients/{clientId}/latencyHistory:
    get:
      tags:
        - PRODUCTS > Wireless > Monitor > Clients > Latency History
      summary: Return the latency history for a client
      description: >-
        Return the latency history for a client. Clients can be identified by a
        client key or either the MAC or IP depending on whether the network uses
        Track-by-IP. The latency data is from a sample of 2% of packets and is
        grouped into 4 traffic categories: background, best effort, video,
        voice. Within these categories the sampled packet counters are bucketed
        by latency in milliseconds.
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: clientId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{clientId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - t0: 1550534400
                  t1: 1550620800
                  latencyBinsByCategory:
                    backgroundTraffic:
                      '0.5': 41750
                      '1.0': 21552
                      '2.0': 59940
                      '4.0': 146622
                      '8.0': 57354
                      '16.0': 0
                      '32.0': 9954
                      '64.0': 0
                      '128.0': 0
                      '256.0': 1896
                      '512.0': 0
                      '1024.0': 0
                      '2048.0': 0
                    bestEffortTraffic:
                      '0.5': 1840899
                      '1.0': 1644506
                      '2.0': 629958
                      '4.0': 449564
                      '8.0': 2009658
                      '16.0': 1329568
                      '32.0': 282168
                      '64.0': 97573
                      '128.0': 191977
                      '256.0': 30560
                      '512.0': 26032
                      '1024.0': 4943
                      '2048.0': 12072
                    videoTraffic:
                      '0.5': 0
                      '1.0': 0
                      '2.0': 0
                      '4.0': 0
                      '8.0': 0
                      '16.0': 0
                      '32.0': 0
                      '64.0': 0
                      '128.0': 0
                      '256.0': 0
                      '512.0': 0
                      '1024.0': 0
                      '2048.0': 0
                    voiceTraffic:
                      '0.5': 716
                      '1.0': 948
                      '2.0': 474
                      '4.0': 78
                      '8.0': 0
                      '16.0': 0
                      '32.0': 0
                      '64.0': 0
                      '128.0': 0
                      '256.0': 0
                      '512.0': 0
                      '1024.0': 0
                      '2048.0': 0
  /networks/{networkId}/wireless/clients/{clientId}/latencyStats:
    get:
      tags:
        - PRODUCTS > Wireless > Monitor > Clients > Latency Stats
      summary: Aggregated Latency Info For A Given Client On This Network
      description: >-
        Aggregated latency info for a given client on this network. Clients are
        identified by their MAC.
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: clientId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{clientId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                mac: 00:61:71:c8:51:27
                latencyStats:
                  backgroundTraffic:
                    rawDistribution:
                      '0': 1234
                      '1': 2345
                      '2': 3456
                      '4': 4567
                      '8': 5678
                      '16': 6789
                      '32': 7890
                      '64': 8901
                      '128': 9012
                      '256': 83
                      '512': 1234
                      '1024': 2345
                      '2048': 9999
                    avg: 606.52
                  bestEffortTraffic: same shape as backgroundTraffic
                  videoTraffic: same shape as backgroundTraffic
                  voiceTraffic: same shape as backgroundTraffic
  /networks/{networkId}/wireless/clients/latencyStats:
    get:
      tags:
        - PRODUCTS > Wireless > Monitor > Clients > Latency Stats
      summary: Aggregated Latency Info For This Network Grouped By Clients
      description: Aggregated latency info for this network, grouped by clients
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - mac: 00:61:71:c8:51:27
                  latencyStats:
                    backgroundTraffic:
                      rawDistribution:
                        '0': 1234
                        '1': 2345
                        '2': 3456
                        '4': 4567
                        '8': 5678
                        '16': 6789
                        '32': 7890
                        '64': 8901
                        '128': 9012
                        '256': 83
                        '512': 1234
                        '1024': 2345
                        '2048': 9999
                      avg: 606.52
                    bestEffortTraffic: same shape as backgroundTraffic
                    videoTraffic: same shape as backgroundTraffic
                    voiceTraffic: same shape as backgroundTraffic
                - mac: 1c:4d:70:7f:5e:5e
                  latencyStats:
                    backgroundTraffic:
                      rawDistribution:
                        '0': 1234
                        '1': 2345
                        '2': 3456
                        '4': 4567
                        '8': 5678
                        '16': 6789
                        '32': 7890
                        '64': 8901
                        '128': 9012
                        '256': 83
                        '512': 1234
                        '1024': 2345
                        '2048': 9999
                      avg: 606.52
                    bestEffortTraffic: same shape as backgroundTraffic
                    videoTraffic: same shape as backgroundTraffic
                    voiceTraffic: same shape as backgroundTraffic
                - mac: 1c:4d:70:81:8d:0a
                  latencyStats:
                    backgroundTraffic:
                      rawDistribution:
                        '0': 1234
                        '1': 2345
                        '2': 3456
                        '4': 4567
                        '8': 5678
                        '16': 6789
                        '32': 7890
                        '64': 8901
                        '128': 9012
                        '256': 83
                        '512': 1234
                        '1024': 2345
                        '2048': 9999
                      avg: 606.52
                    bestEffortTraffic: same shape as backgroundTraffic
                    videoTraffic: same shape as backgroundTraffic
                    voiceTraffic: same shape as backgroundTraffic
  /devices/{serial}/wireless/connectionStats:
    get:
      tags:
        - PRODUCTS > Wireless > Monitor > Connection Stats
      summary: Aggregated Connectivity Info For A Given AP On This Network
      description: Aggregated connectivity info for a given AP on this network
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: serial
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{serial}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                serial: Q2JC-2MJM-FHRD
                connectionStats:
                  assoc: 0
                  auth: 1
                  dhcp: 0
                  dns: 0
                  success: 43
  /networks/{networkId}/wireless/connectionStats:
    get:
      tags:
        - PRODUCTS > Wireless > Monitor > Connection Stats
      summary: Aggregated Connectivity Info For This Network
      description: Aggregated connectivity info for this network
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                assoc: 1
                auth: 5
                dhcp: 0
                dns: 0
                success: 51
  /networks/{networkId}/wireless/dataRateHistory:
    get:
      tags:
        - PRODUCTS > Wireless > Monitor > Data Rate History
      summary: Return PHY data rates over time for a network, device, or network client
      description: Return PHY data rates over time for a network, device, or network client
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - startTs: '2020-01-01T00:00:00Z'
                  endTs: '2020-01-01T01:00:00Z'
                  averageKbps: 151806
                  downloadKbps: 144839
                  uploadKbps: 158837
                - startTs: '2020-01-01T01:00:00Z'
                  endTs: '2020-01-01T02:00:00Z'
                  averageKbps: 167864
                  downloadKbps: 156179
                  uploadKbps: 188375
  /networks/{networkId}/wireless/devices/connectionStats:
    get:
      tags:
        - PRODUCTS > Wireless > Monitor > Devices > Connection Stats
      summary: Aggregated connectivity info for this network, grouped by node
      description: Aggregated connectivity info for this network, grouped by node
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - serial: Q2JC-2MJM-FHRD
                  connectionStats:
                    assoc: 0
                    auth: 1
                    dhcp: 0
                    dns: 0
                    success: 43
                - serial: Q2FJ-3SHB-Y2K2
                  connectionStats:
                    assoc: 1
                    auth: 4
                    dhcp: 0
                    dns: 0
                    success: 8
  /networks/{networkId}/wireless/devices/latencyStats:
    get:
      tags:
        - PRODUCTS > Wireless > Monitor > Devices > Latency Stats
      summary: Aggregated latency info for this network, grouped by node
      description: Aggregated latency info for this network, grouped by node
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - serial: Q2JC-2MJM-FHRD
                  latencyStats:
                    backgroundTraffic:
                      rawDistribution:
                        '0': 1234
                        '1': 2345
                        '2': 3456
                        '4': 4567
                        '8': 5678
                        '16': 6789
                        '32': 7890
                        '64': 8901
                        '128': 9012
                        '256': 83
                        '512': 1234
                        '1024': 2345
                        '2048': 9999
                      avg: 606.52
                    bestEffortTraffic: same shape as backgroundTraffic
                    videoTraffic: same shape as backgroundTraffic
                    voiceTraffic: same shape as backgroundTraffic
                - serial: Q2FJ-3SHB-Y2K2
                  latencyStats:
                    backgroundTraffic:
                      rawDistribution:
                        '0': 1234
                        '1': 2345
                        '2': 3456
                        '4': 4567
                        '8': 5678
                        '16': 6789
                        '32': 7890
                        '64': 8901
                        '128': 9012
                        '256': 83
                        '512': 1234
                        '1024': 2345
                        '2048': 9999
                      avg: 606.52
                    bestEffortTraffic: same shape as backgroundTraffic
                    videoTraffic: same shape as backgroundTraffic
                    voiceTraffic: same shape as backgroundTraffic
  /networks/{networkId}/wireless/failedConnections:
    get:
      tags:
        - PRODUCTS > Wireless > Monitor > Failed Connections
      summary: >-
        List of all failed client connection events on this network in a given
        time range
      description: >-
        List of all failed client connection events on this network in a given
        time range
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - ssidNumber: 0
                  vlan: -1
                  clientMac: 00:61:71:c8:51:27
                  serial: Q2JC-2MJM-FHRD
                  failureStep: auth
                  type: 802.1X auth fail
                  ts: '2018-02-11T00:00:00.090210Z'
                - ssidNumber: 0
                  vlan: -1
                  clientMac: 00:61:71:c8:51:27
                  nodeId: Q2FJ-3SHB-Y2K2
                  failureStep: auth
                  type: 802.1X auth fail
                  ts: '2018-02-11T00:00:00.090210Z'
                - ssidNumber: 0
                  vlan: -1
                  clientMac: 00:61:71:c8:51:27
                  nodeId: Q2FJ-3SHB-Y2K2
                  failureStep: auth
                  type: 802.1X auth fail
                  ts: '2018-02-11T00:00:00.090210Z'
                - ssidNumber: 0
                  vlan: -1
                  clientMac: 00:61:71:c8:51:27
                  nodeId: Q2FJ-3SHB-Y2K2
                  failureStep: auth
                  type: 802.1X auth fail
                  ts: '2018-02-11T00:00:00.090210Z'
                - ssidNumber: 0
                  vlan: -1
                  clientMac: 1c:4d:70:7f:5e:5e
                  nodeId: Q2FJ-3SHB-Y2K2
                  failureStep: assoc
                  type: 802.1X auth fail
                  ts: '2018-02-11T00:00:00.090210Z'
                - ssidNumber: 0
                  vlan: -1
                  clientMac: 1c:4d:70:81:8d:0a
                  nodeId: Q2FJ-3SHB-Y2K2
                  failureStep: auth
                  type: 802.1X auth fail
                  ts: '2018-02-11T00:00:00.090210Z'
  /networks/{networkId}/wireless/latencyHistory:
    get:
      tags:
        - PRODUCTS > Wireless > Monitor > Latency History
      summary: >-
        Return average wireless latency over time for a network, device, or
        network client
      description: >-
        Return average wireless latency over time for a network, device, or
        network client
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - startTs: '2020-01-01T00:00:00Z'
                  endTs: '2020-01-01T01:00:00Z'
                  avgLatencyMs: 29
                - startTs: '2020-01-01T01:00:00Z'
                  endTs: '2020-01-01T02:00:00Z'
                  avgLatencyMs: 76
  /devices/{serial}/wireless/latencyStats:
    get:
      tags:
        - PRODUCTS > Wireless > Monitor > Latency Stats
      summary: Aggregated Latency Info For A Given AP On This Network
      description: Aggregated latency info for a given AP on this network
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: serial
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{serial}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                serial: Q2JC-2MJM-FHRD
                latencyStats:
                  backgroundTraffic:
                    rawDistribution:
                      '0': 1234
                      '1': 2345
                      '2': 3456
                      '4': 4567
                      '8': 5678
                      '16': 6789
                      '32': 7890
                      '64': 8901
                      '128': 9012
                      '256': 83
                      '512': 1234
                      '1024': 2345
                      '2048': 9999
                    avg: 606.52
                  bestEffortTraffic: same shape as backgroundTraffic
                  videoTraffic: same shape as backgroundTraffic
                  voiceTraffic: same shape as backgroundTraffic
  /networks/{networkId}/wireless/latencyStats:
    get:
      tags:
        - PRODUCTS > Wireless > Monitor > Latency Stats
      summary: Aggregated Latency Info For This Network
      description: Aggregated latency info for this network
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                backgroundTraffic:
                  rawDistribution:
                    '0': 1234
                    '1': 2345
                    '2': 3456
                    '4': 4567
                    '8': 5678
                    '16': 6789
                    '32': 7890
                    '64': 8901
                    '128': 9012
                    '256': 83
                    '512': 1234
                    '1024': 2345
                    '2048': 9999
                  avg: 606.52
                bestEffortTraffic: same shape as backgroundTraffic
                videoTraffic: same shape as backgroundTraffic
                voiceTraffic: same shape as backgroundTraffic
  /networks/{networkId}/wireless/meshStatuses:
    get:
      tags:
        - PRODUCTS > Wireless > Monitor > Mesh Statuses
      summary: List wireless mesh statuses for repeaters
      description: List wireless mesh statuses for repeaters
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                serial: Q234-ABCD-5678
                meshRoute:
                  - Q234-ABCD-5678
                  - QWEY-SKTD-ST01
                  - QWEY-SKTD-ST02
                latestMeshPerformance:
                  mbps: 43
                  metric: 12345
                  usagePercentage: 100%
  /networks/{networkId}/wireless/signalQualityHistory:
    get:
      tags:
        - PRODUCTS > Wireless > Monitor > Signal Quality History
      summary: >-
        Return signal quality (SNR/RSSI) over time for a device or network
        client
      description: >-
        Return signal quality (SNR/RSSI) over time for a device or network
        client
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - startTs: '2020-01-01T00:00:00Z'
                  endTs: '2020-01-01T01:00:00Z'
                  snr: 27
                  rssi: -77
                - startTs: '2020-01-01T01:00:00Z'
                  endTs: '2020-01-01T02:00:00Z'
                  snr: 28
                  rssi: -76
  /devices/{serial}/wireless/status:
    get:
      tags:
        - PRODUCTS > Wireless > Monitor > Status
      summary: Return the SSID statuses of an access point
      description: Return the SSID statuses of an access point
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: serial
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{serial}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                basicServiceSets:
                  - ssidName: My SSID
                    ssidNumber: 0
                    enabled: true
                    band: 2.4 GHz
                    bssid: 8A:15:04:00:00:00
                    channel: 11
                    channelWidth: 20 MHz
                    power: 18 dBm
                    visible: true
                    broadcasting: true
                  - ssidName: My SSID
                    ssidNumber: 0
                    enabled: true
                    band: 5 GHz
                    bssid: 8A:15:14:00:00:00
                    channel: 149
                    channelWidth: 80 MHz
                    power: 18 dBm
                    visible: true
                    broadcasting: true
  /networks/{networkId}/wireless/usageHistory:
    get:
      tags:
        - PRODUCTS > Wireless > Monitor > Usage History
      summary: Return AP usage over time for a device or network client
      description: Return AP usage over time for a device or network client
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - startTs: '2020-01-01T00:00:00Z'
                  endTs: '2020-01-01T01:00:00Z'
                  totalKbps: 2590
                  sentKbps: 159
                  receivedKbps: 2431
                - startTs: '2020-01-01T01:00:00Z'
                  endTs: '2020-01-01T02:00:00Z'
                  totalKbps: 1108
                  sentKbps: 144
                  receivedKbps: 964
  /organizations/{organizationId}/sm/apnsCert:
    get:
      tags:
        - PRODUCTS > Sm > Configure > Apns Cert
      summary: Get the organization's APNS certificate
      description: Get the organization's APNS certificate
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: organizationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{organizationId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                certificate: >
                  -----BEGIN CERTIFICATE-----

                  MIIFdjCCBF6gAwIBAgIIM/hhf5ww8MwwDQYJKoZIhvcNAQELBQAwgYwxQDA+BgNV

                  BAMMN0FwcGxlIEFwcGxpY2F0aW9uIEludGVncmF0aW9uIDIgQ2VydGlmaWNhdGlv

                  biBBdXRob3JpdHkxJjAkBgNVBAsMHUFwcGxlIENlcnRpZmljYXRpb24gQXV0aG9y

                  aXR5MRMwEQYDVQQKDApBcHBsZSBJbmMuMQswCQYDVQQGEwJVUzAeFw0yMDAyMjYx

                  ODIzNDJaFw0yMTAyMjUxODIzNDJaMIGPMUwwSgYKCZImiZPyLGQBAQw8Y29tLmFw

                  cGxlLm1nbXQuRXh0ZXJuYWwuOTA3NDJhYmYtZDhhZC00MTc2LTllZmQtMGNiMzg1

                  MTM1MGM0MTIwMAYDVQQDDClBUFNQOjkwNzQyYWJmLWQ4YWQtNDE3Ni05ZWZkLTBj

                  YjM4NTEzNTBjNDELMAkGA1UEBhMCVVMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAw

                  ggEKAoIBAQDANdpo62hfxkP1IpMPXuO1+xKekUkY+iYae6cRaP886bodUaH1OwCj

                  Qd011u9Vng6m8I9rcLdIOS+IkFGKcTAHRYY3noqfEQUPyi5TN6yM1/mVYVoWZUnY

                  TrNWqDN/HfRagdYfZyQ7kAtOY2K8TF78HLLqQm7ez2+r4qibumoSli9+qCzKwDW/

                  hbx7JTeMlbYkhLTFgBkRxlp+usKymsLKm8D7kdbxtct4mx6p9z1FiNu4U1Hi/PgK

                  I/V3zHD4Ww7SzTICiLdCPeAmt042JvXAMQi0qhzrEdDiapmWwUC9xiiORN0BTIRA

                  T+DddTx8Xcly4wj9vQFdGUGLrJnzB3xZAgMBAAGjggHVMIIB0TAJBgNVHRMEAjAA

                  MB8GA1UdIwQYMBaAFPe+fCFgkds9G3vYOjKBad+ebH+bMIIBHAYDVR0gBIIBEzCC

                  AQ8wggELBgkqhkiG92NkBQEwgf0wgcMGCCsGAQUFBwICMIG2DIGzUmVsaWFuY2Ug

                  b24gdGhpcyBjZXJ0aWZpY2F0ZSBieSBhbnkgcGFydHkgYXNzdW1lcyBhY2NlcHRh

                  bmNlIG9mIHRoZSB0aGVuIGFwcGxpY2FibGUgc3RhbmRhcmQgdGVybXMgYW5kIGNv

                  bmRpdGlvbnMgb2YgdXNlLCBjZXJ0aWZpY2F0ZSBwb2xpY3kgYW5kIGNlcnRpZmlj

                  YXRpb24gcHJhY3RpY2Ugc3RhdGVtZW50cy4wNQYIKwYBBQUHAgEWKWh0dHA6Ly93

                  d3cuYXBwbGUuY29tL2NlcnRpZmljYXRlYXV0aG9yaXR5MBMGA1UdJQQMMAoGCCsG

                  AQUFBwMCMDAGA1UdHwQpMCcwJaAjoCGGH2h0dHA6Ly9jcmwuYXBwbGUuY29tL2Fh

                  aTJjYS5jcmwwHQYDVR0OBBYEFDj4Jizt9bQX7dn3ypIanvaNIy8fMAsGA1UdDwQE

                  AwIHgDAQBgoqhkiG92NkBgMCBAIFADANBgkqhkiG9w0BAQsFAAOCAQEARmLmy4Mh

                  80hTBHMj2whrC2LR0dIe2ngAUwYGSocyPZOzlGZYntUvpsNGwflbWSPNxFpVF15z

                  exEcLPKM4f9KGdM27s/m/x1Es2us9Vve+wS+N0C84zMC++FJBIxj3yAINXqSpYJv

                  bA5wccHlzP9F9Ks7sVNQB8y0mibYahtxVV959gC4522t5SRaEEsd82oTCtXE2Ljg

                  fQ1IAmWi4MuMSPwp26oDSwun8Wxyx+sfi/it9YWxD36Ga9mrfIjK1WIHyhge0HHr

                  olnvMfxgwI9E5gGV/4bQzPlmsHdz+/pLupWMkALaAxI9D7ajUG7iyyjJBCOpsr1s

                  FjDvo6WUkaqMHA==

                  -----END CERTIFICATE-----
  /networks/{networkId}/sm/bypassActivationLockAttempts:
    post:
      tags:
        - PRODUCTS > Sm > Configure > Bypass Activation Lock Attempts
      summary: Bypass Activation Lock Attempt
      description: |
        Bypass activation lock attempt
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        ids| array| The ids of the devices to attempt activation lock bypass.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"ids\": [\n        \"<string>\",\n       
                \"<string>\"\n    ]\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: '1234'
                status: pending
                data: {}
  /networks/{networkId}/sm/bypassActivationLockAttempts/{attemptId}:
    get:
      tags:
        - PRODUCTS > Sm > Configure > Bypass Activation Lock Attempts
      summary: Bypass Activation Lock Attempt Status
      description: Bypass activation lock attempt status
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: attemptId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{attemptId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: '1234'
                status: complete
                data:
                  '2090938209':
                    success: false
                    errors:
                      - Activation lock bypass code not known for this device
                  '38290139892':
                    success: true
  /networks/{networkId}/sm/devices/{deviceId}/certs:
    get:
      tags:
        - PRODUCTS > Sm > Configure > Devices > Certs
      summary: List the certs on a device
      description: List the certs on a device
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: deviceId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{deviceId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - name: My Cert
                  notValidAfter: '2018-05-12T00:00:00Z'
                  notValidBefore: '2018-02-11T00:00:00Z'
                  certPem: |
                    -----BEGIN CERTIFICATE-----
                    -----END CERTIFICATE-----
                  deviceId: '1234'
                  issuer: ''
                  subject: ''
                  id: '15'
  /networks/{networkId}/sm/devices/{deviceId}/deviceProfiles:
    get:
      tags:
        - PRODUCTS > Sm > Configure > Devices > Device Profiles
      summary: Get the profiles associated with a device
      description: Get the profiles associated with a device
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: deviceId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{deviceId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - deviceId: '1234'
                  id: '1284392014819'
                  isEncrypted: true
                  isManaged: true
                  profileData: {}
                  profileIdentifier: com.test.app
                  name: My profile
                  version: 0.0.1
  /networks/{networkId}/sm/devices/fields:
    put:
      tags:
        - PRODUCTS > Sm > Configure > Devices > Fields
      summary: Modify the fields of a device
      description: >
        Modify the fields of a device
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        wifiMac| string| The wifiMac of the device to be modified.

        id| string| The id of the device to be modified.

        serial| string| The serial of the device to be modified.

        deviceFields| object| The new fields of the device. Each field of this
        object is optional.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"deviceFields\": {\n        \"name\":
                \"<string>\",\n        \"notes\": \"<string>\"\n    },\n   
                \"wifiMac\": \"<string>\",\n    \"id\": \"<string>\",\n   
                \"serial\": \"<string>\"\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: '1284392014819'
                serial: F5XKHEBX
                wifiMac: '00:11:22:33:44:55'
                name: Miles's phone
                notes: Here's some info about my device
  /networks/{networkId}/sm/devices/{deviceId}/networkAdapters:
    get:
      tags:
        - PRODUCTS > Sm > Configure > Devices > Network Adapters
      summary: List the network adapters of a device
      description: List the network adapters of a device
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: deviceId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{deviceId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - dhcpServer: 123.123.123.1
                  dnsServer: 8.8.8.8, 8.8.4.4
                  gateway: 1.2.3.5
                  id: '1284392014819'
                  ip: 1.2.3.4
                  mac: '00:11:22:33:44:55'
                  name: en0
                  subnet: 255.255.255.0
  /networks/{networkId}/sm/devices/{deviceId}/restrictions:
    get:
      tags:
        - PRODUCTS > Sm > Configure > Devices > Restrictions
      summary: List the restrictions on a device
      description: List the restrictions on a device
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: deviceId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{deviceId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - profile: com.meraki.sm.1
                  restrictions:
                    myRestriction:
                      value: true
  /networks/{networkId}/sm/devices/{deviceId}/securityCenters:
    get:
      tags:
        - PRODUCTS > Sm > Configure > Devices > Security Centers
      summary: List the security centers on a device
      description: List the security centers on a device
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: deviceId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{deviceId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - isRooted: true
                  hasAntiVirus: true
                  antiVirusName: meraki_av
                  isFireWallEnabled: true
                  hasFireWallInstalled: true
                  fireWallName: meraki_fw
                  isDiskEncrypted: true
                  isAutoLoginDisabled: true
                  id: '1284392014819'
                  runningProcs: /software,/software_2
  /networks/{networkId}/sm/devices/{deviceId}/softwares:
    get:
      tags:
        - PRODUCTS > Sm > Configure > Devices > Softwares
      summary: Get a list of softwares associated with a device
      description: Get a list of softwares associated with a device
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: deviceId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{deviceId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - appId: '1234'
                  bundleSize: null
                  createdAt: '2018-02-11T00:00:00Z'
                  deviceId: '1234'
                  dynamicSize: null
                  id: '1284392014819'
                  identifier: com.test.app
                  installedAt: '2018-05-12T00:00:00Z'
                  toInstall: null
                  iosRedemptionCode: null
                  isManaged: true
                  itunesId: null
                  licenseKey: null
                  name: My app
                  path: /Path/to/app.app
                  redemptionCode: null
                  shortVersion: null
                  status: null
                  toUninstall: false
                  uninstalledAt: null
                  updatedAt: '2018-05-12T00:00:00Z'
                  vendor: Apple
                  version: '0.1'
  /networks/{networkId}/sm/devices/{deviceId}/wlanLists:
    get:
      tags:
        - PRODUCTS > Sm > Configure > Devices > Wlan Lists
      summary: List the saved SSID names on a device
      description: List the saved SSID names on a device
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: deviceId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{deviceId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - createdAt: '2018-02-11T00:00:00Z'
                  id: '1284392014819'
                  xml: 'Preferred networks on en0:'
  /networks/{networkId}/sm/devices/modifyTags:
    post:
      tags:
        - PRODUCTS > Sm > Configure > Devices
      summary: Add Delete Or Update The Tags Of A Set Of Devices
      description: >
        Add, delete, or update the tags of a set of devices
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        wifiMacs| array| The wifiMacs of the devices to be modified.

        ids| array| The ids of the devices to be modified.

        serials| array| The serials of the devices to be modified.

        scope| array| The scope (one of all, none, withAny, withAll, withoutAny,
        or withoutAll) and a set of tags of the devices to be modified.

        tags| array| The tags to be added, deleted, or updated.

        updateAction| string| One of add, delete, or update. Only devices that
        have been modified will be returned.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"tags\": [\n        \"<string>\",\n       
                \"<string>\"\n    ],\n    \"updateAction\": \"<string>\",\n   
                \"wifiMacs\": [\n        \"<string>\",\n       
                \"<string>\"\n    ],\n    \"ids\": [\n       
                \"<string>\",\n        \"<string>\"\n    ],\n    \"serials\":
                [\n        \"<string>\",\n        \"<string>\"\n    ],\n   
                \"scope\": [\n        \"<string>\",\n        \"<string>\"\n   
                ]\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: '1284392014819'
                  serial: F5XKHEBX
                  wifiMac: '00:11:22:33:44:55'
                  tags:
                    - tag1
                    - tag2
  /networks/{networkId}/sm/devices/checkin:
    post:
      tags:
        - PRODUCTS > Sm > Configure > Devices
      summary: Force Check In A Set Of Devices
      description: >
        Force check-in a set of devices
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        wifiMacs| array| The wifiMacs of the devices to be checked-in.

        ids| array| The ids of the devices to be checked-in.

        serials| array| The serials of the devices to be checked-in.

        scope| array| The scope (one of all, none, withAny, withAll, withoutAny,
        or withoutAll) and a set of tags of the devices to be checked-in.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"wifiMacs\": [\n        \"<string>\",\n       
                \"<string>\"\n    ],\n    \"ids\": [\n       
                \"<string>\",\n        \"<string>\"\n    ],\n    \"serials\":
                [\n        \"<string>\",\n        \"<string>\"\n    ],\n   
                \"scope\": [\n        \"<string>\",\n        \"<string>\"\n   
                ]\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ids: '"1284392014819"'
  /networks/{networkId}/sm/devices:
    get:
      tags:
        - PRODUCTS > Sm > Configure > Devices
      summary: >-
        List The Devices Enrolled In An SM Network With Various Specified Fields
        And Filters
      description: >-
        List the devices enrolled in an SM network with various specified fields
        and filters
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: '1284392014819'
                name: Miles's phone
                tags:
                  - tag1
                  - tag2
                ssid: My SSID
                wifiMac: '00:11:22:33:44:55'
                osName: iOS 9.3.5
                systemModel: iPhone
                uuid: 3d990628ede4c628d52
                serialNumber: F5XKHEBX
                serial: F5XKHEBX
                ip: 1.2.3.4
                notes: Here's some info about my device
  /networks/{networkId}/sm/devices/lock:
    post:
      tags:
        - PRODUCTS > Sm > Configure > Devices
      summary: Lock A Set Of Devices
      description: >
        Lock a set of devices
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        wifiMacs| array| The wifiMacs of the devices to be locked.

        ids| array| The ids of the devices to be locked.

        serials| array| The serials of the devices to be locked.

        scope| array| The scope (one of all, none, withAny, withAll, withoutAny,
        or withoutAll) and a set of tags of the devices to be wiped.

        pin| integer| The pin number for locking macOS devices (a six digit
        number). Required only for macOS devices.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"wifiMacs\": [\n        \"<string>\",\n       
                \"<string>\"\n    ],\n    \"ids\": [\n       
                \"<string>\",\n        \"<string>\"\n    ],\n    \"serials\":
                [\n        \"<string>\",\n        \"<string>\"\n    ],\n   
                \"scope\": [\n        \"<string>\",\n        \"<string>\"\n   
                ],\n    \"pin\": \"<integer>\"\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ids: '"1284392014819"'
  /networks/{networkId}/sm/devices/move:
    post:
      tags:
        - PRODUCTS > Sm > Configure > Devices
      summary: Move A Set Of Devices To A New Network
      description: >
        Move a set of devices to a new network
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        wifiMacs| array| The wifiMacs of the devices to be moved.

        ids| array| The ids of the devices to be moved.

        serials| array| The serials of the devices to be moved.

        scope| array| The scope (one of all, none, withAny, withAll, withoutAny,
        or withoutAll) and a set of tags of the devices to be moved.

        newNetwork| string| The new network to which the devices will be moved.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"newNetwork\": \"<string>\",\n    \"wifiMacs\":
                [\n        \"<string>\",\n        \"<string>\"\n    ],\n   
                \"ids\": [\n        \"<string>\",\n        \"<string>\"\n   
                ],\n    \"serials\": [\n        \"<string>\",\n       
                \"<string>\"\n    ],\n    \"scope\": [\n       
                \"<string>\",\n        \"<string>\"\n    ]\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                ids: '"1284392014819"'
                newNetwork: N_24329156
  /networks/{networkId}/sm/devices/{deviceId}/refreshDetails:
    post:
      tags:
        - PRODUCTS > Sm > Configure > Devices
      summary: Refresh The Details Of A Device
      description: Refresh the details of a device
      requestBody:
        content: {}
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: deviceId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{deviceId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /networks/{networkId}/sm/devices/{deviceId}/unenroll:
    post:
      tags:
        - PRODUCTS > Sm > Configure > Devices
      summary: Unenroll A Device
      description: Unenroll a device
      requestBody:
        content: {}
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: deviceId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{deviceId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                success: true
  /networks/{networkId}/sm/devices/wipe:
    post:
      tags:
        - PRODUCTS > Sm > Configure > Devices
      summary: Wipe A Device
      description: >
        Wipe a device
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        wifiMac| string| The wifiMac of the device to be wiped.

        id| string| The id of the device to be wiped.

        serial| string| The serial of the device to be wiped.

        pin| integer| The pin number (a six digit value) for wiping a macOS
        device. Required only for macOS devices.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"wifiMac\": \"<string>\",\n    \"id\":
                \"<string>\",\n    \"serial\": \"<string>\",\n    \"pin\":
                \"<integer>\"\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: '1284392014819'
  /networks/{networkId}/sm/profiles:
    get:
      tags:
        - PRODUCTS > Sm > Configure > Profiles
      summary: List all profiles in a network
      description: List all profiles in a network
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: '1284392014819'
                  name: WiFi/VPN Profile
                  description: This contains WiFi and VPN settings for authorized users.
                  scope: with
                  tags:
                    - tag1
                    - tag2
                    - tag3
                  targetGroupId: null
  /networks/{networkId}/sm/targetGroups:
    post:
      tags:
        - PRODUCTS > Sm > Configure > Target Groups
      summary: Add A Target Group
      description: >
        Add a target group
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        name| string| The name of this target group

        scope| string| The scope and tag options of the target group. Comma
        separated values beginning with one of withAny, withAll, withoutAny,
        withoutAll, all, none, followed by tags. Default to none if empty.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n    \"name\": \"<string>\",\n    \"scope\": \"<string>\"\n}"'
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                name: My target group
                scope: none
                tags: '[]'
                type: devices
    get:
      tags:
        - PRODUCTS > Sm > Configure > Target Groups
      summary: List The Target Groups In This Network
      description: List the target groups in this network
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - name: My target group
                  scope: none
                  tags: '[]'
                  type: devices
  /networks/{networkId}/sm/targetGroups/{targetGroupId}:
    delete:
      tags:
        - PRODUCTS > Sm > Configure > Target Groups
      summary: Delete A Target Group From A Network
      description: Delete a target group from a network
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: targetGroupId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{targetGroupId}}'
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    get:
      tags:
        - PRODUCTS > Sm > Configure > Target Groups
      summary: Return A Target Group
      description: Return a target group
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: targetGroupId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{targetGroupId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                name: My target group
                scope: none
                tags: '[]'
                type: devices
    put:
      tags:
        - PRODUCTS > Sm > Configure > Target Groups
      summary: Update A Target Group
      description: >
        Update a target group
         #### Body Parameters 
        **Parameter**|**Type**|**Description** 
         :-------------: |:-------------: |:-------------: 
        name| string| The name of this target group

        scope| string| The scope and tag options of the target group. Comma
        separated values beginning with one of withAny, withAll, withoutAny,
        withoutAll, all, none, followed by tags. Default to none if empty.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\n    \"name\": \"<string>\",\n    \"scope\": \"<string>\"\n}"'
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: targetGroupId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{targetGroupId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                name: My target group
                scope: none
                tags: '[]'
                type: devices
  /networks/{networkId}/sm/userAccessDevices/{userAccessDeviceId}:
    delete:
      tags:
        - PRODUCTS > Sm > Configure > User Access Devices
      summary: Delete A User Access Device
      description: >+
        Delete a User Access Device

        #### Supports Action Batches


        **Resource**|**Operation**

        :-------------: |:-------------:

        `/networks/{networkId}/sm/userAccessDevices/{userAccessDeviceId}` |
        destroy

      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: userAccessDeviceId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{userAccessDeviceId}}'
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
  /networks/{networkId}/sm/userAccessDevices:
    get:
      tags:
        - PRODUCTS > Sm > Configure > User Access Devices
      summary: List User Access Devices And Its Trusted Access Connections
      description: List User Access Devices and its Trusted Access Connections
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: '1284392014819'
                  name: My Personal Phone
                  systemType: ios
                  mac: '00:11:22:33:44:55'
                  username: milesmeraki
                  email: miles@meraki.com
                  tags:
                    - tag1
                    - tag2
                  trustedAccessConnections:
                    - trustedAccessConfigId: '1234'
                      downloadedAt: '2018-02-11T00:00:00Z'
                      scepCompletedAt: '2018-05-12T00:00:00Z'
                      lastConnectedAt: '2018-05-12T00:00:00Z'
  /networks/{networkId}/sm/users/{userId}/deviceProfiles:
    get:
      tags:
        - PRODUCTS > Sm > Configure > Users > Device Profiles
      summary: Get the profiles associated with a user
      description: Get the profiles associated with a user
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: userId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{userId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - deviceId: '1234'
                  id: '1284392014819'
                  isEncrypted: true
                  isManaged: true
                  profileData: {}
                  profileIdentifier: com.test.app
                  name: My profile
                  version: 0.0.1
  /networks/{networkId}/sm/users/{userId}/softwares:
    get:
      tags:
        - PRODUCTS > Sm > Configure > Users > Softwares
      summary: Get a list of softwares associated with a user
      description: Get a list of softwares associated with a user
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: userId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{userId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - appId: '1234'
                  bundleSize: null
                  createdAt: '2018-02-11T00:00:00Z'
                  deviceId: '1234'
                  dynamicSize: null
                  id: '1284392014819'
                  identifier: com.test.app
                  installedAt: '2018-05-12T00:00:00Z'
                  toInstall: null
                  iosRedemptionCode: null
                  isManaged: true
                  itunesId: null
                  licenseKey: null
                  name: My app
                  path: /Path/to/app.app
                  redemptionCode: null
                  shortVersion: null
                  status: null
                  toUninstall: false
                  uninstalledAt: null
                  updatedAt: '2018-05-12T00:00:00Z'
                  vendor: Apple
                  version: '0.1'
  /networks/{networkId}/sm/users:
    get:
      tags:
        - PRODUCTS > Sm > Configure > Users
      summary: >-
        List The Owners In An SM Network With Various Specified Fields And
        Filters
      description: >-
        List the owners in an SM network with various specified fields and
        filters
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: '1234'
                  email: miles@meraki.com
                  fullName: Miles Meraki
                  username: ''
                  hasPassword: false
                  tags:
                    - tag1
                    - tag2
                  adGroups: []
                  asmGroups: []
                  isExternal: false
                  displayName: Miles Meraki <miles@meraki.com>
                  hasIdentityCertificate: false
                  userThumbnail: https://s3.amazonaws.com/image.extension
  /organizations/{organizationId}/sm/vppAccounts/{vppAccountId}:
    get:
      tags:
        - PRODUCTS > Sm > Configure > Vpp Accounts
      summary: >-
        Get A Hash Containing The Unparsed Token Of The VPP Account With The
        Given ID
      description: >-
        Get a hash containing the unparsed token of the VPP account with the
        given ID
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: organizationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{organizationId}}'
        - name: vppAccountId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{vppAccountId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: '1284392014819'
                vppServiceToken: >-
                  eyJleHBEYXRlIjoiMjAyMS0wMi0yNVQxNjo1NToyMy0wODAwIiwidG9rZW4iOiJBZFN4YWxyQmhFK0FhSWUrYTJDbDE1aDg1N0ZkUDkrL2c5c00xUWhlMG1WS0ZKWkdOL0hxRnQxeitSVERSTkNLNkxhMEExellML3JFa2tpOG1pbk8xRDlJWHhZQnBERy8wZllhTE44UlUrMDhYZkZsNlVwenkrRE8wQW41ZGgxWncwSmZiYmlXU21VVG94TFJmV1BCcVE9PSIsIm9yZ05hbWUiOiJNZXJha2kgTExDICsgRGV2ZWxvcGVyIn0=
  /organizations/{organizationId}/sm/vppAccounts:
    get:
      tags:
        - PRODUCTS > Sm > Configure > Vpp Accounts
      summary: List The VPP Accounts In The Organization
      description: List the VPP accounts in the organization
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: organizationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{organizationId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: '1284392014819'
                  vppServiceToken: >-
                    eyJleHBEYXRlIjoiMjAyMS0wMi0yNVQxNjo1NToyMy0wODAwIiwidG9rZW4iOiJBZFN4YWxyQmhFK0FhSWUrYTJDbDE1aDg1N0ZkUDkrL2c5c00xUWhlMG1WS0ZKWkdOL0hxRnQxeitSVERSTkNLNkxhMEExellML3JFa2tpOG1pbk8xRDlJWHhZQnBERy8wZllhTE44UlUrMDhYZkZsNlVwenkrRE8wQW41ZGgxWncwSmZiYmlXU21VVG94TFJmV1BCcVE9PSIsIm9yZ05hbWUiOiJNZXJha2kgTExDICsgRGV2ZWxvcGVyIn0=
  /networks/{networkId}/sm/devices/{deviceId}/cellularUsageHistory:
    get:
      tags:
        - PRODUCTS > Sm > Monitor > devices > Cellular Usage History
      summary: Return the client's daily cellular data usage history
      description: >-
        Return the client's daily cellular data usage history. Usage data is in
        kilobytes.
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: deviceId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{deviceId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - received: 61
                  sent: 138
                  ts: '2018-05-12T00:00:00Z'
  /networks/{networkId}/sm/devices/{deviceId}/connectivity:
    get:
      tags:
        - PRODUCTS > Sm > Monitor > devices > Connectivity
      summary: >-
        Returns historical connectivity data (whether a device is regularly
        checking in to Dashboard).
      description: >-
        Returns historical connectivity data (whether a device is regularly
        checking in to Dashboard).
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: deviceId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{deviceId}}'
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - firstSeenAt: '2018-02-11T00:00:00Z'
                  lastSeenAt: '2018-05-12T00:00:00Z'
  /networks/{networkId}/sm/devices/{deviceId}/desktopLogs:
    get:
      tags:
        - PRODUCTS > Sm > Monitor > devices > Desktop Logs
      summary: >-
        Return historical records of various Systems Manager network connection
        details for desktop devices.
      description: >-
        Return historical records of various Systems Manager network connection
        details for desktop devices.
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: deviceId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{deviceId}}'
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - measuredAt: '2018-05-12T00:00:00Z'
                  user: milesmeraki
                  networkDevice: NIC
                  networkDriver: Driver
                  wifiChannel: '11'
                  wifiAuth: wpa-psk
                  wifiBssid: '00:11:22:33:44:55'
                  wifiSsid: ssid
                  wifiRssi: '-11'
                  wifiNoise: '-99'
                  dhcpServer: 1.2.3.4
                  ip: 1.2.3.4
                  networkMTU: '1500'
                  subnet: 192.168.1.0/24
                  gateway: 1.2.3.5
                  publicIP: 123.123.123.1
                  dnsServer: '8'
                  ts: '2018-05-12T00:00:00Z'
  /networks/{networkId}/sm/devices/{deviceId}/deviceCommandLogs:
    get:
      tags:
        - PRODUCTS > Sm > Monitor > devices > Device Command Logs
      summary: Return historical records of commands sent to Systems Manager devices
      description: >-
        Return historical records of commands sent to Systems Manager devices.
        Note that this will include the name of the Dashboard user who initiated
        the command if it was generated by a Dashboard admin rather than the
        automatic behavior of the system; you may wish to filter this out of any
        reports.
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: deviceId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{deviceId}}'
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - action: UpdateProfile
                  name: My profile
                  details: '{}'
                  dashboardUser: Miles Meraki
                  ts: '2018-05-12T00:00:00Z'
  /networks/{networkId}/sm/devices/{deviceId}/performanceHistory:
    get:
      tags:
        - PRODUCTS > Sm > Monitor > devices > Performance History
      summary: >-
        Return historical records of various Systems Manager client metrics for
        desktop devices.
      description: >-
        Return historical records of various Systems Manager client metrics for
        desktop devices.
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: networkId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{networkId}}'
        - name: deviceId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{deviceId}}'
      responses:
        '200':
          description: OK
          headers:
            Link:
              schema:
                type: string
                example: <string>
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - cpuPercentUsed: 0.95
                  memFree: 1024
                  memWired: 4096
                  memActive: 1024
                  memInactive: 2048
                  networkSent: 512
                  networkReceived: 512
                  swapUsed: 768
                  diskUsage:
                    c:
                      used: 2048
                      space: 9096
                  ts: '2018-05-12T00:00:00Z'
  /organizations/{organization_id}/insight/applications:
    get:
      tags:
        - PRODUCTS > Insight > configure > Applications
      summary: List all Insight tracked applications
      description: List all Insight tracked applications
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: organization_id
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{organization_id}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - applicationId: '19.12'
                  name: Meraki HTTPS
                  thresholds:
                    type: smart
                    byNetwork:
                      - networkId: N_12345678
                        goodput: 50000
                        responseDuration: 1000
                      - networkId: L_23456789
                        goodput: 3000
                        responseDuration: 4000
  /organizations/{organizationId}/insight/monitoredMediaServers:
    post:
      tags:
        - PRODUCTS > Insight > configure > Monitored Media Servers
      summary: Add A Media Server To Be Monitored For This Organization
      description: >-
        Add a media server to be monitored for this organization. Only valid for
        organizations with Meraki Insight.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"name\": \"<string>\",\n    \"address\":
                \"<string>\",\n    \"bestEffortMonitoringEnabled\":
                \"<boolean>\"\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: organizationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{organizationId}}'
      responses:
        '201':
          description: Created
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: '1284392014819'
                name: Sample VoIP Provider
                address: 123.123.123.1
                bestEffortMonitoringEnabled: true
    get:
      tags:
        - PRODUCTS > Insight > configure > Monitored Media Servers
      summary: List The Monitored Media Servers For This Organization
      description: >-
        List the monitored media servers for this organization. Only valid for
        organizations with Meraki Insight.
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: organizationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{organizationId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                - id: '1284392014819'
                  name: Sample VoIP Provider
                  address: 123.123.123.1
                  bestEffortMonitoringEnabled: true
  /organizations/{organizationId}/insight/monitoredMediaServers/{monitoredMediaServerId}:
    delete:
      tags:
        - PRODUCTS > Insight > configure > Monitored Media Servers
      summary: Delete A Monitored Media Server From This Organization
      description: >-
        Delete a monitored media server from this organization. Only valid for
        organizations with Meraki Insight.
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: organizationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{organizationId}}'
        - name: monitoredMediaServerId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{monitoredMediaServerId}}'
      responses:
        '204':
          description: No Content
          headers:
            Content-Type:
              schema:
                type: string
                example: text/plain
          content:
            text/plain:
              schema:
                type: string
              example: ''
    get:
      tags:
        - PRODUCTS > Insight > configure > Monitored Media Servers
      summary: Return A Monitored Media Server For This Organization
      description: >-
        Return a monitored media server for this organization. Only valid for
        organizations with Meraki Insight.
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: organizationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{organizationId}}'
        - name: monitoredMediaServerId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{monitoredMediaServerId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: '1284392014819'
                name: Sample VoIP Provider
                address: 123.123.123.1
                bestEffortMonitoringEnabled: true
    put:
      tags:
        - PRODUCTS > Insight > configure > Monitored Media Servers
      summary: Update A Monitored Media Server For This Organization
      description: >-
        Update a monitored media server for this organization. Only valid for
        organizations with Meraki Insight.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: >-
                "{\n    \"name\": \"<string>\",\n    \"address\":
                \"<string>\",\n    \"bestEffortMonitoringEnabled\":
                \"<boolean>\"\n}"
      parameters:
        - name: X-Cisco-Meraki-API-Key
          in: header
          schema:
            type: string
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: organizationId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{organizationId}}'
        - name: monitoredMediaServerId
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{monitoredMediaServerId}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                id: '1284392014819'
                name: Sample VoIP Provider
                address: 123.123.123.1
                bestEffortMonitoringEnabled: true
